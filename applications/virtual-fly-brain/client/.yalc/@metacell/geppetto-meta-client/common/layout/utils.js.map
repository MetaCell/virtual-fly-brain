{"version":3,"file":"utils.js","names":["widget2Node","configuration","id","name","component","status","panelName","enableClose","others","type","enableRename","config","isEqual","a","b","Date","getTime","undefined","prototype","keys","Object","length","every","k","findBorderToMinimizeTo","borderNodes","borderNode","getConfig","isMinimizedPanel","getWidget","store","getState","widgets"],"sources":["../../../src/common/layout/utils.ts"],"sourcesContent":["import { Widget } from './model';\nimport {BorderNode} from \"./types\";\n\n/**\n * Transforms a widget configuration into a flexlayout node descriptor\n */\nexport function widget2Node (configuration: Widget) {\n  const { id, name, component, status, panelName, enableClose = true, ...others } = configuration;\n  return {\n    id,\n    name,\n    status,\n    component,\n    type: \"tab\",\n    enableRename: false,\n    enableClose,\n    panelName,\n    ...others,\n    // attr defined inside config, will also be available from within flexlayout nodes.  For example:  node.getNodeById(id).getConfig()\n    config: { ...configuration } ,\n  };\n}\n\n/**\n * Deep object comparison\n * @param {*} a \n * @param {*} b \n */\nexport function isEqual (a: any, b: any): boolean {\n  if (a === b) {\n    return true;\n  }\n  if (a instanceof Date && b instanceof Date) {\n    return a.getTime() === b.getTime();\n  }\n  if (!a || !b || (typeof a !== 'object' && typeof b !== 'object')) {\n    return a === b;\n  }\n  if (a === null || a === undefined || b === null || b === undefined) {\n    return false;\n  }\n  if (a.prototype !== b.prototype) {\n    return false;\n  }\n  let keys = Object.keys(a);\n  if (keys.length !== Object.keys(b).length) {\n    return false;\n  }\n  return keys.every(k => isEqual(a[k], b[k]));\n}\n\n\nexport function findBorderToMinimizeTo(borderNodes: BorderNode[]): BorderNode | null {\n  for (let borderNode of borderNodes) {\n    if (borderNode.getConfig()?.isMinimizedPanel) {\n      return borderNode;\n    }\n  }\n  return null;\n}\n\nexport function getWidget(store, id){\n  return store.getState().widgets[id];\n}"],"mappings":";;;;;;;;;;;;;;;;;;;AAGA;AACA;AACA;AACO,SAASA,WAAW,CAAEC,aAAqB,EAAE;EAClD,IAAQC,EAAE,GAAwED,aAAa,CAAvFC,EAAE;IAAEC,IAAI,GAAkEF,aAAa,CAAnFE,IAAI;IAAEC,SAAS,GAAuDH,aAAa,CAA7EG,SAAS;IAAEC,MAAM,GAA+CJ,aAAa,CAAlEI,MAAM;IAAEC,SAAS,GAAoCL,aAAa,CAA1DK,SAAS;IAAA,wBAAoCL,aAAa,CAA/CM,WAAW;IAAXA,WAAW,sCAAG,IAAI;IAAKC,MAAM,4BAAKP,aAAa;EAC/F;IACEC,EAAE,EAAFA,EAAE;IACFC,IAAI,EAAJA,IAAI;IACJE,MAAM,EAANA,MAAM;IACND,SAAS,EAATA,SAAS;IACTK,IAAI,EAAE,KAAK;IACXC,YAAY,EAAE,KAAK;IACnBH,WAAW,EAAXA,WAAW;IACXD,SAAS,EAATA;EAAS,GACNE,MAAM;IACT;IACAG,MAAM,oBAAOV,aAAa;EAAE;AAEhC;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASW,OAAO,CAAEC,CAAM,EAAEC,CAAM,EAAW;EAChD,IAAID,CAAC,KAAKC,CAAC,EAAE;IACX,OAAO,IAAI;EACb;EACA,IAAID,CAAC,YAAYE,IAAI,IAAID,CAAC,YAAYC,IAAI,EAAE;IAC1C,OAAOF,CAAC,CAACG,OAAO,EAAE,KAAKF,CAAC,CAACE,OAAO,EAAE;EACpC;EACA,IAAI,CAACH,CAAC,IAAI,CAACC,CAAC,IAAK,QAAOD,CAAC,MAAK,QAAQ,IAAI,QAAOC,CAAC,MAAK,QAAS,EAAE;IAChE,OAAOD,CAAC,KAAKC,CAAC;EAChB;EACA,IAAID,CAAC,KAAK,IAAI,IAAIA,CAAC,KAAKI,SAAS,IAAIH,CAAC,KAAK,IAAI,IAAIA,CAAC,KAAKG,SAAS,EAAE;IAClE,OAAO,KAAK;EACd;EACA,IAAIJ,CAAC,CAACK,SAAS,KAAKJ,CAAC,CAACI,SAAS,EAAE;IAC/B,OAAO,KAAK;EACd;EACA,IAAIC,IAAI,GAAGC,MAAM,CAACD,IAAI,CAACN,CAAC,CAAC;EACzB,IAAIM,IAAI,CAACE,MAAM,KAAKD,MAAM,CAACD,IAAI,CAACL,CAAC,CAAC,CAACO,MAAM,EAAE;IACzC,OAAO,KAAK;EACd;EACA,OAAOF,IAAI,CAACG,KAAK,CAAC,UAAAC,CAAC;IAAA,OAAIX,OAAO,CAACC,CAAC,CAACU,CAAC,CAAC,EAAET,CAAC,CAACS,CAAC,CAAC,CAAC;EAAA,EAAC;AAC7C;AAGO,SAASC,sBAAsB,CAACC,WAAyB,EAAqB;EAAA,2CAC5DA,WAAW;IAAA;EAAA;IAAlC,oDAAoC;MAAA;MAAA,IAA3BC,UAAU;MACjB,6BAAIA,UAAU,CAACC,SAAS,EAAE,kDAAtB,sBAAwBC,gBAAgB,EAAE;QAC5C,OAAOF,UAAU;MACnB;IACF;EAAC;IAAA;EAAA;IAAA;EAAA;EACD,OAAO,IAAI;AACb;AAEO,SAASG,SAAS,CAACC,KAAK,EAAE5B,EAAE,EAAC;EAClC,OAAO4B,KAAK,CAACC,QAAQ,EAAE,CAACC,OAAO,CAAC9B,EAAE,CAAC;AACrC"}