{"version":3,"file":"Variable.js","names":["extend","require","ObjectWrapper","Variable","options","prototype","constructor","call","anonymousTypes","undefined","types","pointerValue","capabilities","values","Object","create","getTypes","anonTypes","allTypes","concat","getAnonymousTypes","getType","length","getValues","getValue","getInitialValues","getWrappedObj","initialValues","getInitialValue","isStatic","getPosition","position","getChildren","extendApi","extensionObj","push","capabilityId","hasCapability","i","getCapabilities","setTypes","addVariableReference","module","exports"],"sources":["../../src/model/Variable.js"],"sourcesContent":["\n\n/**\n * Client class use to represent a variable.\n *\n * @module model/Variable\n * @author Giovanni Idili\n */\n\nconst extend = require('../common/Utils').extend;\nconst ObjectWrapper = require('./ObjectWrapper');\n\nfunction Variable (options) {\n  ObjectWrapper.prototype.constructor.call(this, options);\n  this.anonymousTypes = (options.anonymousTypes != undefined) ? options.anonymousTypes : [];\n  this.types = (options.types != undefined) ? options.types : [];\n  this.pointerValue = options.pointerValue;\n  this.capabilities = [];\n  this.values = (options.values != undefined) ? options.values : [];\n}\n\nVariable.prototype = Object.create(ObjectWrapper.prototype);\nVariable.prototype.constructor = Variable;\n\n\n/**\n * Get the list of types for this variable\n *\n * @command Variable.getTypes()\n *\n * @returns {List<Type>} - array of types\n *\n */\nVariable.prototype.getTypes = function () {\n  var types = (this.types != undefined) ? this.types : [];\n  var anonTypes = (this.anonymousTypes != undefined) ? this.anonymousTypes : [];\n  var allTypes = types.concat(anonTypes);\n  return allTypes;\n};\n\n/**\n * Get the list of the anonymous types for this variable\n *\n * @command Variable.getAnonymousTypes()\n *\n * @returns {List<Type>} - array of types\n *\n */\nVariable.prototype.getAnonymousTypes = function () {\n  return this.anonymousTypes;\n};\n\n\n/**\n * Get the type of this variable, return a list if it has more than one\n *\n * @command Variable.getType()\n *\n * @returns List<Type>} - array of types\n *\n */\nVariable.prototype.getType = function () {\n  var types = this.getTypes();\n  if (types.length == 1) {\n    return types[0];\n  } else {\n    return types;\n  }\n};\n\n// TODO: Matteo: Review before merging to development\n\nVariable.prototype.getValues = function () {\n  return this.values;\n};\n\nVariable.prototype.getValue = function () {\n  var values = this.getValues();\n  if (values.length == 1) {\n    return values[0];\n  } else {\n    return values;\n  }\n};\n\n/**\n * Get the list of values for this variable\n *\n * @command Variable.getInitialValues()\n *\n * @returns {List<Value>} - array of values\n *\n */\nVariable.prototype.getInitialValues = function () {\n  var pointerValue = this.pointerValue;\n  var values = this.getWrappedObj().initialValues;\n\n  if (values == undefined) {\n    values = [];\n  }\n\n  // if there is a pointer value just return that\n  if (pointerValue != undefined && pointerValue != null) {\n    values = [pointerValue];\n  }\n\n  return values;\n};\n\n/**\n * Get the initial value for this variable, or a list if more than one\n *\n * @command Variable.getInitialValue()\n *\n * @returns {Value} - array of values\n *\n */\nVariable.prototype.getInitialValue = function () {\n  var pointerValue = this.pointerValue;\n  var values = this.getWrappedObj().initialValues;\n\n  if (values == undefined) {\n    values = [];\n  }\n\n  // if there is a pointer value just return that\n  if (pointerValue != undefined && pointerValue != null) {\n    values = [pointerValue];\n  }\n\n  if (values.length == 1) {\n    return values[0];\n  } else {\n    return values;\n  }\n};\n\n/**\n * Check if the variable is static\n *\n * @command Variable.isStatic()\n *\n * @returns {bool} - Boolean\n *\n */\nVariable.prototype.isStatic = function () {\n  return this.getWrappedObj().static;\n};\n\n/**\n * Gets position for the variable\n *\n * @command Variable.isStatic()\n *\n * @returns {Object} - position for the variable\n *\n */\nVariable.prototype.getPosition = function () {\n  return this.getWrappedObj().position;\n};\n\n/**\n * Get combined children\n *\n * @command Variable.getChildren()\n *\n * @returns {List<Object>} - List of children\n *\n */\nVariable.prototype.getChildren = function () {\n  // only anonymousTypes as containment == true in the model (they are not references)\n  return this.anonymousTypes;\n};\n\n/**\n * Extends with methods from another object\n *\n * @command Variable.extendApi(extensionObj)\n */\nVariable.prototype.extendApi = function (extensionObj) {\n  extend(this, extensionObj);\n  this.capabilities.push(extensionObj.capabilityId);\n};\n\n/**\n * Checks if the instance has a given capability\n *\n * @command Variable.hasCapability(capabilityId)\n *\n * @returns {Boolean}\n */\nVariable.prototype.hasCapability = function (capabilityId) {\n  var hasCapability = false;\n  var capabilities = this.capabilities;\n\n  for (var i = 0; i < capabilities.length; i++) {\n    if (capabilities[i] === capabilityId) {\n      hasCapability = true;\n    }\n  }\n\n  return hasCapability;\n};\n\n/**\n * Get variable capabilities\n *\n * @returns {Array}\n */\nVariable.prototype.getCapabilities = function () {\n  return this.capabilities;\n};\n\n// Overriding set\nVariable.prototype.setTypes = function (types) {\n  this.types = types;\n  for (var i = 0; i < types.length; i++) {\n    if (types[i].addVariableReference != undefined) {\n      types[i].addVariableReference(this);\n    }\n  }\n  return this;\n};\n\n\n// Compatibility with new imports and old require syntax\nVariable.default = Variable;\nmodule.exports = Variable;\n\n"],"mappings":"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"}