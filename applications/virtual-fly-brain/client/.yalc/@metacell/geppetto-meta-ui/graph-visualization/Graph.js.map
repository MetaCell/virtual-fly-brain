{"version":3,"file":"Graph.js","names":["_react","_interopRequireWildcard","require","_reactDom","_interopRequireDefault","_propTypes","d3","THREE","_reactForceGraph2d","_reactForceGraph3d","_OBJLoader","_utils","_excluded","obj","__esModule","_getRequireWildcardCache","e","WeakMap","r","t","_typeof","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","o","Symbol","iterator","constructor","prototype","_extends","assign","bind","target","arguments","length","source","key","apply","ownKeys","keys","getOwnPropertySymbols","filter","enumerable","push","_objectSpread","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","sourceSymbolKeys","indexOf","propertyIsEnumerable","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","minLen","_arrayLikeToArray","toString","slice","name","Array","from","test","len","arr2","l","f","next","done","value","isArray","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","configurable","writable","_toPropertyKey","_createClass","protoProps","staticProps","_callSuper","_getPrototypeOf","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","self","_assertThisInitialized","ReferenceError","Boolean","valueOf","setPrototypeOf","getPrototypeOf","_inherits","subClass","superClass","create","_setPrototypeOf","p","_toPrimitive","toPrimitive","String","Number","GeppettoGraphVisualization","exports","_Component","_this","_len","args","_key","concat","React","createRef","width","height","font","nodeRelSize","Math","floor","timeToCenter2DCamera","nodeLabel","fnOrField","node","linkLabel","link","linkWidth","Function","linkColor","nodeColor","nodeLabelColor","object","_this$props$wireframe","wireframeColor","traverse","child","Mesh","geometry","material","mesh","window","scene","add","wireframe","color","Color","position","fx","x","fy","y","fz","z","data","nodes","componentDidMount","_this$props","url","d2","forceLinkDistance","forceLinkStrength","forceChargeStrength","collideSize","size","ggv","current","d3Force","forceCollide","distance","strength","forceRadial","addToScene","zoomCameraToFitScene","forceUpdate","componentDidUpdate","prevProps","prevState","dimensions","ReactDOM","findDOMNode","parentNode","getBoundingClientRect","centerAt","fnOrString","_this2","_this$props2","_this$props2$wirefram","loader","OBJLoader","load","wireframeAnObject","xhr","console","log","loaded","total","error","getMaxAndMinVectors","maxX","maxY","maxZ","minX","minY","minZ","_ref","defaultX","defaultY","defaultZ","minVector","Vector3","maxVector","undefined","cameraSizeRatioToNodeSize","offset","center","boundingBox","Box3","setFromObject","_this$getMaxAndMinVec","_this$getMaxAndMinVec2","minV","maxV","containsFixedPoints","setState","nodeSize","getCenter","getSize","maxDim","max","fov","camera","PI","cameraZ","abs","tan","cameraPosition","min","cameraToFarEdge","far","updateProjectionMatrix","lookAt","linkCanvasObject","ctx","globalScale","getLinkColor","lineWidth","getLinkWidth","xs","xt","ys","yt","cx","cy","linkText","getLinkLabel","arrowSize","linkLength","sqrt","availableSpaceForLinkLabel","angle","atan","angle2","atan2","doNotPlotLinkLabel","measureText","fillStyle","strokeStyle","beginPath","moveTo","lineTo","stroke","substring","textLength","subX","cos","subY","sin","save","translate","rotate","fillText","nodeBorderDistance","dist","fill","restore","nodeWithName","getNodeColor","labelColor","getNodeLabelColor","label","getNodeLabel","arc","getDarkerColor","borderSize","textAlign","textBaseline","maxCharsPerLine","splitter","doubleGap","tripleGap","render","_this3","_this$props3","_this$props3$d","_this$props3$xGap","xGap","_this$props3$yGap","yGap","others","addFixedPositionToNodes","commonProps","ref","graphData","onNodeDrag","createElement","id","style","containerStyle","controls","linkCanvasObjectMode","nodeCanvasObject","Component","defaultProps","propTypes","PropTypes","shape","arrayOf","number","isRequired","links","bool","func","string"],"sources":["../../src/graph-visualization/Graph.js"],"sourcesContent":["import React, { Component } from 'react'\nimport ReactDOM from 'react-dom'\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3-force-3d'\nimport * as THREE from 'three'\nimport ForceGraph2D from 'react-force-graph-2d';\nimport ForceGraph3D from 'react-force-graph-3d';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader.js';\nimport { splitter, getDarkerColor } from './utils'\n\nexport default class GeppettoGraphVisualization extends Component {\n\n  // Ref to GGV container\n  ggv = React.createRef()\n\n  dimensions = { width: 200, height: 200 }\n\n  font = this.props.font || \"6px Source Sans Pro\"\n  size = this.props.nodeRelSize || 20\n  borderSize = Math.floor((this.props.nodeRelSize || 20) * 0.1)\n\n  // Gap to leave between lines in text inside nodes in 2D graphs\n  doubleGap = Math.floor((this.props.nodeRelSize || 20) * 0.25)\n  tripleGap = Math.floor((this.props.nodeRelSize || 20) * 0.35)\n  \n  timeToCenter2DCamera = this.props.timeToCenter2DCamera || 0\n\n  getNodeLabel = this.props.nodeLabel ? this.fnOrField(this.props.nodeLabel) : node => node.name\n  getLinkLabel = this.props.linkLabel ? this.fnOrField(this.props.linkLabel) : link => link.name\n  getLinkWidth = this.props.linkWidth ? this.props.linkWidth instanceof Function ? this.props.linkWidth : () => this.props.linkWidth : () => 0.25\n  getLinkColor = this.props.linkColor ? this.props.linkColor instanceof Function ? this.props.linkColor : () => this.props.linkColor : () => 'white'\n  getNodeColor = this.props.nodeColor ? this.props.nodeColor instanceof Function ? this.props.nodeColor : () => this.props.nodeColor : () => '#6520ff'\n  getNodeLabelColor = this.props.nodeLabelColor ? this.props.nodeLabelColor instanceof Function ? this.props.nodeLabelColor : () => this.props.nodeLabelColor : () => '#ffffff'\n\n  componentDidMount (){\n    const { data, url } = this.props\n\n    if (this.props.d2) {\n      const forceLinkDistance = this.props.forceLinkDistance || 90\n      const forceLinkStrength = this.props.forceLinkStrength || 0.7\n      const forceChargeStrength = this.props.forceChargeStrength || -200\n      const collideSize = this.props.collideSize || this.size * 1.5\n      this.ggv.current.d3Force('collide', d3.forceCollide(collideSize));\n      this.ggv.current.d3Force('link').distance(forceLinkDistance).strength(forceLinkStrength)\n      this.ggv.current.d3Force('charge').strength(forceChargeStrength)\n      this.ggv.current.d3Force('radial', d3.forceRadial(this.props.forceRadial ? this.props.forceRadial : 1))\n      this.ggv.current.d3Force('center', null)\n    }\n    if (url) {\n      this.addToScene()\n    } else if (!this.props.d2) {\n      this.zoomCameraToFitScene()\n    } else {\n      this.forceUpdate()\n    }\n  }\n\n  componentDidUpdate (prevProps, prevState) {\n    const dimensions = ReactDOM.findDOMNode(this).parentNode.getBoundingClientRect()\n    if (dimensions.width !== this.dimensions.width || dimensions.height !== this.dimensions.height) {\n      this.dimensions = dimensions\n      if (this.props.d2) {\n        this.ggv.current.centerAt(0, 0, this.timeToCenter2DCamera)\n      }\n      this.forceUpdate()\n    }\n  }\n\n  /**\n   * \n   * @param {*} fnOrString \n   */\n  fnOrField (fnOrString) {\n    if (typeof fnOrString === 'string' || fnOrString instanceof String) {\n      return obj => obj[fnOrString];\n    }\n    return fnOrString;\n  }\n\n  // add a obj file to the scene from url\n  addToScene () {\n    const { url, wireframe = true } = this.props\n    var loader = new OBJLoader();\n    // load a resource\n    loader.load(\n      // resource URL\n      url,\n      // called when resource is loaded\n      object => {\n        if (wireframe) {\n          this.wireframeAnObject(object)\n        }\n        this.zoomCameraToFitScene(object)\n        window.scene.add( object );\n      },\n      // called when loading is in progresses\n      xhr => {\n        console.log( ( xhr.loaded / xhr.total * 100 ) + '% loaded' );\n      },\n      // called when loading has errors\n      error => {\n        console.log( 'An error happened trying to load OBJ file into THREE scene.');\n      }\n    );\n  }\n  \n  // wireframe the loaded obj file \n  wireframeAnObject = object => {\n    const { wireframeColor = 0x6893DE } = this.props\n    object.traverse( child => {\n      if ( child instanceof THREE.Mesh ) {\n        const { geometry, material } = child\n        let mesh = new THREE.Mesh(geometry, material);\n        window.scene.add(mesh);\n\n        mesh.traverse(child => {\n          if (child instanceof THREE.Mesh) {\n            child.material.wireframe = true;\n            child.material.color = new THREE.Color(wireframeColor);\n          }\n        });\n      }\n    })\n  }\n\n  getMaxAndMinVectors () {\n    const { nodes } = this.props.data;\n    var maxX = 0, maxY = 0, maxZ = 0, minX = 0, minY = 0, minZ = 0\n\n    nodes.forEach(({ defaultX, defaultY, defaultZ }) => {\n      if (defaultX) {\n        if (defaultX > maxX) {\n          maxX = defaultX\n        } else if (defaultX < minX) {\n          minX = defaultX\n        }\n      }\n\n      if (defaultY) {\n        if (defaultY > maxY) {\n          maxY = defaultY\n        } else if (defaultY < minY) {\n          minY = defaultY\n        }\n      }\n\n      if (defaultZ) {\n        if (defaultZ > maxZ) {\n          maxZ = defaultZ\n        } else if (defaultZ < minZ) {\n          minZ = defaultZ\n        }\n      }\n    })\n\n    const minVector = new THREE.Vector3( minX, minY, minZ );\n    const maxVector = new THREE.Vector3( maxX, maxY, maxZ );\n    \n    return [minVector, maxVector, maxX || minY || maxY || minY || maxZ || minZ]\n  }\n\n  // cameraSizeRatioToNodeSize controls how big nodes look compared to \n  zoomCameraToFitScene (object = undefined, cameraSizeRatioToNodeSize = 400) {\n    var offset = this.props.offset ? this.props.offset : 1.25\n    const size = new THREE.Vector3();\n    const center = new THREE.Vector3();\n    const boundingBox = new THREE.Box3();\n\n    if (object) {\n      // if we load a OBJ file, we need to get the size of the boundary box\n      boundingBox.setFromObject( object );\n    } else {\n      // if we maunally set the position of nodes in the graph, we need to adjust the camera in order to see those fixed nodes.\n      const [ minV, maxV, containsFixedPoints ] = this.getMaxAndMinVectors()\n      if (!containsFixedPoints) { \n        this.setState({ nodeSize: 1 })\n        return \n      }\n      boundingBox.set(minV, maxV);\n    }\n    \n    boundingBox.getCenter(center);\n    boundingBox.getSize(size);\n\n    const maxDim = Math.max( size.x, size.y, size.z );\n    \n    const fov = this.ggv.current.camera().fov * ( Math.PI / 180 );\n    \n    let cameraZ = Math.abs( maxDim / 4 * Math.tan( fov * 2 ) )\n    cameraZ *= offset;\n\n    this.ggv.current.cameraPosition({ z: cameraZ })\n\n    const minZ = boundingBox.min.z;\n    const cameraToFarEdge = ( minZ < 0 ) ? -minZ + cameraZ : cameraZ - minZ;\n\n    this.ggv.current.camera().far = cameraToFarEdge * 3;\n    this.ggv.current.camera().updateProjectionMatrix();\n    this.ggv.current.camera().lookAt( center )\n\n    this.setState({ nodeSize: cameraZ / cameraSizeRatioToNodeSize })\n  }\n\n  // nodes with defined position, will not be draggable\n  onNodeDrag = node => {\n    if (node.position) {\n      node.fx = node.position.x\n      node.fy = node.position.y\n      node.fz = node.position.z\n    }\n  }\n\n  // nodes with defined position, will not have forces applied to them\n  addFixedPositionToNodes = data => {\n    data.nodes.forEach(node => {\n      if (node.position) {\n        node.fx = node.position.x\n        node.fy = node.position.y\n        node.fz = node.position.z\n      }\n    })\n  }\n\n\n  // Draw this: ( n1 )--- link_Label --->( n2 )\n  linkCanvasObject (link, ctx, globalScale) {\n    const color = this.getLinkColor(link)\n    ctx.lineWidth = this.getLinkWidth(link)\n    const xs = link.source.x\n    const xt = link.target.x\n    const ys = link.source.y\n    const yt = link.target.y\n    const cx = (xs + xt) / 2\n    const cy = (ys + yt) / 2\n\n    var linkText = this.getLinkLabel(link)\n    var arrowSize = this.size * 0.2\n    const linkLength = Math.sqrt((xt - xs) * (xt - xs) + (yt - ys) * (yt - ys));\n    const availableSpaceForLinkLabel = linkLength - 2.1 * this.size - 6 * arrowSize\n\n    // [-PI/2 ; PI/2]\n    const angle = Math.atan((yt - ys) / (xt - xs))\n    // [-PI ; PI]\n    const angle2 = Math.atan2(yt - ys, xt - xs)\n\n    const doNotPlotLinkLabel = !linkText || availableSpaceForLinkLabel < ctx.measureText('Abc...').width\n\n    ctx.fillStyle = color\n    ctx.strokeStyle = color\n    if (doNotPlotLinkLabel) {\n      linkText = ''\n      ctx.beginPath();\n      ctx.moveTo(xs, ys);\n      ctx.lineTo(xt, yt);\n      ctx.stroke();\n\n\n    } else {\n      if (linkText && ctx.measureText(linkText).width > availableSpaceForLinkLabel){\n        var i = linkText.length - 3 // for the ... at the end\n        while (ctx.measureText(linkText.substring(0, i) + '...').width > availableSpaceForLinkLabel) {\n          i--\n        }\n        linkText = linkText.substring(0, i) + '...'\n      }\n\n      const textLength = ctx.measureText(linkText).width\n      const subX = Math.cos(angle2) * textLength / 2\n      const subY = Math.sin(angle2) * textLength / 2\n      \n      // Draw line from source node to link label\n      ctx.beginPath();\n      ctx.moveTo(xs, ys);\n      ctx.lineTo(cx - subX, cy - subY);\n      ctx.stroke();\n\n      // Draw line from link label to target node\n      ctx.beginPath();\n      ctx.moveTo(cx + subX, cy + subY);\n      ctx.lineTo(xt, yt);\n      ctx.stroke()\n    }\n    \n    // Draw text for link label\n    ctx.save();\n    ctx.translate(cx, cy);\n    ctx.rotate(angle)\n    if (linkText){\n      ctx.fillText(linkText, 0, 0);\n    }\n\n    let nodeBorderDistance = this.size;\n    // Some nodes are bigger than others, find distance from node center to corner and use this as size\n    if ( link.target.width && link.target.height ){\n      nodeBorderDistance = Math.sqrt((link.target.width / 2 ) * (link.target.width / 2 ) + (link.target.height / 2 ) * (link.target.height / 2 ));\n    }\n    \n    // Draw arrow to indicate link direction\n    var dist = (linkLength / 2 - nodeBorderDistance) - arrowSize\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    if (angle2 >= Math.PI / 2 || angle2 <= -Math.PI / 2){\n      dist *= -1\n      arrowSize *= -1\n    }\n    ctx.moveTo(arrowSize + dist, 0);\n    ctx.lineTo(dist, 2.5);\n    ctx.lineTo(dist, -2.5);\n    ctx.fill()\n    \n    ctx.restore();\n    \n\n  }\n\n  /*\n   * Draw a node distributing the label in up to 3 lines with '...' in case the third line does not fit\n   *    _____\n   *   /  A  \\\n   *  (  node )\n   *  ( label )\n   *   \\_____/\n   */\n  nodeWithName (node, ctx, globalScale) {\n    const color = this.getNodeColor(node)\n    const labelColor = this.getNodeLabelColor(node)\n\n    ctx.font = this.font\n    \n    var label = this.getNodeLabel(node);\n    \n    ctx.fillStyle = color\n    ctx.beginPath(); \n    ctx.arc(node.x, node.y, this.size, 0, 2 * Math.PI, false)\n    ctx.fill();\n\n    ctx.fillStyle = getDarkerColor(color)\n    ctx.beginPath(); \n    ctx.arc(node.x, node.y, this.size - this.borderSize, 0, 2 * Math.PI, false)\n    ctx.fill();\n\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillStyle = labelColor;\n    \n    const maxCharsPerLine = Math.floor(this.size * 1.75 / ctx.measureText(\"a\").width)\n      \n    const nodeLabel = splitter(label, maxCharsPerLine)\n    \n    // Use single, double or triple lines to put text inside node\n    if (nodeLabel.length == 1) {\n      ctx.fillText(nodeLabel[0], node.x, node.y);\n    } else if (nodeLabel.length == 2) {\n      ctx.fillText(nodeLabel[0], node.x, node.y - this.doubleGap);\n      ctx.fillText(nodeLabel[1], node.x, node.y + this.doubleGap);\n    } else if (nodeLabel.length == 3){\n      ctx.fillText(nodeLabel[0], node.x, node.y - this.tripleGap);\n      ctx.fillText(nodeLabel[1], node.x, node.y);\n      ctx.fillText(nodeLabel[2], node.x, node.y + this.tripleGap);\n    } else {\n      ctx.fillText(nodeLabel[0], node.x, node.y - this.tripleGap);\n      ctx.fillText(nodeLabel[1], node.x, node.y);\n      ctx.fillText(nodeLabel[2].slice(0, label.length - 2) + '...', node.x, node.y + this.tripleGap);\n    }\n\n  }\n\n  render () {\n    const { data, d2 = false, xGap = 20, yGap = 40, ...others } = this.props;\n    \n    this.addFixedPositionToNodes(data)\n     \n    const commonProps = {\n      ref: this.ggv,\n      graphData: data,\n      width: this.dimensions.width - xGap,\n      height: this.dimensions.height - yGap,\n      onNodeDrag: node => this.onNodeDrag(node),\n      ...others\n    }\n\n    if (d2) {\n      return <div id={this.props.id ? this.props.id : \"graph-2d\"} style={this.props.containerStyle ? this.props.containerStyle : null} >\n        { this.props.controls ? this.props.controls : null } \n        <ForceGraph2D \n          linkCanvasObjectMode={() => \"replace\"}\n          linkCanvasObject={this.linkCanvasObject.bind(this)} \n          nodeCanvasObject={this.nodeWithName.bind(this)} \n          nodeRelSize={this.size} \n          {...commonProps}/>\n      </div>\n    } \n    return <ForceGraph3D {...commonProps} />\n  }\n}\n\nGeppettoGraphVisualization.defaultProps = {\n  d2: false,\n  nodeLabel: () => {\n  },\n  linkLabel: () => {\n  },\n  url: '',\n  wireframe: true,\n  wireframeColor: '0x6893DE',\n  xGap: 20,\n  yGap: 45,\n  font: '6px Source Sans Pro',\n  nodeRelSize: 20,\n  forceLinkDistance: 90,\n  forceLinkStrength: 0.7,\n  forceChargeStrength: -200,\n  timeToCenter2DCamera: 0,\n  forceRadial: 1,\n}\n\n\nGeppettoGraphVisualization.propTypes = {\n  /**\n   * Object with arrays of nodes and links used to render the graph\n   */\n  data: PropTypes.shape({\n    /**\n     * Nodes in the graph\n     */\n    nodes : PropTypes.arrayOf(PropTypes.shape({\n    /**\n     * Node identifier\n     */\n      id : PropTypes.number.isRequired \n    })).isRequired,\n    /**\n   * Links between nodes in the graph\n   */\n    links : PropTypes.arrayOf(PropTypes.shape({\n    /**\n     * Source node of the link\n     */\n      source: PropTypes.number.isRequired,\n    /**\n     * Target node of the link\n     */\n      target: PropTypes.number.isRequired\n    })).isRequired\n  }),\n  /**\n   * If true, the graph would be 2D.\n   * (Default : false)\n   */\n  d2 : PropTypes.bool,\n  /**\n   * Specify the node label displayed in each node\n   */\n  nodeLabel : PropTypes.func,\n  /**\n   * Specify the link label displayed in each node\n   */\n  linkLabel : PropTypes.func,\n  /**\n   *  Specify an obj file URL to add to the scene.\n   */\n  url : PropTypes.string,\n  /**\n   * Create a wireframe for the object.\n   * (Default : true)\n   */\n  wireframe : PropTypes.bool,\n  /**\n   * Specify the wireframe color (in hexadecimal).\n   * (Default : \"0x6893DE\")\n   */\n  wireframeColor : PropTypes.string,\n  /**\n   * Define width gap size with respect to the parent container.\n   * (Default : 20)\n   */\n  xGap : PropTypes.number,\n  /**\n   * Define height gap size with respect to the parent container.\n   * (Default : 45)\n   */\n  yGap : PropTypes.number,\n  /**\n   * Set the default font size and style inside the nodes.\n   * (Default : \"6px Source Sans Pro\")\n   */\n  font : PropTypes.string,\n  /**\n   * Adjust the size of the nodes.\n   * (Default : 20)\n   */\n  nodeRelSize : PropTypes.number,\n  /**\n   * Adjust the length of the spring simulated between two nodes.\n   * (Default : 90)\n   */\n  forceLinkDistance : PropTypes.number,\n  /**\n   * Adjust the stiffness coefficient for the spring simulated between two nodes\n   * (Default : 0.7)\n   */\n  forceLinkStrength : PropTypes.number,\n  /**\n   * Adjust the repulsion coefficient simulated between two nodes.\n   * (Default : -200)\n   */\n  forceChargeStrength : PropTypes.number,\n  /**\n   * Transition time in ms when centering camera in 2D Graph after window resize event. \n   * (Default : 0)\n   */\n  timeToCenter2DCamera : PropTypes.number,\n  /**\n   * Creates a radial attractive force of radial circle equal to forceRadial. \n   * Useful to avoid nodes scattering away when they have no links. \n   * (Default : 1)\n   */\n  forceRadial : PropTypes.number\n};\n"],"mappings":"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","ignoreList":[]}