{"version":3,"file":"Rect.js","names":["_Orientation","_interopRequireDefault","require","obj","__esModule","_typeof","o","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","key","_createClass","protoProps","staticProps","_defineProperty","value","t","_toPrimitive","r","e","toPrimitive","call","String","Number","Rect","x","y","width","height","clone","equals","rect","getBottom","getRight","positionElement","element","position","styleWithPosition","style","arguments","undefined","left","top","Math","max","contains","removeInsets","insets","right","bottom","centerInRect","outerRect","_getSize","orientation","prefSize","Orientation","VERT","toString","empty","fromElement","_element$getBoundingC","getBoundingClientRect","_default","exports"],"sources":["../../../src/flex-layout/src/Rect.ts"],"sourcesContent":["import Orientation from \"./Orientation\";\n\nclass Rect {\n    static empty() {\n        return new Rect(0, 0, 0, 0);\n    }\n\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n\n    constructor(x: number, y: number, width: number, height: number) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n\n    static fromElement(element: Element) {\n      let {x, y, width, height} = element.getBoundingClientRect();\n      return new Rect(x, y, width, height);\n    }\n\n    clone() {\n        return new Rect(this.x, this.y, this.width, this.height);\n    }\n\n    equals(rect: Rect) {\n        if (this.x === rect.x && this.y === rect.y && this.width === rect.width && this.height === rect.height) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    getBottom() {\n        return this.y + this.height;\n    }\n\n    getRight() {\n        return this.x + this.width;\n    }\n\n    positionElement(element: HTMLElement, position?: string) {\n        this.styleWithPosition(element.style, position);\n    }\n\n    styleWithPosition(style: Record<string, any>, position: string = \"absolute\") {\n        style.left = this.x + \"px\";\n        style.top = this.y + \"px\";\n        style.width = Math.max(0, this.width) + \"px\"; // need Math.max to prevent -ve, cause error in IE\n        style.height = Math.max(0, this.height) + \"px\";\n        style.position = position;\n        return style;\n    }\n\n    contains(x: number, y: number) {\n        if (this.x <= x && x <= this.getRight() && this.y <= y && y <= this.getBottom()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    removeInsets(insets: { top: number; left: number; bottom: number; right: number }) {\n        return new Rect(this.x + insets.left, this.y + insets.top, Math.max(0, this.width - insets.left - insets.right), Math.max(0, this.height - insets.top - insets.bottom));\n    }\n\n    centerInRect(outerRect: Rect) {\n        this.x = (outerRect.width - this.width) / 2;\n        this.y = (outerRect.height - this.height) / 2;\n    }\n\n    /** @hidden @internal */\n    _getSize(orientation: Orientation) {\n        let prefSize = this.width;\n        if (orientation === Orientation.VERT) {\n            prefSize = this.height;\n        }\n        return prefSize;\n    }\n\n    toString() {\n        return \"(Rect: x=\" + this.x + \", y=\" + this.y + \", width=\" + this.width + \", height=\" + this.height + \")\";\n    }\n}\n\nexport default Rect;\n"],"mappings":";;;;;;AAAA,IAAAA,YAAA,GAAAC,sBAAA,CAAAC,OAAA;AAAwC,SAAAD,uBAAAE,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,gBAAAA,GAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAG,SAAA,qBAAAJ,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAK,gBAAAC,QAAA,EAAAC,WAAA,UAAAD,QAAA,YAAAC,WAAA,eAAAC,SAAA;AAAA,SAAAC,kBAAAC,MAAA,EAAAC,KAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,KAAA,CAAAE,MAAA,EAAAD,CAAA,UAAAE,UAAA,GAAAH,KAAA,CAAAC,CAAA,GAAAE,UAAA,CAAAC,UAAA,GAAAD,UAAA,CAAAC,UAAA,WAAAD,UAAA,CAAAE,YAAA,wBAAAF,UAAA,EAAAA,UAAA,CAAAG,QAAA,SAAAC,MAAA,CAAAC,cAAA,CAAAT,MAAA,EAAAU,cAAA,CAAAN,UAAA,CAAAO,GAAA,GAAAP,UAAA;AAAA,SAAAQ,aAAAf,WAAA,EAAAgB,UAAA,EAAAC,WAAA,QAAAD,UAAA,EAAAd,iBAAA,CAAAF,WAAA,CAAAH,SAAA,EAAAmB,UAAA,OAAAC,WAAA,EAAAf,iBAAA,CAAAF,WAAA,EAAAiB,WAAA,GAAAN,MAAA,CAAAC,cAAA,CAAAZ,WAAA,iBAAAU,QAAA,mBAAAV,WAAA;AAAA,SAAAkB,gBAAA5B,GAAA,EAAAwB,GAAA,EAAAK,KAAA,IAAAL,GAAA,GAAAD,cAAA,CAAAC,GAAA,OAAAA,GAAA,IAAAxB,GAAA,IAAAqB,MAAA,CAAAC,cAAA,CAAAtB,GAAA,EAAAwB,GAAA,IAAAK,KAAA,EAAAA,KAAA,EAAAX,UAAA,QAAAC,YAAA,QAAAC,QAAA,oBAAApB,GAAA,CAAAwB,GAAA,IAAAK,KAAA,WAAA7B,GAAA;AAAA,SAAAuB,eAAAO,CAAA,QAAAf,CAAA,GAAAgB,YAAA,CAAAD,CAAA,gCAAA5B,OAAA,CAAAa,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAgB,aAAAD,CAAA,EAAAE,CAAA,oBAAA9B,OAAA,CAAA4B,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAG,CAAA,GAAAH,CAAA,CAAA1B,MAAA,CAAA8B,WAAA,kBAAAD,CAAA,QAAAlB,CAAA,GAAAkB,CAAA,CAAAE,IAAA,CAAAL,CAAA,EAAAE,CAAA,gCAAA9B,OAAA,CAAAa,CAAA,UAAAA,CAAA,YAAAJ,SAAA,yEAAAqB,CAAA,GAAAI,MAAA,GAAAC,MAAA,EAAAP,CAAA;AAAA,IAElCQ,IAAI;EAUN,SAAAA,KAAYC,CAAS,EAAEC,CAAS,EAAEC,KAAa,EAAEC,MAAc,EAAE;IAAAlC,eAAA,OAAA8B,IAAA;IAAAV,eAAA;IAAAA,eAAA;IAAAA,eAAA;IAAAA,eAAA;IAC7D,IAAI,CAACW,CAAC,GAAGA,CAAC;IACV,IAAI,CAACC,CAAC,GAAGA,CAAC;IACV,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,MAAM,GAAGA,MAAM;EACxB;EAAC,OAAAjB,YAAA,CAAAa,IAAA;IAAAd,GAAA;IAAAK,KAAA,EAOD,SAAAc,MAAA,EAAQ;MACJ,OAAO,IAAIL,IAAI,CAAC,IAAI,CAACC,CAAC,EAAE,IAAI,CAACC,CAAC,EAAE,IAAI,CAACC,KAAK,EAAE,IAAI,CAACC,MAAM,CAAC;IAC5D;EAAC;IAAAlB,GAAA;IAAAK,KAAA,EAED,SAAAe,OAAOC,IAAU,EAAE;MACf,IAAI,IAAI,CAACN,CAAC,KAAKM,IAAI,CAACN,CAAC,IAAI,IAAI,CAACC,CAAC,KAAKK,IAAI,CAACL,CAAC,IAAI,IAAI,CAACC,KAAK,KAAKI,IAAI,CAACJ,KAAK,IAAI,IAAI,CAACC,MAAM,KAAKG,IAAI,CAACH,MAAM,EAAE;QACpG,OAAO,IAAI;MACf,CAAC,MAAM;QACH,OAAO,KAAK;MAChB;IACJ;EAAC;IAAAlB,GAAA;IAAAK,KAAA,EAED,SAAAiB,UAAA,EAAY;MACR,OAAO,IAAI,CAACN,CAAC,GAAG,IAAI,CAACE,MAAM;IAC/B;EAAC;IAAAlB,GAAA;IAAAK,KAAA,EAED,SAAAkB,SAAA,EAAW;MACP,OAAO,IAAI,CAACR,CAAC,GAAG,IAAI,CAACE,KAAK;IAC9B;EAAC;IAAAjB,GAAA;IAAAK,KAAA,EAED,SAAAmB,gBAAgBC,OAAoB,EAAEC,QAAiB,EAAE;MACrD,IAAI,CAACC,iBAAiB,CAACF,OAAO,CAACG,KAAK,EAAEF,QAAQ,CAAC;IACnD;EAAC;IAAA1B,GAAA;IAAAK,KAAA,EAED,SAAAsB,kBAAkBC,KAA0B,EAAiC;MAAA,IAA/BF,QAAgB,GAAAG,SAAA,CAAArC,MAAA,QAAAqC,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,UAAU;MACvED,KAAK,CAACG,IAAI,GAAG,IAAI,CAAChB,CAAC,GAAG,IAAI;MAC1Ba,KAAK,CAACI,GAAG,GAAG,IAAI,CAAChB,CAAC,GAAG,IAAI;MACzBY,KAAK,CAACX,KAAK,GAAGgB,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,IAAI,CAACjB,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;MAC9CW,KAAK,CAACV,MAAM,GAAGe,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAChB,MAAM,CAAC,GAAG,IAAI;MAC9CU,KAAK,CAACF,QAAQ,GAAGA,QAAQ;MACzB,OAAOE,KAAK;IAChB;EAAC;IAAA5B,GAAA;IAAAK,KAAA,EAED,SAAA8B,SAASpB,CAAS,EAAEC,CAAS,EAAE;MAC3B,IAAI,IAAI,CAACD,CAAC,IAAIA,CAAC,IAAIA,CAAC,IAAI,IAAI,CAACQ,QAAQ,CAAC,CAAC,IAAI,IAAI,CAACP,CAAC,IAAIA,CAAC,IAAIA,CAAC,IAAI,IAAI,CAACM,SAAS,CAAC,CAAC,EAAE;QAC7E,OAAO,IAAI;MACf,CAAC,MAAM;QACH,OAAO,KAAK;MAChB;IACJ;EAAC;IAAAtB,GAAA;IAAAK,KAAA,EAED,SAAA+B,aAAaC,MAAoE,EAAE;MAC/E,OAAO,IAAIvB,IAAI,CAAC,IAAI,CAACC,CAAC,GAAGsB,MAAM,CAACN,IAAI,EAAE,IAAI,CAACf,CAAC,GAAGqB,MAAM,CAACL,GAAG,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,IAAI,CAACjB,KAAK,GAAGoB,MAAM,CAACN,IAAI,GAAGM,MAAM,CAACC,KAAK,CAAC,EAAEL,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAChB,MAAM,GAAGmB,MAAM,CAACL,GAAG,GAAGK,MAAM,CAACE,MAAM,CAAC,CAAC;IAC3K;EAAC;IAAAvC,GAAA;IAAAK,KAAA,EAED,SAAAmC,aAAaC,SAAe,EAAE;MAC1B,IAAI,CAAC1B,CAAC,GAAG,CAAC0B,SAAS,CAACxB,KAAK,GAAG,IAAI,CAACA,KAAK,IAAI,CAAC;MAC3C,IAAI,CAACD,CAAC,GAAG,CAACyB,SAAS,CAACvB,MAAM,GAAG,IAAI,CAACA,MAAM,IAAI,CAAC;IACjD;;IAEA;EAAA;IAAAlB,GAAA;IAAAK,KAAA,EACA,SAAAqC,SAASC,WAAwB,EAAE;MAC/B,IAAIC,QAAQ,GAAG,IAAI,CAAC3B,KAAK;MACzB,IAAI0B,WAAW,KAAKE,uBAAW,CAACC,IAAI,EAAE;QAClCF,QAAQ,GAAG,IAAI,CAAC1B,MAAM;MAC1B;MACA,OAAO0B,QAAQ;IACnB;EAAC;IAAA5C,GAAA;IAAAK,KAAA,EAED,SAAA0C,SAAA,EAAW;MACP,OAAO,WAAW,GAAG,IAAI,CAAChC,CAAC,GAAG,MAAM,GAAG,IAAI,CAACC,CAAC,GAAG,UAAU,GAAG,IAAI,CAACC,KAAK,GAAG,WAAW,GAAG,IAAI,CAACC,MAAM,GAAG,GAAG;IAC7G;EAAC;IAAAlB,GAAA;IAAAK,KAAA,EAlFD,SAAA2C,MAAA,EAAe;MACX,OAAO,IAAIlC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC/B;EAAC;IAAAd,GAAA;IAAAK,KAAA,EAcD,SAAA4C,YAAmBxB,OAAgB,EAAE;MACnC,IAAAyB,qBAAA,GAA4BzB,OAAO,CAAC0B,qBAAqB,CAAC,CAAC;QAAtDpC,CAAC,GAAAmC,qBAAA,CAADnC,CAAC;QAAEC,CAAC,GAAAkC,qBAAA,CAADlC,CAAC;QAAEC,KAAK,GAAAiC,qBAAA,CAALjC,KAAK;QAAEC,MAAM,GAAAgC,qBAAA,CAANhC,MAAM;MACxB,OAAO,IAAIJ,IAAI,CAACC,CAAC,EAAEC,CAAC,EAAEC,KAAK,EAAEC,MAAM,CAAC;IACtC;EAAC;AAAA;AAAA,IAAAkC,QAAA,GAAAC,OAAA,cAkEUvC,IAAI","ignoreList":[]}