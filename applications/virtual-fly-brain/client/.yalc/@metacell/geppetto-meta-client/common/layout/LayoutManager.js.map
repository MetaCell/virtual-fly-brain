{"version":3,"file":"LayoutManager.js","names":["styles","theme","createStyles","container","flexGrow","display","flexDirection","alignItems","position","spacer","width","spacing","flexlayout","instance","LayoutManager","model","componentMap","tabsetIconFactory","isMinimizeEnabled","panel","renderValues","tabSetButtons","getType","minimizeHelper","addMinimizeButtonToTabset","Array","isArray","length","forEach","Button","stickyButtons","push","getId","tabButtons","buttons","layoutManager","config","classes","factory","icons","action","onAction","node","onRenderTab","onRenderTabSet","withStyles","Component","store","next","setLayout","toJson","doAction","Actions","UPDATE_MODEL_ATTRIBUTES","widgetFactory","setStore","nextAction","nextSetLayout","type","layoutActions","ADD_WIDGET","addWidget","data","ADD_WIDGETS","addWidgets","UPDATE_WIDGET","updatedWidget","updateWidget","DESTROY_WIDGET","widget","deleteWidget","REMOVE_WIDGET","ACTIVATE_WIDGET","status","WidgetStatus","ACTIVE","getWidget","id","SET_WIDGETS","newWidgets","getWidgets","Object","values","SET_LAYOUT","GeppettoActions","IMPORT_APPLICATION_STATE","incomingState","redux","layout","FlexLayout","Model","fromJson","MinimizeHelper","getIsMinimizeEnabled","importSession","sessions","fixRowRecursive","_root","updateLayout","WidgetFactory","TabsetIconFactory","middleware","bind","defaultLayoutConfiguration","allNodes","_idMap","defaultWeights","_getAttr","widgetConfiguration","getNodeById","tabset","panelName","undefined","createTabSet","defaultPosition","defaultWeight","pos","getChildren","addNode","widget2Node","DockLocation","CENTER","confs","components","getComponents","wid","exportSession","widgetId","conf","component","getComponent","e","console","error","setTimeout","importWidgetSession","imported","Set","add","has","_setWeight","getParent","restoreWeight","empty","child","actives","active","selectTab","deleteTab","getState","widgets","oldModel","defaultAction","SET_ACTIVE_TABSET","SELECT_TAB","tabNode","MINIMIZED","restoreWidget","DELETE_TAB","hideOnClose","minimizeWidget","dispatch","removeWidgetFromStore","MAXIMIZE_TOGGLE","RENAME_TAB","ADJUST_SPLIT","ADD_NODE","MOVE_NODE","newModel","previousWidget","mergedWidget","widgetRestored","restoreWidgetIfNecessary","moveWidget","updateNodeAttributes","MAXIMIZED","isMaximized","maximizeToggle","isMinimized","getConfig","initLayoutManager","iconFactory","getLayoutManagerInstance"],"sources":["../../../src/common/layout/LayoutManager.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as FlexLayout from '@metacell/geppetto-meta-ui/flex-layout/src/index';\nimport Actions from '@metacell/geppetto-meta-ui/flex-layout/src/model/Actions';\nimport DockLocation from '@metacell/geppetto-meta-ui/flex-layout/src/DockLocation';\nimport Model from '@metacell/geppetto-meta-ui/flex-layout/src/model/Model';\nimport {ComponentMap, IComponentConfig, Widget, WidgetStatus} from './model';\nimport {createStyles, withStyles} from '@material-ui/core/styles'\nimport WidgetFactory from \"./WidgetFactory\";\nimport TabsetIconFactory from \"./TabsetIconFactory\";\nimport defaultLayoutConfiguration from \"./defaultLayout\";\nimport {getWidget, widget2Node} from \"./utils\";\nimport * as GeppettoActions from '../actions';\n\nimport {layoutActions, removeWidgetFromStore, setLayout, updateLayout,} from \"./actions\";\n\nimport {MinimizeHelper} from \"./helpers/MinimizeHelper\";\nimport {createTabSet, moveWidget} from \"./helpers/FlexLayoutHelper\";\n\n\nconst styles = (theme) => createStyles({\n  container: {\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'stretch',\n    position: 'relative'\n  },\n  spacer: { width: theme.spacing(1) },\n  flexlayout: { flexGrow: 1, position: 'relative' }\n});\n\nlet instance: LayoutManager = null;\n\n/**\n * Wraps the FlexLayout component in order to allow a declarative specification (widgets).\n * of the layout and the components displayed.\n *\n * Handles layout state update and layout import and export.\n *\n * @memberof Control\n */\n\nclass LayoutManager {\n\n  model: Model;\n  /**\n   * Used to restore weights from the default layout\n   */\n  defaultWeights: {[id: string]: number} = {};\n  widgetFactory: WidgetFactory;\n  tabsetIconFactory: TabsetIconFactory;\n  store;\n  layoutManager = this;\n  private minimizeHelper: MinimizeHelper;\n\n  /**\n   * @constructor\n   * @param model\n   * @param componentMap\n   * @param tabsetIconFactory\n   * @param isMinimizeEnabled\n   */\n  constructor(\n    model: FlexLayout.IJsonModel,\n    componentMap: ComponentMap,\n    tabsetIconFactory: TabsetIconFactory = null,\n    isMinimizeEnabled = false\n  ) {\n\n    this.setLayout(model);\n    this.widgetFactory = new WidgetFactory(componentMap);\n    this.tabsetIconFactory = tabsetIconFactory\n      ? tabsetIconFactory\n      : new TabsetIconFactory();\n    this.middleware = this.middleware.bind(this);\n    this.factory = this.factory.bind(this);\n    this.minimizeHelper= new MinimizeHelper(isMinimizeEnabled, this.model)\n  }\n\n\n\n  setLayout(model: any) {\n    this.model = FlexLayout.Model.fromJson(\n       model || defaultLayoutConfiguration\n    );\n    const allNodes: FlexLayout.Node[] = Object.values(this.model._idMap);\n    for(const node of allNodes) {\n        this.defaultWeights[node.getId()] = node._getAttr(\"weight\");\n    }\n    this.fixRowRecursive(this.model._root)\n  }\n\n  /**\n   * Adds a widget to the layout.\n   *\n   * @param {Widget} widgetConfiguration widget to add\n   */\n  addWidget(widgetConfiguration: Widget) {\n    if (this.getWidget(widgetConfiguration.id) && this.model.getNodeById(widgetConfiguration.id)) {\n      return this.updateWidget(widgetConfiguration);\n    }\n    const { model } = this;\n    let tabset = model.getNodeById(widgetConfiguration.panelName);\n    if (tabset === undefined) {\n        createTabSet(this.model, widgetConfiguration.panelName, widgetConfiguration.defaultPosition, widgetConfiguration.defaultWeight);\n    }\n    widgetConfiguration.pos = widgetConfiguration.pos ?? tabset.getChildren().length\n    this.model.doAction(\n      Actions.addNode(\n        widget2Node(widgetConfiguration),\n        widgetConfiguration.panelName,\n        DockLocation.CENTER,\n        widgetConfiguration.pos,\n        widgetConfiguration.status == WidgetStatus.ACTIVE\n      )\n    );\n  }\n\n  /**\n   * Handle rendering of tab set.\n   *\n   * @param panel\n   * @param renderValues\n   * @param tabSetButtons\n   */\n  onRenderTabSet = (panel, renderValues, tabSetButtons) => {\n    if (panel.getType() === 'tabset') {\n      this.minimizeHelper.addMinimizeButtonToTabset(panel, renderValues);\n      if (Array.isArray(tabSetButtons) && tabSetButtons.length > 0) {\n        tabSetButtons.forEach(Button => {\n          renderValues.stickyButtons.push(\n            <Button key={panel.getId()} panel={panel} />\n          );\n        });\n      }\n    }\n  };\n\n\n\n  /**\n   * Handle rendering of tab set.\n   *\n   * @param panel\n   * @param renderValues\n   * @param tabButtons\n   */\n  onRenderTab = (panel, renderValues, tabButtons) => {\n    if (panel.getType() === 'tab') {\n      if (Array.isArray(tabButtons) && tabButtons.length > 0) {\n        tabButtons.forEach(Button => {\n          renderValues.buttons.push(\n            <Button key={panel.getId()} panel={panel} />\n          );\n        });\n      }\n    }\n  };\n\n  /**\n   * Layout wrapper component\n   *\n   * @memberof Component\n   *\n   */\n  Component = (layoutManager: LayoutManager, config?: IComponentConfig) => ({\n    classes,\n  }) => (\n    <div className={classes.container}>\n      <div className={classes.flexlayout}>\n        <FlexLayout.Layout\n          model={this.model}\n          factory={this.factory}\n          icons={config?.icons}\n          // iconFactory={layoutManager.iconFactory.bind(this)}\n          onAction={action => layoutManager.onAction(action)}\n          onRenderTab={(node, renderValues) =>\n            layoutManager.onRenderTab(node, renderValues, config?.tabButtons)\n          }\n          onRenderTabSet={(node, renderValues) => {\n            layoutManager.onRenderTabSet(\n              node,\n              renderValues,\n              config?.tabSetButtons\n            );\n          }}\n        />\n      </div>\n    </div>\n  );\n\n  /**\n   * Get the layout component.\n   * @memberof Control\n   */\n  getComponent = (config?: IComponentConfig) => withStyles(styles)(this.Component(this, config));\n\n\n  /**\n   * Export a session.\n   */\n  exportSession(): { [id: string]: any } {\n    const confs = {};\n    const components = this.widgetFactory.getComponents();\n    for (const wid in components) {\n      confs[wid] = components[wid].exportSession();\n    }\n    return confs;\n  }\n\n  /**\n   * Import a widget session.\n   *\n   * @param {string} widgetId id of widget\n   * @param conf widget configuration\n   */\n  importWidgetSession(widgetId: string, conf: any) {\n    const component = this.widgetFactory.getComponent(widgetId);\n    if (component) {\n      try {\n        component.importSession(conf);\n      } catch (e) {\n        console.error('Error importing session for', widgetId, e)\n      }\n    } else {\n      // The component may not be yet initialized when loading the session\n      setTimeout(() => this.importWidgetSession(widgetId, conf), 100);\n    }\n  }\n\n  /**\n   * Import complete session.\n   *\n   * @param confs configuration map\n   */\n  importSession(confs: { [id: string]: any }): void {\n    const imported = new Set();\n    for (const wid in confs) {\n      this.importWidgetSession(wid, confs[wid]);\n      imported.add(wid);\n    }\n\n    // Some components may have a current status here but no state exported in the session file\n    for (const wid in this.widgetFactory.getComponents()) {\n      if (!imported.has(wid)) {\n        this.importWidgetSession(wid, null);\n      }\n    }\n  }\n\n  /**\n   * Layout manager Redux middleware.\n   * Sets the layout from Redux actions.\n   *\n   * @memberof Control\n   * @memberof Control\n   */\n  middleware = (store) => (next) => (action) => {\n    if(!this.store) {\n      next(setLayout(this.model.toJson()));\n    }\n\n    // This is a hack to unlock transitory state in the model before any other action is dispatched. See https://metacell.atlassian.net/browse/GEP-126\n    this.model.doAction(Actions.UPDATE_MODEL_ATTRIBUTES, {});\n\n    this.store = store;\n    this.widgetFactory.setStore(store)\n    this.minimizeHelper.setStore(store);\n\n    let nextAction = true;\n    let nextSetLayout = true;\n\n    switch (action.type) {\n      case layoutActions.ADD_WIDGET: {\n        this.addWidget(action.data);\n        break;\n      }\n      case layoutActions.ADD_WIDGETS: {\n        this.addWidgets(action.data);\n        break;\n      }\n      case layoutActions.UPDATE_WIDGET: {\n\n        let updatedWidget = this.updateWidget(action.data);\n        action = { ...action, data: updatedWidget };\n\n        break;\n      }\n      case layoutActions.DESTROY_WIDGET: {\n        const widget = action.data;\n        this.deleteWidget(widget);\n        break;\n      }\n      case layoutActions.REMOVE_WIDGET: {\n        break;\n      }\n      case layoutActions.ACTIVATE_WIDGET: {\n        action.data.status = WidgetStatus.ACTIVE;\n        const widget = this.getWidget(action.data.id)\n        widget.status = WidgetStatus.ACTIVE;\n        this.updateWidget(widget);\n        break;\n      }\n\n      case layoutActions.SET_WIDGETS: {\n        const newWidgets: Map<string, Widget> = action.data;\n        for (let widget of this.getWidgets()) {\n          if (!newWidgets[widget.id]) {\n            this.deleteWidget(widget);\n          }\n        }\n        this.addWidgets(Object.values(newWidgets));\n        break;\n      }\n      case layoutActions.SET_LAYOUT: {\n        next(setLayout(action.data));\n        return;\n      }\n      case GeppettoActions.IMPORT_APPLICATION_STATE: {\n        const incomingState = action.data.redux.layout;\n        this.model = FlexLayout.Model.fromJson(incomingState);\n        this.minimizeHelper = new MinimizeHelper(this.minimizeHelper.getIsMinimizeEnabled(), this.model)\n        this.importSession(action.data.sessions);\n        nextSetLayout = false;\n      }\n      default: {\n        nextSetLayout = false;\n      }\n    }\n\n    if (nextAction) {\n      next(action);\n    }\n    if (nextSetLayout) {\n      this.fixRowRecursive(this.model._root)\n      next(updateLayout(this.model));\n    }\n\n  };\n\n  restoreWeight(node: FlexLayout.Node) {\n\n    if(node._getAttr(\"weight\") == 0) {\n      node._setWeight(this.defaultWeights[node.getId()] ?? 50);\n    }\n\n    if(node.getParent()) {\n      this.restoreWeight(node.getParent());\n    }\n  }\n\n  fixRowRecursive(node: FlexLayout.Node) {\n    if(node.getType() === \"row\" || node.getType() === \"tabset\") {\n      if(node.getChildren().length === 0) {\n        node._setWeight(0);\n        return true;\n      } else {\n\n\n        let empty = true;\n        for(let child of node.getChildren()) {\n          empty =  this.fixRowRecursive(child) && empty;\n        }\n\n        if(!empty) {\n          this.restoreWeight(node);\n        } else {\n          node._setWeight(0);\n        }\n\n        return empty;\n      }\n    }\n    return false;\n\n  }\n\n  /**\n   * Add a list of widgets.\n   *\n   * @param {Array<Widget>} newWidgets list of widgets\n   * @private\n   */\n  private addWidgets(newWidgets: Array<Widget>) {\n    let actives = [];\n    for (let widget of newWidgets) {\n      if (widget.status == WidgetStatus.ACTIVE) {\n        actives.push(widget.id);\n      }\n      this.addWidget(widget);\n    }\n\n    for (const active of actives) {\n      this.model.doAction(FlexLayout.Actions.selectTab(active));\n    }\n  }\n\n  /**\n   * Delete a widget.\n   *\n   * @param widget\n   * @private\n   */\n  private deleteWidget(widget: any) {\n    this.model.doAction(Actions.deleteTab(widget.id));\n  }\n\n  /**\n   * Return widgets.\n   *\n   * @private\n   */\n  private getWidgets(): Widget[] {\n    return Object.values(this.store.getState().widgets)\n  }\n\n  /**\n   * Get specific widget.\n   *\n   * @param id\n   * @private\n   */\n  private getWidget(id): Widget {\n    return getWidget(this.store, id)\n  }\n\n  /**\n   * Handles state update related to actions in the flex layout\n   * (e.g. select or move tab)\n   *\n   * @memberof Control\n   * @param action\n   */\n  onAction(action) {\n    const oldModel = this.model.toJson();\n    let defaultAction = true;\n    switch (action.type) {\n      case Actions.SET_ACTIVE_TABSET:\n        break;\n      case Actions.SELECT_TAB:\n        const widget = this.getWidget(action.data.tabNode);\n        if (widget && widget.status === WidgetStatus.MINIMIZED) {\n          this.minimizeHelper.restoreWidget(widget);\n        }\n\n        break;\n      case Actions.DELETE_TAB: {\n        if (this.getWidget(action.data.node).hideOnClose) {\n          // widget only minimized, won't be removed from layout nor widgets list\n          this.minimizeHelper.minimizeWidget(action.data.node);\n          defaultAction = false;\n        } else {\n          // remove widget from widgets list\n          this.store.dispatch(removeWidgetFromStore(action.data.node))\n        }\n        break;\n      }\n      case Actions.MAXIMIZE_TOGGLE:\n\t// reminder, widgets are not maximised but tabsets are\n        break;\n      case Actions.RENAME_TAB:\n        break;\n      case Actions.ADJUST_SPLIT:\n        break;\n      case Actions.ADD_NODE: {\n        break;\n      }\n      case Actions.MOVE_NODE: {\n        break;\n      }\n      default: {\n        this.model.doAction(action);\n      }\n    }\n    if (defaultAction) {\n      this.model.doAction(action);\n    }\n    this.fixRowRecursive(this.model._root)\n\n    const newModel = this.model.toJson();\n    if (oldModel !== newModel) {\n\n      this.store.dispatch(updateLayout(this.model));\n    }\n  }\n\n  /**\n   * Update a widget.\n   *\n   * @param widget\n   * @private\n   */\n  private updateWidget(widget: Widget) {\n    const { model } = this;\n    const previousWidget = this.getWidget(widget.id);\n    const mergedWidget = { ...previousWidget, ...widget }\n\n    const widgetRestored = this.minimizeHelper.restoreWidgetIfNecessary(previousWidget, mergedWidget);\n    if(!widgetRestored){\n      moveWidget(model, mergedWidget);\n    }\n\n    this.widgetFactory.updateWidget(mergedWidget);\n\n    const node = this.model.getNodeById(widget.id);\n\n\n    if (node) {\n      model.doAction(Actions.updateNodeAttributes(mergedWidget.id, widget2Node(mergedWidget)));\n      if (mergedWidget.status == WidgetStatus.ACTIVE) {\n        model.doAction(FlexLayout.Actions.selectTab(mergedWidget.id));\n      }\n      if((widget.status == WidgetStatus.MAXIMIZED && !node.getParent().isMaximized()) ||\n          (widget.status == WidgetStatus.ACTIVE && node.getParent().isMaximized())) {\n        this.model.doAction(FlexLayout.Actions.maximizeToggle(node.getParent().getId()));\n      }\n      else if(widget.status == WidgetStatus.MINIMIZED && !this.minimizeHelper.isMinimized(widget)) {\n        this.minimizeHelper.minimizeWidget(node.getId());\n      }\n    }\n\n    return mergedWidget\n  }\n\n  /**\n   * Create widget for node.\n   *\n   * @param node\n   */\n  factory(node) {\n    return this.widgetFactory.factory(node.getConfig());\n  }\n\n  /**\n   * Create icon for node.\n   *\n   * @param node\n   */\n  iconFactory(node) {\n    // TODO move to newest flexlayout-react to add this functionality when needed\n    return this.tabsetIconFactory.factory(node.getConfig());\n  }\n\n\n}\n\nexport function initLayoutManager(model, componentMap: ComponentMap, iconFactory: TabsetIconFactory, isMinimizeEnabled: boolean) {\n  instance = new LayoutManager(model, componentMap, iconFactory, isMinimizeEnabled);\n  return instance;\n}\n\nexport const getLayoutManagerInstance = () => instance;\n"],"mappings":"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"}