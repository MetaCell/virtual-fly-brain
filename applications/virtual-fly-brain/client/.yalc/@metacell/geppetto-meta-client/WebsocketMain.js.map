{"version":3,"file":"WebsocketMain.js","names":["createChannel","GEPPETTO_CONFIGURATION","embedded","embedderURL","handleRequest","$","isArray","window","parent","postMessage","init","contextPath","host","urljoin","MessageSocket","protocol","location","replace","baseHost","pathname","substring","lastIndexOf","endsWith","connect","console","log","Events","listen","send"],"sources":["../src/WebsocketMain.js"],"sourcesContent":["/**\n * Geppetto entry point\n *\n */\n\nimport urljoin from 'url-join';\n\nimport MessageSocket from './communication/MessageSocket';\n\nimport Events from './Events';\n\n/**\n *\n */\nfunction createChannel () {\n  // Change link from blank to self for GEPPETTO_CONFIGURATION.embedded environments\n  if (GEPPETTO_CONFIGURATION.embedded && GEPPETTO_CONFIGURATION.embedderURL !== \"/\" && typeof handleRequest == 'undefined') {\n    if ($.isArray(GEPPETTO_CONFIGURATION.embedderURL)) {\n      window.parent.postMessage({ \"command\": \"ready\" }, GEPPETTO_CONFIGURATION.embedderURL[0]);\n    } else {\n      window.parent.postMessage({ \"command\": \"ready\" }, GEPPETTO_CONFIGURATION.embedderURL);\n    }\n  }\n}\n\n/**\n * Initialize web socket communication\n */\nexport function init () {\n  if (GEPPETTO_CONFIGURATION.contextPath == \"/\") {\n    var host = urljoin(MessageSocket.protocol + window.location.host.replace(\"8081\", \"8080\"), '/GeppettoServlet');\n  } else {\n    var baseHost = MessageSocket.protocol + window.location.host;\n    var contextPath = window.location.pathname.substring(0, window.location.pathname.lastIndexOf(\"/\"));\n    if (!contextPath.endsWith(GEPPETTO_CONFIGURATION.contextPath.replace(/^\\/|\\/$/g, ''))) {\n      contextPath = urljoin(contextPath, GEPPETTO_CONFIGURATION.contextPath);\n    }\n    var host = urljoin(baseHost, contextPath, \"GeppettoServlet\")\n  }\n  MessageSocket.connect(host);\n  console.log(\"Host for MessageSocket to connect: \" + host);\n  Events.listen();\n  createChannel();\n  MessageSocket.send(\"geppetto_version\", null);\n}\n\n\nexport default { init };\n"],"mappings":";;;;;;;AAKA;AAEA;AAEA;AAA8B;AAT9B;AACA;AACA;AACA;;AAQA;AACA;AACA;AACA,SAASA,aAAa,GAAI;EACxB;EACA,IAAIC,sBAAsB,CAACC,QAAQ,IAAID,sBAAsB,CAACE,WAAW,KAAK,GAAG,IAAI,OAAOC,aAAa,IAAI,WAAW,EAAE;IACxH,IAAIC,CAAC,CAACC,OAAO,CAACL,sBAAsB,CAACE,WAAW,CAAC,EAAE;MACjDI,MAAM,CAACC,MAAM,CAACC,WAAW,CAAC;QAAE,SAAS,EAAE;MAAQ,CAAC,EAAER,sBAAsB,CAACE,WAAW,CAAC,CAAC,CAAC,CAAC;IAC1F,CAAC,MAAM;MACLI,MAAM,CAACC,MAAM,CAACC,WAAW,CAAC;QAAE,SAAS,EAAE;MAAQ,CAAC,EAAER,sBAAsB,CAACE,WAAW,CAAC;IACvF;EACF;AACF;;AAEA;AACA;AACA;AACO,SAASO,IAAI,GAAI;EACtB,IAAIT,sBAAsB,CAACU,WAAW,IAAI,GAAG,EAAE;IAC7C,IAAIC,IAAI,GAAG,IAAAC,mBAAO,EAACC,yBAAa,CAACC,QAAQ,GAAGR,MAAM,CAACS,QAAQ,CAACJ,IAAI,CAACK,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE,kBAAkB,CAAC;EAC/G,CAAC,MAAM;IACL,IAAIC,QAAQ,GAAGJ,yBAAa,CAACC,QAAQ,GAAGR,MAAM,CAACS,QAAQ,CAACJ,IAAI;IAC5D,IAAID,WAAW,GAAGJ,MAAM,CAACS,QAAQ,CAACG,QAAQ,CAACC,SAAS,CAAC,CAAC,EAAEb,MAAM,CAACS,QAAQ,CAACG,QAAQ,CAACE,WAAW,CAAC,GAAG,CAAC,CAAC;IAClG,IAAI,CAACV,WAAW,CAACW,QAAQ,CAACrB,sBAAsB,CAACU,WAAW,CAACM,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC,EAAE;MACrFN,WAAW,GAAG,IAAAE,mBAAO,EAACF,WAAW,EAAEV,sBAAsB,CAACU,WAAW,CAAC;IACxE;IACA,IAAIC,IAAI,GAAG,IAAAC,mBAAO,EAACK,QAAQ,EAAEP,WAAW,EAAE,iBAAiB,CAAC;EAC9D;EACAG,yBAAa,CAACS,OAAO,CAACX,IAAI,CAAC;EAC3BY,OAAO,CAACC,GAAG,CAAC,qCAAqC,GAAGb,IAAI,CAAC;EACzDc,kBAAM,CAACC,MAAM,EAAE;EACf3B,aAAa,EAAE;EACfc,yBAAa,CAACc,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC;AAC9C;AAAC,eAGc;EAAElB,IAAI,EAAJA;AAAK,CAAC;AAAA"}