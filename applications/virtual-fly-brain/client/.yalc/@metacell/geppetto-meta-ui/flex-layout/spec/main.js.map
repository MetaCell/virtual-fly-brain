{"version":3,"file":"main.js","names":["_Model","_interopRequireDefault","require","_Actions","_DockLocation","obj","__esModule","describe","it","model","Model","fromJson","global","layout","type","id","children","name","enableDeleteWhenEmpty","doAction","Actions","addNode","component","DockLocation","CENTER","expected","json","toJson","expect","toEqual","console","log","JSON","stringify"],"sources":["../../../src/flex-layout/spec/main.ts"],"sourcesContent":["\nimport Model from \"../src/model/Model\";\nimport Actions from \"../src/model/Actions\";\nimport DockLocation from \"../src/DockLocation\";\n\ndescribe(\"Tree\", function()\n{\n\tit(\"adds a tab to center of empty tabset using add action\", function()\n\t{\n        const model = Model.fromJson(\n            {\n                global: {},\n                layout: {\n                    type: \"row\",\n                    id: \"0\",\n                    children: [\n                        {\n                            type: \"tabset\",\n                            name: \"one\",\n                            id: \"1\",\n                            enableDeleteWhenEmpty: false,\n                            children: []\n                        }\n                    ]\n                }\n            }\n        );\n        model.doAction(Actions.addNode({id:\"2\", name: \"newtab1\", component: \"grid\"}, \"1\", DockLocation.CENTER, -1));\n\n\t\tlet expected :any= {\n            \"global\": {},\n            \n\t\t\t\"layout\": {\n\t\t\t\t\"type\": \"row\",\n\t\t\t\t\"id\": \"0\",\n\t\t\t\t\"children\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"tabset\",\n                        \"name\": \"one\",\n                        \"enableDeleteWhenEmpty\": false,\n                        \"active\": true,\n\t\t\t\t\t\t\"id\": \"1\",\n\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"type\": \"tab\",\n\t\t\t\t\t\t\t\t\"id\":\"2\",\n\t\t\t\t\t\t\t\t\"name\": \"newtab1\",\n\t\t\t\t\t\t\t\t\"component\": \"grid\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n            },\n            \"borders\": []\n\t\t};\n\n        const json = model.toJson();\n\n        expect(json).toEqual(expected);\n\n\t\tconsole.log(JSON.stringify(json, null, \"\\t\"));\n\t})\n\n\t// todo:\n\n\t// adding into tabset with position: 0, middle, end\n\t// adding into rows (ie splitting a tabset)\n\n\t// auto assignment of ids\n\n\t// dividers moving\n\t// moving tabs and tidying tree\n\t// removing tabs and tidying tree\n\t// setting attributes\n\n\n\n});\n\n\n"],"mappings":";;AACA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,QAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,aAAA,GAAAH,sBAAA,CAAAC,OAAA;AAA+C,SAAAD,uBAAAI,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,gBAAAA,GAAA;AAE/CE,QAAQ,CAAC,MAAM,EAAE,YACjB;EACCC,EAAE,CAAC,uDAAuD,EAAE,YAC5D;IACO,IAAMC,KAAK,GAAGC,iBAAK,CAACC,QAAQ,CACxB;MACIC,MAAM,EAAE,CAAC,CAAC;MACVC,MAAM,EAAE;QACJC,IAAI,EAAE,KAAK;QACXC,EAAE,EAAE,GAAG;QACPC,QAAQ,EAAE,CACN;UACIF,IAAI,EAAE,QAAQ;UACdG,IAAI,EAAE,KAAK;UACXF,EAAE,EAAE,GAAG;UACPG,qBAAqB,EAAE,KAAK;UAC5BF,QAAQ,EAAE;QACd,CAAC;MAET;IACJ,CACJ,CAAC;IACDP,KAAK,CAACU,QAAQ,CAACC,mBAAO,CAACC,OAAO,CAAC;MAACN,EAAE,EAAC,GAAG;MAAEE,IAAI,EAAE,SAAS;MAAEK,SAAS,EAAE;IAAM,CAAC,EAAE,GAAG,EAAEC,wBAAY,CAACC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;IAEjH,IAAIC,QAAa,GAAE;MACT,QAAQ,EAAE,CAAC,CAAC;MAErB,QAAQ,EAAE;QACT,MAAM,EAAE,KAAK;QACb,IAAI,EAAE,GAAG;QACT,UAAU,EAAE,CACX;UACC,MAAM,EAAE,QAAQ;UACE,MAAM,EAAE,KAAK;UACb,uBAAuB,EAAE,KAAK;UAC9B,QAAQ,EAAE,IAAI;UAChC,IAAI,EAAE,GAAG;UACT,UAAU,EAAE,CACX;YACC,MAAM,EAAE,KAAK;YACb,IAAI,EAAC,GAAG;YACR,MAAM,EAAE,SAAS;YACjB,WAAW,EAAE;UACd,CAAC;QAEH,CAAC;MAEM,CAAC;MACD,SAAS,EAAE;IACrB,CAAC;IAEK,IAAMC,IAAI,GAAGjB,KAAK,CAACkB,MAAM,CAAC,CAAC;IAE3BC,MAAM,CAACF,IAAI,CAAC,CAACG,OAAO,CAACJ,QAAQ,CAAC;IAEpCK,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,SAAS,CAACP,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;EAC9C,CAAC,CAAC;;EAEF;;EAEA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;AAID,CAAC,CAAC","ignoreList":[]}