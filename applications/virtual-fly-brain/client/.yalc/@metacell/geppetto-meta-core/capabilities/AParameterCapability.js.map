{"version":3,"file":"AParameterCapability.js","names":["Instance","require","Variable","capabilityId","value","getUnit","unit","undefined","initialValues","getVariable","getWrappedObj","i","length","eClass","getInitialValue","initVal","getValue","isStatic","getScalingFactor","scalingFactor","setValue","updateServer"],"sources":["../../src/capabilities/AParameterCapability.js"],"sourcesContent":["\n\n/**\n * Client class use to augment a model with parameter capabilities\n *\n * @module model/AParameterCapability\n * @author Matteo Cantarelli\n * @author Giovanni Idili\n */\n\n\nvar Instance = require('../model/Instance').default;\nvar Variable = require('../model/Variable').default;\n\nexport default {\n  capabilityId: 'ParameterCapability',\n  value: null,\n\n  /**\n   * Get the type of tree this is\n   *\n   * @command Parameter.getUnit()\n   * @returns {String} Unit for quantity\n   */\n  getUnit: function () {\n    var unit = undefined;\n    var initialValues = null;\n\n    if (this instanceof Instance) {\n      initialValues = this.getVariable().getWrappedObj().initialValues;\n    } else if (this instanceof Variable){\n      initialValues = this.getWrappedObj().initialValues;\n    }\n\n    for (var i = 0; i < initialValues.length; i++) {\n      if (initialValues[i].value.eClass === 'PhysicalQuantity') {\n        unit = initialValues[i].value.unit.unit\n      }\n    }\n\n    return unit;\n  },\n\n  /**\n   * Get initial value of parameter\n   * @command Parameter.getInitialValue()\n   * @returns {String} Value of quantity\n   */\n  getInitialValue: function () {\n    var initVal = null;\n\n    var initialValues = null;\n\n    if (this instanceof Instance) {\n      initialValues = this.getVariable().getWrappedObj().initialValues;\n    } else if (this instanceof Variable){\n      initialValues = this.getWrappedObj().initialValues;\n    }\n\n    for (var i = 0; i < initialValues.length; i++) {\n      if (initialValues[i].value.eClass === 'PhysicalQuantity') {\n        // this is ugly\n        initVal = initialValues[i].value.value;\n      }\n    }\n\n    return initVal;\n  },\n\n  /**\n   * Get value of quantity\n   *\n   * @command Parameter.getValue()\n   * @returns {String} Value of quantity\n   */\n  getValue: function () {\n    var value = null;\n\n    if ((this instanceof Instance) && this.getVariable().isStatic()){\n      value = this.getVariable().getValue();\n    } else {\n      value = this.value;\n    }\n\n    if (value == null || value == undefined) {\n      // if value is empty fetch from initial values\n      value = this.getInitialValue();\n    }\n\n    return value;\n  },\n\n  /**\n   * Get scaling factor\n   *\n   * @command Parameter.getScalingFactor()\n   * @returns {String} Scaling Factor for value and unit\n   */\n  getScalingFactor: function () {\n    var scalingFactor = undefined;\n    var initialValues = null;\n\n    if (this instanceof Instance) {\n      initialValues = this.getVariable().getWrappedObj().initialValues;\n    } else if (this instanceof Variable){\n      initialValues = this.getWrappedObj().initialValues;\n    }\n\n    for (var i = 0; i < initialValues.length; i++) {\n      if (initialValues[i].value.eClass === 'PhysicalQuantity') {\n        scalingFactor = initialValues[i].value.scalingFactor;\n      }\n    }\n\n    return scalingFactor;\n  },\n\n  /**\n   * Sets Value for parameter node.\n   */\n  setValue: function (value, updateServer) {\n    if (updateServer == undefined) {\n      updateServer = true;\n    }\n\n    // always set this regardless of variable vs instance (so the value will be in the call below)\n    this.value = value;         \n    return this;\n  }\n}\n"],"mappings":"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"}