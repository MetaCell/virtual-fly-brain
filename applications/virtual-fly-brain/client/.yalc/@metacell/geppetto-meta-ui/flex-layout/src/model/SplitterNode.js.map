{"version":3,"file":"SplitterNode.js","names":["_AttributeDefinitions","_interopRequireDefault","require","_Orientation","_Node2","obj","__esModule","_typeof","o","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","key","_createClass","protoProps","staticProps","_callSuper","t","e","_getPrototypeOf","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","apply","self","call","_assertThisInitialized","ReferenceError","Boolean","valueOf","setPrototypeOf","getPrototypeOf","bind","__proto__","_inherits","subClass","superClass","create","value","_setPrototypeOf","p","_defineProperty","_toPrimitive","r","toPrimitive","String","Number","SplitterNode","_Node","model","_this","_fixed","_attributes","type","TYPE","_addNode","getWidth","_model","getSplitterSize","getMinWidth","getOrientation","Orientation","VERT","getHeight","getMinHeight","HORZ","getMinSize","orientation","getWeight","_setWeight","_getPrefSize","_updateAttrs","json","_getAttributeDefinitions","AttributeDefinitions","_toJson","undefined","Node","_default","exports"],"sources":["../../../../src/flex-layout/src/model/SplitterNode.ts"],"sourcesContent":["import AttributeDefinitions from \"../AttributeDefinitions\";\nimport Orientation from \"../Orientation\";\nimport Model from \"./Model\";\nimport Node from \"./Node\";\n\nclass SplitterNode extends Node {\n    static readonly TYPE: string = \"splitter\";\n\n    /** @hidden @internal */\n    constructor(model: Model) {\n        super(model);\n        this._fixed = true;\n        this._attributes.type = SplitterNode.TYPE;\n        model._addNode(this);\n    }\n\n    /** @hidden @internal */\n    getWidth() {\n        return this._model.getSplitterSize();\n    }\n\n    /** @hidden @internal */\n    getMinWidth() {\n        if (this.getOrientation() === Orientation.VERT) {\n            return this._model.getSplitterSize();\n        } else {\n            return 0;\n        }\n    }\n\n    /** @hidden @internal */\n    getHeight() {\n        return this._model.getSplitterSize();\n    }\n\n    /** @hidden @internal */\n    getMinHeight() {\n        if (this.getOrientation() === Orientation.HORZ) {\n            return this._model.getSplitterSize();\n        } else {\n            return 0;\n        }\n    }\n\n    /** @hidden @internal */\n    getMinSize(orientation: Orientation) {\n        if (orientation === Orientation.HORZ) {\n            return this.getMinWidth();\n        } else {\n            return this.getMinHeight();\n        }\n    }\n\n    /** @hidden @internal */\n    getWeight(): number {\n        return 0;\n    }\n\n    /** @hidden @internal */\n    _setWeight(value: number): void {}\n\n    /** @hidden @internal */\n    _getPrefSize(orientation: Orientation): number {\n        return this._model.getSplitterSize();\n    }\n\n    /** @hidden @internal */\n    _updateAttrs(json: any): void {}\n\n    /** @hidden @internal */\n    _getAttributeDefinitions(): AttributeDefinitions {\n        return new AttributeDefinitions();\n    }\n\n    /** @hidden @internal */\n    _toJson(): any {\n        return undefined;\n    }\n}\n\nexport default SplitterNode;\n"],"mappings":"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","ignoreList":[]}