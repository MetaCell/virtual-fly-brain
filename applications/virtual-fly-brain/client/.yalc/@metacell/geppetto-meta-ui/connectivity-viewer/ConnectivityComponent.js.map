{"version":3,"file":"ConnectivityComponent.js","names":["_react","_interopRequireWildcard","require","_core","_ConnectivityToolbar","_interopRequireDefault","_ConnectivityPlot","_Matrix","_Hive","_Force","_Chord","_Grid","_propTypes","_CustomToolbar","obj","__esModule","_getRequireWildcardCache","e","WeakMap","r","t","_typeof","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","length","descriptor","enumerable","configurable","writable","_toPropertyKey","key","_createClass","protoProps","staticProps","prototype","_toPrimitive","Symbol","toPrimitive","String","Number","_callSuper","o","_getPrototypeOf","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","constructor","apply","self","_assertThisInitialized","ReferenceError","Boolean","valueOf","setPrototypeOf","getPrototypeOf","bind","_inherits","subClass","superClass","create","value","_setPrototypeOf","p","styles","theme","container","display","alignItems","flex","ConnectivityComponent","_Component","_this","state","layout","Matrix","toolbarVisibility","legendsVisibility","dimensions","legendHandler","deckHandler","sortOptionsHandler","plotRef","React","createRef","containerRef","_this2","setState","toolbarHandler","visibility","option","setOrder","current","componentDidMount","toolbarHeight","width","clientWidth","height","clientHeight","renderContent","_this$props","classes","id","data","colorMap","colors","names","modelFactory","resources","matrixOnClickHandler","nodeType","linkWeight","linkType","library","toolbarOptions","_this$state","createElement","className","spacing","item","sm","xs","options","ref","size","render","_this3","content","onMouseEnter","onMouseLeave","Component","defaultProps","propTypes","PropTypes","string","isRequired","array","object","func","arrayOf","oneOfType","instanceOf","Hive","Force","Chord","shape","elementType","containerStyles","toolBarClassName","innerDivStyles","buttonStyles","menuButtonStyles","deckStyles","_default","exports","withStyles"],"sources":["../../src/connectivity-viewer/ConnectivityComponent.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core';\nimport ConnectivityToolbar from './subcomponents/ConnectivityToolbar';\nimport ConnectivityPlot from './subcomponents/ConnectivityPlot';\nimport { Matrix } from './layouts/Matrix';\nimport { Hive } from './layouts/Hive';\nimport { Force } from './layouts/Force';\nimport { Chord } from './layouts/Chord';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\nimport CustomToolbar from \"../common/CustomToolbar\";\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    alignItems: 'stretch',\n    flex: 1,\n  },\n});\n\nclass ConnectivityComponent extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      layout: this.props.layout !== null ? this.props.layout : new Matrix(),\n      toolbarVisibility: true,\n      legendsVisibility: true,\n      dimensions: null,\n    };\n    this.legendHandler = this.legendHandler.bind(this);\n    this.deckHandler = this.deckHandler.bind(this);\n    this.sortOptionsHandler = this.sortOptionsHandler.bind(this);\n    this.plotRef = React.createRef();\n    this.containerRef = React.createRef();\n  }\n\n  /**\n   *\n   * Handles legend toggle button\n   *\n   * @command legendHandler ()\n   *\n   */\n  legendHandler () {\n    this.setState(() => ({ legendsVisibility: !this.state.legendsVisibility }));\n  }\n\n  /**\n   *\n   * Handles toolbar visibility\n   *\n   * @command toolbarHandler (visibility)\n   *\n   */\n\n  toolbarHandler (visibility) {\n    this.setState(() => ({ toolbarVisibility: visibility }));\n  }\n\n  /**\n   *\n   * Handle layout selection\n   *\n   * @command deckHandler (layout)\n   *\n   * @param layout\n   */\n  deckHandler (layout) {\n    this.setState(() => ({ layout: layout }));\n  }\n\n  /**\n   *\n   * Updates the sorting order\n   *\n   * @command sortOptionsHandler (option)\n   *\n   */\n  sortOptionsHandler (option) {\n    this.state.layout.setOrder(this.plotRef.current, option);\n  }\n\n  componentDidMount () {\n    const toolbarHeight = 140;\n\n    this.setState({\n      dimensions: {\n        width: this.containerRef.current.clientWidth,\n        height: this.containerRef.current.clientHeight - toolbarHeight,\n      },\n    });\n  }\n\n  renderContent () {\n    const {\n      classes,\n      id,\n      data,\n      colorMap,\n      colors,\n      names,\n      modelFactory,\n      resources,\n      matrixOnClickHandler,\n      nodeType,\n      linkWeight,\n      linkType,\n      library,\n      toolbarOptions\n    } = this.props;\n    const {\n      layout,\n      toolbarVisibility,\n      legendsVisibility,\n      dimensions,\n    } = this.state;\n\n    return (\n      <Grid className={classes.container} container spacing={2}>\n        <Grid item sm={12} xs={12}>\n          <ConnectivityToolbar\n            id={id}\n            layout={layout}\n            toolbarVisibility={toolbarVisibility}\n            legendsVisibility={legendsVisibility}\n            legendHandler={this.legendHandler}\n            deckHandler={this.deckHandler}\n            sortOptionsHandler={this.sortOptionsHandler}\n            options={toolbarOptions}\n          />\n        </Grid>\n        <Grid item sm={12} xs>\n          <ConnectivityPlot\n            ref={this.plotRef}\n            id={id}\n            size={dimensions}\n            data={data}\n            colorMap={colorMap}\n            colors={colors}\n            names={names}\n            layout={layout}\n            legendsVisibility={legendsVisibility}\n            toolbarVisibility={toolbarVisibility}\n            modelFactory={modelFactory}\n            resources={resources}\n            matrixOnClickHandler={matrixOnClickHandler}\n            nodeType={nodeType}\n            linkWeight={linkWeight}\n            linkType={linkType}\n            library={library}\n          />\n        </Grid>\n      </Grid>\n    );\n  }\n\n  render () {\n    const { classes } = this.props;\n    const { dimensions } = this.state;\n\n    const content = dimensions != null ? this.renderContent() : '';\n    return (\n      <div\n        ref={this.containerRef}\n        className={classes.container}\n        onMouseEnter={() => this.toolbarHandler(true)}\n        onMouseLeave={() => this.toolbarHandler(false)}\n      >\n        {content}\n      </div>\n    );\n  }\n}\n\nConnectivityComponent.defaultProps = {\n  names: [],\n  colorMap: () => {\n  },\n  linkType: () => {\n  },\n  layout: new Matrix(),\n  linkWeight: () => {\n  },\n  nodeType: () => {\n  },\n  library: () => {\n  },\n  toolbarOptions: {}\n}\n\nConnectivityComponent.propTypes = {\n  /**\n   * Component identifier\n   */\n  id: PropTypes.string.isRequired,\n  /**\n   * Array of colors to provide for each subtitle\n   */\n  colors: PropTypes.array.isRequired,\n  /**\n   * Model entities to be visualized\n   */\n  data: PropTypes.object.isRequired,\n  /**\n   * Geppetto Model Factory\n   */\n  modelFactory: PropTypes.object.isRequired,\n  /**\n   * Geppetto Resources\n   */\n  resources: PropTypes.object.isRequired,\n  /**\n   * Function to handle click events on Matrix layout\n   */\n  matrixOnClickHandler: PropTypes.func.isRequired,\n  /**\n   * Array of names supplied to the connectivity plot. Defaults to an empty array\n   */\n  names: PropTypes.arrayOf(PropTypes.string),\n  /**\n   * Function returning a d3 scaleOrdinal\n   */\n  colorMap: PropTypes.func,\n  /**\n   * One of Matrix, Hive, Force or Chord objects. Defaults to Matrix\n   */\n  layout: PropTypes.oneOfType([\n    PropTypes.instanceOf(Matrix),\n    PropTypes.instanceOf(Hive),\n    PropTypes.instanceOf(Force),\n    PropTypes.instanceOf(Chord),\n  ]),\n  /**\n   * Function to colour links (synapses) by neurotransmitter\n   */\n  linkType: PropTypes.func,\n  /**\n   * Function to scale line widths based on the synaptic base conductance leve\n   */\n  linkWeight: PropTypes.func,\n  /**\n   * Function that maps the connection source node (object of class EntityNode ) onto any type of value (coercible to string) which qualitatively identifies the node category\n   */\n  nodeType: PropTypes.func,\n  /**\n   * Geppetto library that supplies a network type\n   */\n  library: PropTypes.func,\n  /**\n   * Options to customize the toolbar\n   */\n  toolbarOptions: PropTypes.shape({\n    /**\n     * Reference to toolbar component\n     */\n    instance: PropTypes.elementType,\n    /**\n     * Custom toolbar props\n     */\n    props: PropTypes.shape({}),\n\n    /**\n     * Styles to be applied to the toolbar container\n     */\n    containerStyles: PropTypes.shape({}),\n    /**\n     * Styles to be applied to the toolbar\n     */\n    toolBarClassName: PropTypes.shape({}),\n    /**\n     * Styles to be applied to the inner div\n     */\n    innerDivStyles: PropTypes.shape({}),\n    /**\n     * Styles to be applied to the buttons\n     */\n    buttonStyles: PropTypes.shape({}),\n    /**\n     * Styles to be applied to the menu button\n     */\n    menuButtonStyles: PropTypes.shape({}),\n    /**\n     * Styles to be applied to the deck\n     */\n    deckStyles: PropTypes.shape({}),\n  }),\n};\n\nexport default withStyles(styles)(ConnectivityComponent);\n"],"mappings":"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","ignoreList":[]}