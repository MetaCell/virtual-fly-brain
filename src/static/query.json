
{"queries": [
	{
		"name": "Neurons with some part in medulla",
		"id": "NeuronsPartHere",
		"steps": [
					{	
						"querytype": "jsonurl",
						"takes": [],
						"query": "http://owl.virtualflybrain.org/kbs/vfb/instances?object=%3Chttp://purl.obolibrary.org/obo/FBbt_00005106%3E%20and%20%3Chttp://purl.obolibrary.org/obo/RO_0002131%3E%20some%20%3Chttp://purl.obolibrary.org/obo/FBbt_00003748%3E&direct=false&includeDeprecated=false",
						"resultmask": "{\"@id\":\"_:b0\",\"value\":\"ObjectIntersectionOf(<http://purl.obolibrary.org/obo/FBbt_00005106> ObjectSomeValuesFrom(<http://purl.obolibrary.org/obo/RO_0002131> <http://purl.obolibrary.org/obo/FBbt_00003748>))\",\"hasInstance\":[$XXXXXXXX$],\"@context\":\"https://owlery.phenoscape.org/json/context.jsonld\"}",
						"values": [
								{
									"name": "IRIs",
									"mask": "$XXXXXXXX$",
									"valuetype": "string"
								} 	
							]
					},
					{	
						"querytype": "replaceall",
						"takes": "IRIs",
						"regex": "false",
						"replace": "http://virtualflybrain.org/reports/",
						"with": "",
						return: "IDs"
					},
					{	
						"querytype": "replaceall",
						"takes": "IDs",
						"regex": "false",
						"replace": "\",\"",
						"with": "+OR+",
						return: "IDs"
					},
					{	
						"querytype": "replaceall",
						"takes": "IDs",
						"regex": "false",
						"replace": "\"",
						"with": "",
						return: "IDs"
					},
					{	
						"querytype": "replaceall",
						"takes": "IDs",
						"regex": "true",
						"replace": "[\[,\]]",
						"with": "",
						return: "IDs"
					},
					{	
						"querytype": "jsonurl",
						"takes": ["IDs"],
						"query": "http://solr.virtualflybrain.org/solr/vfb_json/query?q=$IDs$&defType=edismax&qf=id&wt=json&fl=anat_image_query",
						"regex": "true",
						"resultmask": "{.*\"responseHeader\":{.*},.*\"response\":{\"numFound\":$YYYYYYYY$,\"start\":0,\"numFoundExact\":.*,\"docs\":[$XXXXXXXX$]}}",
						"values": [
								{
									"name": "RESULTS",
									"mask": "$XXXXXXXX$",
									"valuetype": "json"
								},
								{
									"name": "NUMBER",
									"mask": "$YYYYYYYY$",
									"valuetype": "int"
								}  	
							]
					}
				],
			"numresults": "NUMBER",
			"results": "RESULTS"
		},
		"name": "Neurons with presynaptic terminals in medulla",
		"id": "NeuronsPresynapticHere",
		"steps": [
					{	
						"querytype": "jsonurl",
						"takes": [],
						"query": "http://owl.virtualflybrain.org/kbs/vfb/subclasses?object=%3Chttp://purl.obolibrary.org/obo/FBbt_00005106%3E%20and%20%3Chttp://purl.obolibrary.org/obo/RO_0002113%3E%20some%20%3Chttp://purl.obolibrary.org/obo/FBbt_00003748%3E&direct=false&includeDeprecated=false&includeEquivalent=true",
						"resultmask": "{\"equivalentClass\":[.*],\"value\":\"ObjectIntersectionOf(<http://purl.obolibrary.org/obo/FBbt_00005106> ObjectSomeValuesFrom(<http://purl.obolibrary.org/obo/RO_0002113> <http://purl.obolibrary.org/obo/FBbt_00003748>))\",\"@context\":\"https://owlery.phenoscape.org/json/context.jsonld\",\"superClassOf\":[$XXXXXXXX$],\"@id\":\".*\"}",
						"values": [
								{
									"name": "IRIs",
									"mask": "$XXXXXXXX$",
									"valuetype": "string"
								} 	
							]
					},
					{	
						"querytype": "replaceall",
						"takes": "IRIs",
						"regex": "false",
						"replace": "http://purl.obolibrary.org/obo/",
						"with": "",
						return: "IDs"
					},
					{	
						"querytype": "replaceall",
						"takes": "IDs",
						"regex": "false",
						"replace": "\",\"",
						"with": "+OR+",
						return: "IDs"
					},
					{	
						"querytype": "replaceall",
						"takes": "IDs",
						"regex": "false",
						"replace": "\"",
						"with": "",
						return: "IDs"
					},
					{	
						"querytype": "replaceall",
						"takes": "IDs",
						"regex": "true",
						"replace": "[\[,\]]",
						"with": "",
						return: "IDs"
					},
					{	
						"querytype": "jsonurl",
						"takes": ["IDs"],
						"query": "http://solr.virtualflybrain.org/solr/vfb_json/query?q=$IDs$&defType=edismax&qf=id&wt=json&fl=anat_2_ep_query",
						"regex": "true",
						"resultmask": "{.*\"responseHeader\":{.*},.*\"response\":{\"numFound\":$YYYYYYYY$,\"start\":0,\"numFoundExact\":.*,\"docs\":[$XXXXXXXX$]}}",
						"values": [
								{
									"name": "RESULTS",
									"mask": "$XXXXXXXX$",
									"valuetype": "json"
								},
								{
									"name": "NUMBER",
									"mask": "$YYYYYYYY$",
									"valuetype": "int"
								}  	
							]
					}
				],
			"numresults": "NUMBER",
			"results": "RESULTS"
		}
	]
}