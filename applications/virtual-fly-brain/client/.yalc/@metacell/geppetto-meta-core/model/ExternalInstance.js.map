{"version":3,"file":"ExternalInstance.js","names":["Instance","require","ExternalInstance","options","path","projectId","undefined","variable","children","child","direction","connections","module","exports"],"sources":["../../src/model/ExternalInstance.js"],"sourcesContent":["const Instance = require('./Instance').default;\n\n/**\n * Client class use to represent an instance object (instantiation of a variable)\n * \n * @module model/Instance\n * @author Giovanni Idili\n * @author Matteo Cantarelli\n */\nclass ExternalInstance extends Instance {\n\n  constructor (options) {\n    super(options);\n    this.path = options.path;\n    this.projectId = options.projectId;\n  }\n\n  /**\n   * Get the type for this instance\n   *\n   * @command Instance.getTypes()\n   *\n   * @returns {List<Type>} - array of types\n   *\n   */\n  getTypes () {\n    throw \"Invalid operation with ExternalInstance\";\n  }\n\n  getValues () {\n    throw \"Invalid operation with ExternalInstance\";\n  }\n  /**\n   * Get the type of this variable, return a list if it has more than one\n   *\n   * @command Variable.getType()\n   *\n   * @returns List<Type>} - array of types\n   *\n   */\n  getType () {\n    throw \"Invalid operation with ExternalInstance\";\n  }\n\n  getValue () {\n    throw \"Invalid operation with ExternalInstance\";\n  }\n\n  /**\n   *\n   * @returns {*|Object}\n   */\n  getPosition () {\n    throw \"Invalid operation with ExternalInstance\";\n  }\n\n  /**\n   * Checks if this instance has a visual type\n   *\n   * @command Instance.hasVisualType()\n   *\n   * @returns {Boolean}\n   *\n   */\n  hasVisualType () {\n    return false;\n  }\n\n  /**\n   * Gets visual types for the instance if any\n   *\n   * @command Instance.getVisualType()\n   *\n   * @returns {*} - Type or list of Types if more than one is found\n   */\n  getVisualType () {\n    return undefined;\n  }\n\n  /**\n   * Get the variable for this instance\n   *\n   * @command Instance.getVariable()\n   *\n   * @returns {Variable} - Variable object for this instance\n   *\n   */\n  getVariable () {\n    return this.variable;\n  }\n\n  /**\n   * Get children instances\n   *\n   * @command Instance.getChildren()\n   *\n   * @returns {List<Instance>} - List of instances\n   *\n   */\n  getChildren () {\n    return this.children;\n  }\n\n  /**\n   * Get instance path\n   *\n   * @command Instance.getInstancePath()\n   *\n   * @returns {String} - Instance path\n   *\n   */\n  getInstancePath () {\n    return this.path;\n  }\n\n  /**\n   * Get raw instance path (without array shortening)\n   *\n   * @command Instance.getRawInstancePath()\n   *\n   * @returns {String} - Instance path\n   *\n   */\n  getRawInstancePath () {\n    throw \"Invalid operation with ExternalInstance\";\n  }\n\n  /**\n   * Get parent\n   *\n   * @command Instance.getParent()\n   *\n   * @returns {Instance} - Parent instance\n   *\n   */\n  getParent () {\n    throw \"Invalid operation with ExternalInstance\";\n  }\n\n  /**\n   * Get children instances\n   *\n   * @command Instance.addChild()\n   */\n  addChild (child) {\n    throw \"Invalid operation with ExternalInstance\";\n  }\n\n  /**\n   * Return connections, user Resources.INPUT / OUTPUT /\n   * INPUT_OUTPUT to filter\n   *\n   * @command Instance.getConnections(direction)\n   *\n   * @returns {List<Instance>}\n   *\n   */\n  getConnections (direction) {\n    return this.connections;\n  }\n\n  /**\n   * Deletes instance\n   */\n  delete () {\n    throw \"Invalid operation with ExternalInstance\";\n  }\n\n \n}\n\n// Compatibility with new imports and old require syntax\nExternalInstance.default = ExternalInstance;\nmodule.exports = ExternalInstance;\n"],"mappings":";;;;;;;;;;;;;AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,YAAY,CAAC,WAAQ;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AANA,IAOMC,gBAAgB;EAAA;EAAA;EAEpB,0BAAaC,OAAO,EAAE;IAAA;IAAA;IACpB,0BAAMA,OAAO;IACb,MAAKC,IAAI,GAAGD,OAAO,CAACC,IAAI;IACxB,MAAKC,SAAS,GAAGF,OAAO,CAACE,SAAS;IAAC;EACrC;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAA;IAAA,OAQA,oBAAY;MACV,MAAM,yCAAyC;IACjD;EAAC;IAAA;IAAA,OAED,qBAAa;MACX,MAAM,yCAAyC;IACjD;IACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAA;IAAA,OAQA,mBAAW;MACT,MAAM,yCAAyC;IACjD;EAAC;IAAA;IAAA,OAED,oBAAY;MACV,MAAM,yCAAyC;IACjD;;IAEA;AACF;AACA;AACA;EAHE;IAAA;IAAA,OAIA,uBAAe;MACb,MAAM,yCAAyC;IACjD;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAA;IAAA,OAQA,yBAAiB;MACf,OAAO,KAAK;IACd;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAA;IAAA,OAOA,yBAAiB;MACf,OAAOC,SAAS;IAClB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAA;IAAA,OAQA,uBAAe;MACb,OAAO,IAAI,CAACC,QAAQ;IACtB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAA;IAAA,OAQA,uBAAe;MACb,OAAO,IAAI,CAACC,QAAQ;IACtB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAA;IAAA,OAQA,2BAAmB;MACjB,OAAO,IAAI,CAACJ,IAAI;IAClB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAA;IAAA,OAQA,8BAAsB;MACpB,MAAM,yCAAyC;IACjD;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAA;IAAA,OAQA,qBAAa;MACX,MAAM,yCAAyC;IACjD;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA;IAAA,OAKA,kBAAUK,KAAK,EAAE;MACf,MAAM,yCAAyC;IACjD;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EARE;IAAA;IAAA,OASA,wBAAgBC,SAAS,EAAE;MACzB,OAAO,IAAI,CAACC,WAAW;IACzB;;IAEA;AACF;AACA;EAFE;IAAA;IAAA,OAGA,mBAAU;MACR,MAAM,yCAAyC;IACjD;EAAC;EAAA;AAAA,EA7J4BX,QAAQ,GAkKvC;AACAE,gBAAgB,WAAQ,GAAGA,gBAAgB;AAC3CU,MAAM,CAACC,OAAO,GAAGX,gBAAgB"}