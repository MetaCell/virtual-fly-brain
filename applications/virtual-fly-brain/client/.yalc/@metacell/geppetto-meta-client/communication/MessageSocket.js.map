{"version":3,"file":"MessageSocket.js","names":["connectionInterval","pako","require","FileSaver","callbackHandler","messageTypes","CLIENT_ID","RECONNECTION_ERROR","MessageSocket","window","location","protocol","undefined","Resources","SocketStatus","CLOSE","connect","bind","reconnect","send","host","socket","WebSocket","binaryType","MozWebSocket","console","log","WEBSOCKET_NOT_SUPPORTED","onopen","e","WEBSOCKET_OPENED","lostConnectionId","parameters","projectId","attempts","socketStatus","OPEN","onclose","code","WEBSOCKET_CLOSED","getClientID","onmessage","msg","messageData","data","ArrayBuffer","processBinaryMessage","parseAndNotify","onerror","message","SERVER_CONNECTION_ERROR","failsafe","GEPPETTO_CONFIGURATION","contextPath","WEBSOCKET_CONNECTION_ERROR","WEBSOCKET_RECONNECTION","reconnectionLimit","RECONNECTING","autoReconnectInterval","setTimeout","EventManager","actionsHandler","clientActions","WEBSOCKET_DISCONNECTED","command","parameter","callback","STOP_LOGO","requestID","createRequestID","waitForConnection","messageTemplate","interval","isReady","that","readyState","close","id","clientID","nextID","projectURL","content","compressedMessage","messageBytes","Uint8Array","ungzip","to","parsedServerMessage","JSON","parse","debug","payload","type","setClientID","store","dispatch","subarray","fileNameLength","fileName","String","fromCharCode","apply","blob","Blob","saveAs","slice","msgtype","stringify","object"],"sources":["../../src/communication/MessageSocket.js"],"sourcesContent":["/*\n *\n * WebSocket class use for communication between client and server\n *\n * @author  Jesus R. Martinez (jesus@metacell.us)\n */\nimport Resources from '@metacell/geppetto-meta-core/Resources';\nimport EventManager from '@metacell/geppetto-meta-client/common/EventManager';\n\nconst connectionInterval = 300;\nconst pako = require(\"pako\");\nconst FileSaver = require('file-saver');\n\nconst callbackHandler = {};\n\nconst messageTypes = {\n  CLIENT_ID: \"client_id\",\n  RECONNECTION_ERROR: \"reconnection_error\",\n};\n\n/**\n * Web socket creation and communication\n */\nexport class MessageSocket {\n  socket = null;\n  clientID = null;\n  nextID = 0;\n  // sets protocol to use for connection\n  protocol = window.location.protocol === 'https:' ? \"wss://\" : \"ws://\";\n\n  // flag used to connect using ws protocol if wss failed\n  failsafe = false;\n\n  // vars used for reconnection\n  attempts = 0;\n  host = undefined;\n  projectId = undefined;\n  lostConnectionId = undefined;\n  reconnectionLimit = 10;\n  autoReconnectInterval = 5 * 1000;\n  socketStatus = Resources.SocketStatus.CLOSE;\n\n  constructor () {\n    this.connect = this.connect.bind(this);\n    this.reconnect = this.reconnect.bind(this);\n    this.send = this.send.bind(this);\n  }\n\n  connect (host) {\n    if (this.socket !== null) {\n      delete this.socket;\n    }\n    if ('WebSocket' in window) {\n      this.socket = new WebSocket(host);\n      this.host = host;\n      this.socket.binaryType = \"arraybuffer\";\n    } else if ('MozWebSocket' in window) {\n      this.socket = new MozWebSocket(host);\n    } else {\n      console.log(Resources.WEBSOCKET_NOT_SUPPORTED, true);\n      return;\n    }\n\n\n    this.socket.onopen = e => {\n      console.log(Resources.WEBSOCKET_OPENED, true);\n\n      /*\n       * attach the handlers once socket is opened on the first connection\n       * differently handle the reconnection scenario\n       */\n\n      if (this.lostConnectionId) {\n        const parameters = {};\n        parameters[\"connectionID\"] = this.lostConnectionId;\n        parameters[\"projectId\"] = this.projectId;\n        this.send(\"reconnect\", parameters);\n\n        this.lostConnectionId = undefined;\n      }\n\n\n      // Reset the counter for reconnection\n      this.attempts = 0;\n      this.socketStatus = Resources.SocketStatus.OPEN;\n      console.log(\"%c WebSocket Status - Opened \", 'background: #444; color: #bada55')\n    };\n\n    this.socket.onclose = e => {\n      switch (e.code) {\n      case 1000:\n        this.socketStatus = Resources.SocketStatus.CLOSE;\n        console.log(Resources.WEBSOCKET_CLOSED, true);\n        break;\n      default:\n        if (this.lostConnectionId === undefined) {\n          this.lostConnectionId = this.getClientID();\n        }\n        this.reconnect(e);\n      }\n    };\n\n    this.socket.onmessage = msg => {\n      const messageData = msg.data;\n\n      if (messageData == \"ping\") {\n        return;\n      }\n\n      // if it's a binary (possibly compressed) then determine its type and process it\n      if (messageData instanceof ArrayBuffer) {\n        this.processBinaryMessage(messageData);\n\n        // otherwise, for a text message, parse it and notify listeners\n      } else {\n        // a non compressed message\n        this.parseAndNotify(messageData);\n      }\n\n    };\n\n    // Detects problems when connecting to Geppetto server\n    this.socket.onerror = e => {\n      var message = Resources.SERVER_CONNECTION_ERROR;\n      /*\n       * Attempt to connect using ws first time wss fails,\n       * if ws fails too then don't try again and display info error window\n       */\n      if (this.failsafe) {\n        this.protocol = \"ws://\";\n        this.failsafe = true;\n        this.connect(this.protocol + window.location.host + '/' + GEPPETTO_CONFIGURATION.contextPath + '/GeppettoServlet');\n      } else {\n        switch (e.code) {\n        case 'ECONNREFUSED':\n          console.log(\"%c WebSocket Status - Open connection error \", 'background: #000; color: red');\n          console.log(Resources.WEBSOCKET_CONNECTION_ERROR, true);\n          break;\n        case undefined:\n          console.log(\"%c WebSocket Status - Open connection error \", 'background: #000; color: red');\n          console.log(Resources.WEBSOCKET_RECONNECTION, true);\n          break;\n        default:\n          console.log(\"%c WebSocket Status - Closed \", 'background: #000; color: red');\n          this.socketStatus = Resources.SocketStatus.CLOSE;\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * Attempt to reconnect to the backend\n   */\n  reconnect (e) {\n    if (this.attempts < this.reconnectionLimit) {\n      this.attempts++;\n      this.socketStatus = Resources.SocketStatus.RECONNECTING;\n      console.log(`WebSocket Status - retry in ${this.autoReconnectInterval}ms`, e);\n      setTimeout(() => {\n        console.log(\"%c WebSocket Status - reconnecting... \", 'background: #444; color: #bada55');\n        this.connect(this.host);\n      }, this.autoReconnectInterval);\n    } else {\n      this.socketStatus = Resources.SocketStatus.CLOSE;\n      console.log(Resources.WEBSOCKET_CLOSED, true);\n      EventManager.actionsHandler[EventManager.clientActions.WEBSOCKET_DISCONNECTED]();\n    }\n  }\n\n  /**\n   * Sends messages to the server\n   */\n  send (command, parameter, callback) {\n    if (this.socketStatus === Resources.SocketStatus.RECONNECTING && command !== \"reconnect\") {\n      EventManager.actionsHandler[EventManager.clientActions.STOP_LOGO]();\n      return;\n    }\n    var requestID = this.createRequestID();\n\n\n    this.waitForConnection(messageTemplate(requestID, command, parameter), connectionInterval);\n\n    // add callback with request id if any\n    if (callback != undefined) {\n      callbackHandler[requestID] = callback;\n    }\n\n    return requestID;\n  }\n\n  waitForConnection (messageTemplate, interval) {\n    if (this.isReady() === 1) {\n      this.socket.send(messageTemplate);\n    } else if (this.isReady() > 1) {\n      // connection is either closing (2) or already closed (3).\n      EventManager.actionsHandler[EventManager.clientActions.WEBSOCKET_DISCONNECTED]();\n    } else {\n      // must be in connecting (0) state\n      var that = this;\n      setTimeout(function () {\n        that.waitForConnection(messageTemplate);\n      }, interval);\n    }\n  }\n\n  isReady () {\n    if (this.socket !== null) {\n      return this.socket.readyState;\n    } else {\n      return 0;\n    }\n  }\n\n  close () {\n    this.socket.close();\n    EventManager.actionsHandler[EventManager.clientActions.WEBSOCKET_DISCONNECTED]();\n\n  }\n\n  /**\n   * Sets the id of the client\n   */\n  setClientID (id) {\n    this.clientID = id;\n  }\n\n  /**\n   * Sets the id of the client\n   */\n  getClientID () {\n    return this.clientID;\n  }\n  /**\n   * Creates a request id to send with the message to the server\n   */\n  createRequestID () {\n    return this.clientID + \"-\" + (this.nextID++);\n  }\n\n  loadProjectFromId (projectId) {\n    this.send(\"load_project_from_id\", { projectId });\n  }\n\n  loadProjectFromUrl (projectURL) {\n    this.send(\"load_project_from_url\", projectURL);\n  }\n\n  loadProjectFromContent (content) {\n    this.send(\"load_project_from_content\", content);\n  }\n\n  gzipUncompress (compressedMessage) {\n    var messageBytes = new Uint8Array(compressedMessage);\n    var message = pako.ungzip(messageBytes, { to: \"string\" });\n    return message;\n  }\n\n  /**\n   * Dispatches through Redux actions all messages received from the socket\n   * @param {*} messageData \n   */\n  parseAndNotify (messageData) {\n    var parsedServerMessage = JSON.parse(messageData);\n    console.debug(\"Received websocket message\", parsedServerMessage);\n    let payload = JSON.parse(parsedServerMessage.data);\n    if (payload[parsedServerMessage.type]) {\n      try {\n        payload = JSON.parse(payload[parsedServerMessage.type]);\n      } catch (e) {\n        payload = payload[parsedServerMessage.type];\n      }\n    }\n\n    switch (parsedServerMessage.type) {\n    case messageTypes.CLIENT_ID: {\n      this.setClientID(payload.clientID);\n      break;\n    }\n    case messageTypes.RECONNECTION_ERROR: {\n      this.socketStatus = Resources.SocketStatus.CLOSE;\n      break;\n    }\n    default:\n      break;\n    }\n\n\n    EventManager.store.dispatch({ type: parsedServerMessage.type, data: payload });\n\n    // run callback if any\n    if (parsedServerMessage.requestID != undefined) {\n      if (callbackHandler[parsedServerMessage.requestID] != undefined) {\n        callbackHandler[parsedServerMessage.requestID](parsedServerMessage.data);\n        delete callbackHandler[parsedServerMessage.requestID];\n      }\n    }\n\n  }\n\n\n  processBinaryMessage (message) {\n\n    var messageBytes = new Uint8Array(message);\n\n    /*\n     * if it's a binary message and first byte it's zero then assume it's a compressed json string\n     * otherwise is a file and a 'save as' dialog is opened\n     */\n    if (messageBytes[0] == 0) {\n      var message = pako.ungzip(messageBytes.subarray(1), { to: \"string\" });\n      this.parseAndNotify(message);\n    } else {\n      var fileNameLength = messageBytes[1];\n      var fileName = String.fromCharCode.apply(null, messageBytes.subarray(2, 2 + fileNameLength));\n      var blob = new Blob([message]);\n      FileSaver.saveAs(blob.slice(2 + fileNameLength), fileName);\n    }\n  }\n}\n\n/**\n * Template for Geppetto message\n *\n * @param msgtype - message type\n * @param payload - message payload, can be anything\n * @returns JSON stringified object\n */\nfunction messageTemplate (id, msgtype, payload) {\n\n  if (!(typeof payload == 'string' || payload instanceof String)) {\n    payload = JSON.stringify(payload);\n  }\n\n  var object = {\n    requestID: id,\n    type: msgtype,\n    data: payload\n  };\n  return JSON.stringify(object);\n}\n\n\nexport default new MessageSocket();\n"],"mappings":"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"}