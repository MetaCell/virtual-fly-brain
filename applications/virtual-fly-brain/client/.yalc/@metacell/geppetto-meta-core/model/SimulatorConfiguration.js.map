{"version":3,"file":"SimulatorConfiguration.js","names":["define","require","Node","Model","extend","simulatorId","conversionId","aspectInstancePath","timeStep","length","parameters","initialize","options","id","_metaType","getParameters","getSimulatorParameter","parameter","setSimulatorParameter","value","properties","setParameters","getSimulator","getConversionService","setConversionService","conversionServiceId","setSimulator","getTimeStep","setTimeStep","parseFloat","getLength","setLength","print","name","instancePath"],"sources":["../../src/model/SimulatorConfiguration.js"],"sourcesContent":["\n\n/**\n * Client class for Simulator Configurator; stores time step, simualtor id\n * and parameters.\n *\n * @module model/SimulatorConfiguration\n * @author Jesus R. Martinez (jesus@metacell.us)\n */\ndefine(function (require) {\n\n  var Node = require('./Node');\n\n  return Node.Model.extend({\n    simulatorId: \"\",\n    conversionId: \"\",\n    aspectInstancePath: \"\",\n    timeStep: null,\n    length: null,\n    parameters: null,\n\n    /**\n     * Stores simulator configuration values\n     *\n     * @param {Object} options - Object with options attributes to initialize\n     *                           node\n     */\n    initialize: function (options) {\n      // initialize parameters array\n      this.parameters = options.parameters;\n      this.id = options.id;\n      this.simulatorId = options.simulatorId;\n      this.aspectInstancePath = options.aspectInstancePath;\n      this.conversionId = options.conversionId;\n      this.timeStep = options.timeStep;\n      this.length = options.length;\n      this._metaType = options._metaType;\n    },\n\n    /**\n     * Get parameters for this Simulator Configuration\n     *\n     * @command SimulatorConfig.getParameters()\n     * @returns {Array} Array of parameters\n     */\n    getParameters: function () {\n      return this.parameters;\n    },\n\n    /**\n     * Get parameter for this Simulator Configuration\n     *\n     * @command SimulatorConfig.getSimulatorParameter()\n     * @returns {Array} Array of parameters\n     */\n    getSimulatorParameter: function (parameter) {\n      return this.parameters[parameter];\n    },\n\n    /**\n     * Sets the simulatorId for this Simulator Configuration\n     *\n     * @command SimulatorConfig.setsimulatorId(simulatorId)\n     */\n    setSimulatorParameter: function (parameter, value) {\n      var properties = {};\n      properties[\"aspectInstancePath\"] = this.aspectInstancePath;\n      properties[\"SP$\" + parameter] = value;\n      return this.parameters[parameter] = value;\n    },\n\n    /**\n     * Gets an experiment from this project.\n     *\n     * @deprecated related to experiment?\n     * @command SimulatorConfig.setParameters(parameters)\n     */\n    setParameters: function (parameters) {\n      return this.parameters = parameters;\n    },\n\n    /**\n     * Gets the simulator id for this Simulator Configuration\n     *\n     * @command SimulatorConfig.getsimulatorId()\n     * @returns {String} simulatorId string\n     */\n    getSimulator: function () {\n      return this.simulatorId;\n    },\n\n    /**\n     * Gets the conversion service for this Simulator Configuration\n     *\n     * @command SimulatorConfig.getsimulatorId()\n     * @returns {String} simulatorId string\n     */\n    getConversionService: function () {\n      return this.conversionId;\n    },\n\n    /**\n     * Sets the simulatorId for this Simulator Configuration\n     *\n     * @command SimulatorConfig.setsimulatorId(simulatorId)\n     */\n    setConversionService: function (conversionServiceId) {\n      var properties = {};\n      properties[\"conversionServiceId\"] = conversionServiceId;\n      properties[\"aspectInstancePath\"] = this.aspectInstancePath;\n      return this.conversionId = conversionServiceId;\n    },\n\n    /**\n     * Sets the simulatorId for this Simulator Configuration\n     *\n     * @command SimulatorConfig.setsimulatorId(simulatorId)\n     */\n    setSimulator: function (simulatorId) {\n      var properties = {};\n      properties[\"simulatorId\"] = simulatorId;\n      properties[\"aspectInstancePath\"] = this.aspectInstancePath;\n      return this.simulatorId = simulatorId;\n    },\n\n    /**\n     * Get time step for this Simulator Configuration\n     *\n     * @command SimulatorConfig.getTimeStep()\n     * @returns {String} String value of timestep\n     */\n    getTimeStep: function () {\n      return this.timeStep;\n    },\n\n    /**\n     * Sets the time step for the simulator configuration\n     *\n     * @command SimulatorConfig.setTimeStep(timeStep)\n     */\n    setTimeStep: function (timeStep) {\n      var properties = {};\n      if (typeof timeStep === 'string') {\n        timeStep = parseFloat(timeStep);\n      }\n      properties[\"timeStep\"] = timeStep;\n      properties[\"aspectInstancePath\"] = this.aspectInstancePath;\n      return this.timeStep = timeStep;\n    },\n\n    /**\n     * Get simulation length for this Simulator Configuration\n     *\n     * @command SimulatorConfig.getLength()\n     * @returns {String} String value of simulation length\n     */\n    getLength: function () {\n      return this.length;\n    },\n\n    /**\n     * Sets the length for the simulator configuration\n     *\n     * @command SimulatorConfig.setLength(length)\n     */\n    setLength: function (length) {\n      var properties = {};\n      if (typeof length === 'string') {\n        length = parseFloat(length);\n      }\n      properties[\"length\"] = length;\n      properties[\"aspectInstancePath\"] = this.aspectInstancePath;\n      return this.length = length;\n    },\n\n    /**\n     * Print out formatted node\n     */\n    print: function () {\n      return \"Name : \" + this.name + \"\\n\" + \"    Id: \" + this.id + \"\\n\"\n                + \"    InstancePath : \" + this.instancePath + \"\\n\"\n                + \"    simulatorId : \" + this.simulatorId + \"\\n\";\n    }\n  });\n});\n"],"mappings":"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"}