{"version":3,"file":"utils.js","names":["splitter","str","l","strs","cuts","length","Math","floor","nextLength","pos","substring","lastIndexOf","push","i","indexOf","getDarkerColor","col","amt","arguments","undefined","startsWith","num","parseInt","slice","Array","replace","split","map","c","concat"],"sources":["../../src/graph-visualization/utils.js"],"sourcesContent":["export function splitter (str, l){\n  var strs = [];\n  var cuts\n  if (str.length <= l) {\n    cuts = [l]\n  } else if (str.length <= 2 * l) {\n    cuts = [Math.floor(l * 0.9), Math.floor(l * 0.9)]\n  } else {\n    cuts = [Math.floor(l * 0.75), l, Math.floor(l * 0.75)]\n  }\n\n  var nextLength = cuts[0]\n  while (str.length > nextLength){\n    var pos = str.substring(0, nextLength).lastIndexOf(' ');\n    pos = pos <= 0 ? nextLength : pos;\n    strs.push(str.substring(0, pos));\n    var i = str.indexOf(' ', pos) + 1;\n    if (i < pos || i > pos + nextLength) {\n      i = pos;\n    }\n    str = str.substring(i);\n    nextLength = cuts[strs.length]\n  }\n  strs.push(str);\n  return strs;\n}\n\n/**\n * Use to darken / lighten colors in rgba, rgb, or hex representation\n *\n * @param {String} col String representing a Color in format rgba, rgb or hex. Example 'rgba(11,22,33,0.5)' or '#123456'\n * @param {Int} atm Level of dark. Example -30 is darker than -10. Use positive number for lighter colors\n *\n * @returns {String} - rgba color darkened by arm value\n *\n */\nexport function getDarkerColor (col, amt = -30) {\n\n  if (col.startsWith('#')) {\n    let num = parseInt(col.slice(1),16);\n    col = Array(4)\n    col[0] = (num >> 16) + amt;\n    col[1] = ((num >> 8) & 0x00FF) + amt;\n    col[2] = (num & 0x0000FF) + amt;\n    col[3] = 1\n  \n  } else if (col.startsWith('rgba')) {\n    col = col.replace('rgba', '').replace('(', '').replace(')', '').split(',')\n    col = col.map(c => +c)\n  } else if (col.startsWith('rgb')) {\n    col = col.replace('rgb', '').replace('(', '').replace(')', '').split(',').push[1]\n    col = col.map(c => +c)\n  } else {\n    throw \"Color format error. Accepted formats: #dddddd, rgba(ddd,ddd,ddd,f), rgb(ddd,ddd,ddd). Check parameters on GeppettoGraphVisualization\";\n  }\n\n  for (let i = 0; i < 3; i++) {\n    col[i] += amt\n    if (col[i] > 255) {\n      col[i] = 255\n    } else if (col[i] < 0){\n      col[i] = 0\n    }\n  }\n\n  return `rgba(${col[0]},${col[1]},${col[2]},${col[3]})`\n\n}"],"mappings":"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","ignoreList":[]}