{"version":3,"file":"BorderNode.js","names":["_Attribute","_interopRequireDefault","require","_AttributeDefinitions","_DockLocation","_DropInfo","_Orientation","_Rect","_Node2","_SplitterNode","_TabNode","_Utils","_BorderNode","obj","__esModule","_typeof","o","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","key","_createClass","protoProps","staticProps","_callSuper","t","e","_getPrototypeOf","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","apply","self","call","_assertThisInitialized","ReferenceError","Boolean","valueOf","setPrototypeOf","getPrototypeOf","bind","__proto__","_inherits","subClass","superClass","create","value","_setPrototypeOf","p","_defineProperty","_toPrimitive","r","toPrimitive","String","Number","BorderNode","_Node","location","json","model","_this","_location","_drawChildren","_attributes","id","concat","getName","_attributeDefinitions","fromJson","_addNode","getLocation","getTabHeaderRect","_tabHeaderRect","getRect","getContentRect","_contentRect","isEnableDrop","_getAttr","isAutoSelectTab","whenOpen","getSelected","getClassName","calcBorderBarSize","metrics","barSize","_calculatedBorderBarSize","borderBarSize","getBorderBarSize","getSize","getMinSize","selected","getSelectedNode","_children","undefined","getOrientation","getConfig","config","isMaximized","isShowing","show","_setSelected","index","_setSize","pos","size","_updateAttrs","update","_getDrawChildren","_setAdjustedSize","_adjustedSize","_getAdjustedSize","_layoutBorderOuter","outer","split1","split","start","end","_layoutBorderInner","inner","_this2","_model","getSplitterSize","split2","reflect","forEach","child","_layout","_setVisible","push","newSplitter","SplitterNode","_setParent","_setRect","_remove","node","removedIndex","_removeChild","adjustSelectedIndex","canDrop","dragNode","x","y","getType","TabNode","TYPE","dropInfo","dockLocation","DockLocation","CENTER","contains","_orientation","Orientation","VERT","childRect","getTabRect","childY","childHeight","height","childCenter","width","outlineRect","Rect","DropInfo","getRight","childX","childWidth","getBottom","_canDockInto","drop","select","fromIndex","dragParent","getParent","insertPos","_addChild","_tidy","_toJson","toJson","children","map","_getSplitterBounds","splitter","useMinSize","arguments","pBounds","minSize","outerRect","_getOuterInnerRects","innerRect","TOP","getHeight","LEFT","getWidth","BOTTOM","RIGHT","_calculateSplit","splitterPos","Math","max","_getAttributeDefinitions","_fromJson","getByName","border","jsonChild","_createAttributeDefinitions","attributeDefinitions","AttributeDefinitions","add","setType","Attribute","STRING","setFixed","NUMBER","BOOLEAN","addInherited","getAttributeDefinitions","Node","_default","exports"],"sources":["../../../../src/flex-layout/src/model/BorderNode.ts"],"sourcesContent":["import Attribute from \"../Attribute\";\nimport AttributeDefinitions from \"../AttributeDefinitions\";\nimport DockLocation from \"../DockLocation\";\nimport DropInfo from \"../DropInfo\";\nimport Orientation from \"../Orientation\";\nimport Rect from \"../Rect\";\nimport IDraggable from \"./IDraggable\";\nimport IDropTarget from \"./IDropTarget\";\nimport Model, { ILayoutMetrics } from \"./Model\";\nimport Node from \"./Node\";\nimport SplitterNode from \"./SplitterNode\";\nimport TabNode from \"./TabNode\";\nimport TabSetNode from \"./TabSetNode\";\nimport { adjustSelectedIndex } from \"./Utils\";\n\nclass BorderNode extends Node implements IDropTarget {\n    static readonly TYPE = \"border\";\n\n    /** @hidden @internal */\n    static _fromJson(json: any, model: Model) {\n        const location = DockLocation.getByName(json.location);\n        const border = new BorderNode(location, json, model);\n        if (json.children) {\n            border._children = json.children.map((jsonChild: any) => {\n                const child = TabNode._fromJson(jsonChild, model);\n                child._setParent(border);\n                return child;\n            });\n        }\n\n        return border;\n    }\n    /** @hidden @internal */\n    private static _attributeDefinitions: AttributeDefinitions = BorderNode._createAttributeDefinitions();\n\n    /** @hidden @internal */\n    private static _createAttributeDefinitions(): AttributeDefinitions {\n        const attributeDefinitions = new AttributeDefinitions();\n        attributeDefinitions.add(\"type\", BorderNode.TYPE, true).setType(Attribute.STRING).setFixed();\n\n        attributeDefinitions.add(\"selected\", -1).setType(Attribute.NUMBER);\n        attributeDefinitions.add(\"show\", true).setType(Attribute.BOOLEAN);\n        attributeDefinitions.add(\"config\", undefined).setType(\"any\");\n\n        attributeDefinitions.addInherited(\"barSize\", \"borderBarSize\").setType(Attribute.NUMBER);\n        attributeDefinitions.addInherited(\"enableDrop\", \"borderEnableDrop\").setType(Attribute.BOOLEAN);\n        attributeDefinitions.addInherited(\"className\", \"borderClassName\").setType(Attribute.STRING);\n        attributeDefinitions.addInherited(\"autoSelectTabWhenOpen\", \"borderAutoSelectTabWhenOpen\").setType(Attribute.BOOLEAN);\n        attributeDefinitions.addInherited(\"autoSelectTabWhenClosed\", \"borderAutoSelectTabWhenClosed\").setType(Attribute.BOOLEAN);\n        attributeDefinitions.addInherited(\"size\", \"borderSize\").setType(Attribute.NUMBER);\n        attributeDefinitions.addInherited(\"minSize\", \"borderMinSize\").setType(Attribute.NUMBER);\n        return attributeDefinitions;\n    }\n\n    /** @hidden @internal */\n    private _contentRect?: Rect;\n    /** @hidden @internal */\n    private _tabHeaderRect?: Rect;\n    /** @hidden @internal */\n    private _location: DockLocation;\n    /** @hidden @internal */\n    private _drawChildren: Node[];\n    /** @hidden @internal */\n    private _adjustedSize: number = 0;\n    /** @hidden @internal */\n    private _calculatedBorderBarSize: number = 0;\n\n    /** @hidden @internal */\n    constructor(location: DockLocation, json: any, model: Model) {\n        super(model);\n\n        this._location = location;\n        this._drawChildren = [];\n        this._attributes.id = `border_${location.getName()}`;\n        BorderNode._attributeDefinitions.fromJson(json, this._attributes);\n        model._addNode(this);\n    }\n\n    getLocation() {\n        return this._location;\n    }\n\n    getTabHeaderRect() {\n        return this._tabHeaderRect;\n    }\n\n    getRect() {\n        return this._tabHeaderRect!;\n    }\n\n    getContentRect() {\n        return this._contentRect;\n    }\n\n    isEnableDrop() {\n        return this._getAttr(\"enableDrop\") as boolean;\n    }\n\n    isAutoSelectTab(whenOpen?: boolean) {\n        if (whenOpen == null) {\n            whenOpen = this.getSelected() !== -1;\n        }\n        if (whenOpen) {\n            return this._getAttr(\"autoSelectTabWhenOpen\") as boolean;\n        } else {\n            return this._getAttr(\"autoSelectTabWhenClosed\") as boolean;\n        }\n    }\n\n    getClassName() {\n        return this._getAttr(\"className\") as string | undefined;\n    }\n\n    /** @hidden @internal */\n    calcBorderBarSize(metrics: ILayoutMetrics) {\n        const barSize = this._getAttr(\"barSize\") as number;\n        if (barSize !== 0) {\n            // its defined\n            this._calculatedBorderBarSize = barSize;\n        } else {\n            this._calculatedBorderBarSize = metrics.borderBarSize;\n        }\n    }\n\n    getBorderBarSize() {\n        return this._calculatedBorderBarSize;\n    }\n\n    getSize() {\n        return this._getAttr(\"size\") as number;\n    }\n\n    getMinSize() {\n        return this._getAttr(\"minSize\") as number;\n    }\n\n    getSelected(): number {\n        return this._attributes.selected as number;\n    }\n\n    getSelectedNode(): Node | undefined {\n        if (this.getSelected() !== -1) {\n            return this._children[this.getSelected()];\n        }\n        return undefined;\n    }\n\n    getOrientation() {\n        return this._location.getOrientation();\n    }\n\n    /**\n     * Returns the config attribute that can be used to store node specific data that\n     * WILL be saved to the json. The config attribute should be changed via the action Actions.updateNodeAttributes rather\n     * than directly, for example:\n     * this.state.model.doAction(\n     *   FlexLayout.Actions.updateNodeAttributes(node.getId(), {config:myConfigObject}));\n     */\n     getConfig() {\n        return this._attributes.config;\n    }\n\n    isMaximized() {\n        return false;\n    }\n\n    isShowing() {\n        return this._attributes.show as boolean;\n    }\n\n    /** @hidden @internal */\n    _setSelected(index: number) {\n        this._attributes.selected = index;\n    }\n\n    /** @hidden @internal */\n    _setSize(pos: number) {\n        this._attributes.size = pos;\n    }\n\n    /** @hidden @internal */\n    _updateAttrs(json: any) {\n        BorderNode._attributeDefinitions.update(json, this._attributes);\n    }\n\n    /** @hidden @internal */\n    _getDrawChildren() {\n        return this._drawChildren;\n    }\n\n    /** @hidden @internal */\n    _setAdjustedSize(size: number) {\n        this._adjustedSize = size;\n    }\n\n    /** @hidden @internal */\n    _getAdjustedSize() {\n        return this._adjustedSize;\n    }\n\n    /** @hidden @internal */\n    _layoutBorderOuter(outer: Rect, metrics: ILayoutMetrics) {\n        this.calcBorderBarSize(metrics);\n        const split1 = this._location.split(outer, this.getBorderBarSize()); // split border outer\n        this._tabHeaderRect = split1.start;\n        return split1.end;\n    }\n\n    /** @hidden @internal */\n    _layoutBorderInner(inner: Rect, metrics: ILayoutMetrics) {\n        this._drawChildren = [];\n        const location = this._location;\n\n        const split1 = location.split(inner, this._adjustedSize + this._model.getSplitterSize()); // split off tab contents\n        const split2 = location.reflect().split(split1.start, this._model.getSplitterSize()); // split contents into content and splitter\n\n        this._contentRect = split2.end;\n\n        this._children.forEach((child, i) => {\n            child._layout(this._contentRect!, metrics);\n            child._setVisible(i === this.getSelected());\n            this._drawChildren.push(child);\n        });\n\n        if (this.getSelected() === -1) {\n            return inner;\n        } else {\n            const newSplitter = new SplitterNode(this._model);\n            newSplitter._setParent(this);\n            newSplitter._setRect(split2.start);\n            this._drawChildren.push(newSplitter);\n\n            return split1.end;\n        }\n    }\n\n    /** @hidden @internal */\n    _remove(node: TabNode) {\n        const removedIndex = this._removeChild(node);\n        if (this.getSelected() !== -1) {\n            adjustSelectedIndex(this, removedIndex);\n        }\n    }\n\n    /** @hidden @internal */\n    canDrop(dragNode: Node & IDraggable, x: number, y: number): DropInfo | undefined {\n        if (dragNode.getType() !== TabNode.TYPE) {\n            return undefined;\n        }\n\n        let dropInfo;\n        const dockLocation = DockLocation.CENTER;\n\n        if (this._tabHeaderRect!.contains(x, y)) {\n            if (this._location._orientation === Orientation.VERT) {\n                if (this._children.length > 0) {\n                    let child = this._children[0];\n                    let childRect = (child as TabNode).getTabRect()!;\n                    const childY = childRect.y;\n\n                    const childHeight = childRect.height;\n\n                    let pos = this._tabHeaderRect!.x;\n                    let childCenter = 0;\n                    for (let i = 0; i < this._children.length; i++) {\n                        child = this._children[i];\n                        childRect = (child as TabNode).getTabRect()!;\n                        childCenter = childRect.x + childRect.width / 2;\n                        if (x >= pos && x < childCenter) {\n                            const outlineRect = new Rect(childRect.x - 2, childY, 3, childHeight);\n                            dropInfo = new DropInfo(this, outlineRect, dockLocation, i, \"flexlayout__outline_rect\");\n                            break;\n                        }\n                        pos = childCenter;\n                    }\n                    if (dropInfo == null) {\n                        const outlineRect = new Rect(childRect.getRight() - 2, childY, 3, childHeight);\n                        dropInfo = new DropInfo(this, outlineRect, dockLocation, this._children.length, \"flexlayout__outline_rect\");\n                    }\n                } else {\n                    const outlineRect = new Rect(this._tabHeaderRect!.x + 1, this._tabHeaderRect!.y + 2, 3, 18);\n                    dropInfo = new DropInfo(this, outlineRect, dockLocation, 0, \"flexlayout__outline_rect\");\n                }\n            } else {\n                if (this._children.length > 0) {\n                    let child = this._children[0];\n                    let childRect = (child as TabNode).getTabRect()!;\n                    const childX = childRect.x;\n                    const childWidth = childRect.width;\n\n                    let pos = this._tabHeaderRect!.y;\n                    let childCenter = 0;\n                    for (let i = 0; i < this._children.length; i++) {\n                        child = this._children[i];\n                        childRect = (child as TabNode).getTabRect()!;\n                        childCenter = childRect.y + childRect.height / 2;\n                        if (y >= pos && y < childCenter) {\n                            const outlineRect = new Rect(childX, childRect.y - 2, childWidth, 3);\n                            dropInfo = new DropInfo(this, outlineRect, dockLocation, i, \"flexlayout__outline_rect\");\n                            break;\n                        }\n                        pos = childCenter;\n                    }\n                    if (dropInfo == null) {\n                        const outlineRect = new Rect(childX, childRect.getBottom() - 2, childWidth, 3);\n                        dropInfo = new DropInfo(this, outlineRect, dockLocation, this._children.length, \"flexlayout__outline_rect\");\n                    }\n                } else {\n                    const outlineRect = new Rect(this._tabHeaderRect!.x + 2, this._tabHeaderRect!.y + 1, 18, 3);\n                    dropInfo = new DropInfo(this, outlineRect, dockLocation, 0, \"flexlayout__outline_rect\");\n                }\n            }\n            if (!dragNode._canDockInto(dragNode, dropInfo)) {\n                return undefined;\n            }\n        } else if (this.getSelected() !== -1 && this._contentRect!.contains(x, y)) {\n            const outlineRect = this._contentRect;\n            dropInfo = new DropInfo(this, outlineRect!, dockLocation, -1, \"flexlayout__outline_rect\");\n            if (!dragNode._canDockInto(dragNode, dropInfo)) {\n                return undefined;\n            }\n        }\n\n        return dropInfo;\n    }\n\n    /** @hidden @internal */\n    drop(dragNode: Node & IDraggable, location: DockLocation, index: number, select?: boolean): void {\n        let fromIndex = 0;\n        const dragParent = dragNode.getParent() as BorderNode | TabSetNode;\n        if (dragParent !== undefined) {\n            fromIndex = dragParent._removeChild(dragNode);\n            adjustSelectedIndex(dragParent, fromIndex);\n        }\n\n        // if dropping a tab back to same tabset and moving to forward position then reduce insertion index\n        if (dragNode.getType() === TabNode.TYPE && dragParent === this && fromIndex < index && index > 0) {\n            index--;\n        }\n\n        // simple_bundled dock to existing tabset\n        let insertPos = index;\n        if (insertPos === -1) {\n            insertPos = this._children.length;\n        }\n\n        if (dragNode.getType() === TabNode.TYPE) {\n            this._addChild(dragNode, insertPos);\n        }\n\n        if (select || (select !== false && this.isAutoSelectTab())) {\n            this._setSelected(insertPos);\n        }\n\n        this._model._tidy();\n    }\n\n    /** @hidden @internal */\n    _toJson() {\n        const json: any = {};\n        BorderNode._attributeDefinitions.toJson(json, this._attributes);\n        json.location = this._location.getName();\n        json.children = this._children.map((child) => (child as TabNode)._toJson());\n        return json;\n    }\n\n    /** @hidden @internal */\n    _getSplitterBounds(splitter: SplitterNode, useMinSize: boolean = false) {\n        const pBounds = [0, 0];\n        const minSize = useMinSize ? this.getMinSize() : 0;\n        const outerRect = this._model._getOuterInnerRects().outer;\n        const innerRect = this._model._getOuterInnerRects().inner;\n        if (this._location === DockLocation.TOP) {\n            pBounds[0] = outerRect.y + minSize;\n            pBounds[1] = innerRect.getBottom() - splitter.getHeight();\n        } else if (this._location === DockLocation.LEFT) {\n            pBounds[0] = outerRect.x + minSize;\n            pBounds[1] = innerRect.getRight() - splitter.getWidth();\n        } else if (this._location === DockLocation.BOTTOM) {\n            pBounds[0] = innerRect.y;\n            pBounds[1] = outerRect.getBottom() - splitter.getHeight() - minSize;\n        } else if (this._location === DockLocation.RIGHT) {\n            pBounds[0] = innerRect.x;\n            pBounds[1] = outerRect.getRight() - splitter.getWidth() - minSize;\n        }\n        return pBounds;\n    }\n\n    /** @hidden @internal */\n    _calculateSplit(splitter: SplitterNode, splitterPos: number) {\n        const pBounds = this._getSplitterBounds(splitter);\n        if (this._location === DockLocation.BOTTOM || this._location === DockLocation.RIGHT) {\n            return Math.max(0, pBounds[1] - splitterPos);\n        } else {\n            return Math.max(0, splitterPos - pBounds[0]);\n        }\n    }\n\n    /** @hidden @internal */\n    _getAttributeDefinitions() {\n        return BorderNode._attributeDefinitions;\n    }\n\n    /** @hidden @internal */\n    static getAttributeDefinitions() {\n        return BorderNode._attributeDefinitions;\n    }\n\n}\n\nexport default BorderNode;\n"],"mappings":"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","ignoreList":[]}