{"version":3,"file":"PlotComponent.js","names":["_react","_interopRequireWildcard","require","_propTypes","_interopRequireDefault","_jszip","_fileSaver","_core","_factory","_mathjs","_PlotHeader","_plotConfiguration","_ExternalInstance","_core2","_units","obj","__esModule","_getRequireWildcardCache","e","WeakMap","r","t","_typeof","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","o","Symbol","iterator","constructor","prototype","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","iter","Array","from","isArray","_arrayLikeToArray","ownKeys","keys","getOwnPropertySymbols","filter","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","_createForOfIteratorHelper","allowArrayLike","it","F","s","done","value","_e","f","normalCompletion","didErr","err","step","next","_e2","minLen","toString","slice","name","test","len","arr2","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","configurable","writable","_toPropertyKey","key","_createClass","protoProps","staticProps","_callSuper","_getPrototypeOf","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","self","_assertThisInitialized","ReferenceError","Boolean","valueOf","setPrototypeOf","getPrototypeOf","bind","_inherits","subClass","superClass","create","_setPrototypeOf","p","_toPrimitive","toPrimitive","String","Number","Plotly","register","ScatterPlot","createPlotlyComponent","style","container","width","height","headerIcons","fontSize","plot","PlotComponent","_Component","_this","_len","args","_key","concat","extractLegendName","icon","action","resetAxes","tooltip","toggleLegend","imageType","downloadImage","options","downloadPlotData","analysisOption","plotAverage","shouldComponentUpdate","nextProps","nextState","plots","forceChange","x","y","lineOptions","initPlot","reset","data","frames","instances","labelX","undefined","labelY","_iterator","_step","plotDefinition","instanceY","Instances","getInstance","instanceX","console","error","instanceData","getInstanceData","instanceLabelX","getUnitLabel","getUnit","instanceLabelY","warn","updateLayoutConf","legendName","trace","getSinglePlotConfiguration","getTimeSeries","path","getInstancePath","unitSymbol","replace","unitLabel","formattedUnitName","Units","hasUnit","mathUnit","unit","units","base","log","charAt","toUpperCase","toLowerCase","letter","sup","resize","refs","plotly","resizeHandler","layout","defaultLayout","title","layoutConf","getAxisLayoutConfiguration","xaxis","yaxis","margin","datarevision","revision","text","autorange","l","defaultConf","defaultTrace","line","showlegend","forceUpdate","id","paper_bgcolor","linecolor","tickfont","color","font","size","legend","family","bgcolor","relayout","format","_this2","_this$props","map","removeLastPath","unshift","join","dataToSave","dataset","bytesNames","Uint8Array","charCodeAt","content","j","space","bytesResults","zip","JSZip","file","generateAsync","type","then","blob","d","Date","getTime","FileSaver","saveAs","indexOf","split","el","index","actionName","startsWith","analysis","result","arrays","total","_iterator2","_step2","_iterator3","_step3","opacity","hoverinfo","mode","pop","render","_this$props2","plotConfig","classes","config","defaultConfig","createElement","className","headerIconList","ref","divId","onDoubleClick","useResizeHandler","Component","defaultProp","propTypes","PropTypes","string","isRequired","arrayOf","shape","object","func","_default","exports","withStyles"],"sources":["../../src/plot/PlotComponent.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport JSZip from \"jszip\";\nimport FileSaver from \"file-saver\";\nimport Plotly from 'plotly.js/lib/core';\nimport createPlotlyComponent from 'react-plotly.js/factory';\nPlotly.register([require('plotly.js/lib/scatter')]);\nconst ScatterPlot = createPlotlyComponent(Plotly);\nimport { unit } from 'mathjs';\nimport PlotHeader from './PlotHeader';\nimport { defaultLayout, defaultTrace, defaultConfig } from './configuration/plotConfiguration';\nimport ExternalInstance from '@metacell/geppetto-meta-core/model/ExternalInstance';\nimport { withStyles } from '@material-ui/core';\nimport { Units } from './units';\n\nconst style = {\n  container: {\n    width: '100%',\n    height: '100%'\n  },\n  headerIcons: { fontSize: '15px' },\n  plot: {\n    width: '100%',\n    height: \"calc(100% - 16px)\"\n  }\n};\n\nclass PlotComponent extends Component {\n\n  state = {};\n  reset = true;\n  revision = 0;\n  analysis = [];\n  extractLegendName = this.props.extractLegendName ? this.props.extractLegendName.bind(this) : this.extractLegendName.bind(this);\n\n  headerIconList = [\n    {\n      icon: 'fa fa-home',\n      action: () => this.resetAxes(),\n      tooltip: 'Reset plot zoom'\n    },\n    {\n      icon: 'fa fa-list',\n      action: () => this.toggleLegend(),\n      tooltip: 'Toggle legend'\n    },\n    {\n      icon: 'fa fa-picture-o',\n      action: imageType => this.downloadImage(imageType),\n      options: ['Save as PNG', 'Save as SVG', 'Save as JPEG'],\n      tooltip: 'Save as image'\n    },\n    {\n      icon: 'fa fa-download',\n      action: () => this.downloadPlotData(),\n      tooltip: 'Download plot data'\n    },\n    {\n      icon: 'fa gpt-analysis',\n      action: analysisOption => this.plotAverage(analysisOption),\n      options: ['Plot average', 'Remove analysis'],\n      tooltip: 'Analysis'\n    },\n    {\n      icon: 'fa fa-history',\n      action: () => { },\n      tooltip: 'Show navigation history'\n    }\n  ];\n\n  shouldComponentUpdate (nextProps, nextState) {\n    const { plots } = this.props;\n\n    if (nextProps.forceChange || plots.length != nextProps.plots.length) {\n      return true\n    }\n\n    for (let i in plots) {\n\n      if (nextProps.plots[i].x != this.props.plots[i].x) {\n        return true;\n      }\n      if (nextProps.plots[i].y != this.props.plots[i].y) {\n        return true;\n      }\n      for (let key in nextProps.plots[i].lineOptions) {\n        if (nextProps.plots[i].lineOptions[key] != this.props.plots[i].lineOptions[key]) {\n          return true;\n        }\n\n      }\n\n    }\n    return false;\n\n  }\n\n  initPlot () {\n    if (this.reset) {\n      this.data = [];\n      this.frames = [];\n      this.instances = {};\n\n\n      let labelX = undefined, labelY = undefined;\n      for (let plotDefinition of this.props.plots) {\n\n        if (plotDefinition) {\n          const instanceY = Instances.getInstance(plotDefinition.y);\n          const instanceX = Instances.getInstance(plotDefinition.x);\n          const lineOptions = plotDefinition.lineOptions;\n          if (!instanceY || !instanceX) {\n            console.error(`Instance`, plotDefinition, `does not seems to contain data or time instances.`);\n            return;\n          }\n          const instanceData = this.getInstanceData(instanceY, instanceX, lineOptions);\n          this.data.push(instanceData);\n\n          const instanceLabelX = this.getUnitLabel(instanceX.getUnit());\n          const instanceLabelY = this.getUnitLabel(instanceY.getUnit());\n\n          labelY = !labelY || labelY == instanceLabelY ? instanceLabelY : \"SI Units\";\n          labelX = !labelX || labelX == instanceLabelX ? instanceLabelX : \"SI Units\";\n\n\n        } else {\n          console.warn(`No instance path defined for Plot component.`);\n        }\n      }\n      this.updateLayoutConf(labelX, labelY);\n    }\n    this.reset = true\n  }\n\n\n  getInstanceData (instanceY, instanceX, lineOptions) {\n    let legendName = this.extractLegendName(instanceY);\n\n    const trace = {\n      ...this.getSinglePlotConfiguration(lineOptions),\n      x: instanceX.getTimeSeries(),\n      y: instanceY.getTimeSeries(),\n      path: instanceY.getInstancePath(),\n      name: legendName,\n    };\n\n    return trace;\n  }\n\n\n  getUnitLabel (unitSymbol) {\n    if (unitSymbol != null || unitSymbol != undefined) {\n      unitSymbol = unitSymbol.replace(/_per_/gi, \" / \");\n    } else {\n      unitSymbol = \"\";\n    }\n\n    var unitLabel = unitSymbol;\n\n    if (unitSymbol != undefined && unitSymbol != null && unitSymbol != \"\") {\n      var formattedUnitName = \"\";\n      if (Units.hasUnit(unitSymbol)) {\n        formattedUnitName = Units.getUnitLabel(unitSymbol);\n      } else {\n        try {\n          var mathUnit = unit(1, unitSymbol);\n          formattedUnitName = (mathUnit.units.length > 0) ? mathUnit.units[0].unit.base.key : \"\";\n          (mathUnit.units.length > 1) ? formattedUnitName += \" OVER \" + mathUnit.units[1].unit.base.key : \"\";\n        } catch (error) {\n          console.log(`Unit symlob <${unitSymbol}> does not represent a physical quantity`)\n        }\n      }\n\n      if (formattedUnitName != \"\") {\n        formattedUnitName = formattedUnitName.replace(/_/g, \" \");\n        formattedUnitName = formattedUnitName.charAt(0).toUpperCase() + formattedUnitName.slice(1).toLowerCase();\n        unitLabel = formattedUnitName + \" (\" + unitSymbol.replace(/-?[0-9]/g, function (letter) {\n          return letter.sup();\n        }) + \")\";\n      }\n\n      return unitLabel;\n    }\n  }\n\n  resize () {\n    this.refs.plotly.resizeHandler();\n  }\n\n\n  updateLayoutConf (labelX, labelY) {\n    this.layout = { ...defaultLayout(), ...this.props.layout ? this.props.layout : {}, title: this.props.title };\n    const layoutConf = this.getAxisLayoutConfiguration(labelX, labelY);\n    this.layout.xaxis = { ...this.layout.xaxis, ...layoutConf.xaxis };\n    this.layout.yaxis = { ...this.layout.yaxis, ...layoutConf.yaxis };\n    this.layout.margin = { ...this.layout.margin, ...layoutConf.margin };\n    this.layout.datarevision = this.revision + 1\n    this.revision = this.revision + 1\n  }\n\n  getAxisLayoutConfiguration (labelX, labelY) {\n    return {\n\n      xaxis: { title: { text: labelX }, autorange: true },\n      yaxis: { title: { text: labelY }, autorange: true },\n      margin: { l: (labelY == null || labelY == \"\") ? 30 : 50 }\n    }\n  }\n\n  getSinglePlotConfiguration (lineOptions) {\n    const defaultConf = defaultTrace();\n    return { ...defaultConf, line: lineOptions ? lineOptions : defaultConf.line };\n  }\n\n  extractLegendName (instanceY) {\n    let legendName = instanceY.getInstancePath();\n    return legendName;\n  }\n\n  toggleLegend () {\n    this.layout.showlegend = !this.layout.showlegend;\n    this.reset = false\n    this.forceUpdate()\n  }\n\n  resetAxes () {\n    this.forceUpdate()\n  }\n\n  downloadImage (imageType) {\n    const { id } = this.props;\n    const { layout } = this;\n    imageType = imageType.replace('Save as ', '').toLowerCase()\n\n    layout.paper_bgcolor = \"rgb(255,255,255)\";\n    layout.xaxis.linecolor = \"rgb(0,0,0)\";\n    layout.yaxis.linecolor = \"rgb(0,0,0)\";\n    layout.xaxis.tickfont.color = \"rgb(0,0,0)\";\n    layout.yaxis.tickfont.color = \"rgb(0,0,0)\";\n    layout.yaxis.title.font.color = \"rgb(0,0,0)\";\n    layout.xaxis.title.font.color = \"rgb(0,0,0)\";\n    layout.xaxis.tickfont.size = 18;\n    layout.yaxis.tickfont.size = 18;\n    layout.xaxis.title.font.size = 18;\n    layout.yaxis.title.font.size = 18;\n    layout.legend.font.size = 18;\n    layout.legend.font.family = 'Helvetica Neue, Helvetica, sans-serif';\n    layout.legend.font.color = \"rgb(0,0,0)\";\n    layout.legend.bgcolor = \"rgb(255,255,255)\";\n\n    Plotly.relayout(id, layout);\n    Plotly.downloadImage(id, { format: imageType });\n    this.forceUpdate()\n  }\n\n  downloadPlotData () {\n    const { data } = this;\n    const { plots, id } = this.props\n\n    // instancePaths \n    let text = plots.map(plot => this.removeLastPath(plot.y))\n    text.unshift(plots[0].x);\n    text = text.join(' ')\n\n    // data\n    const dataToSave = data.map(dataset => dataset.y)\n    dataToSave.unshift(data[0].x);\n\n    // convert instancePaths to bytes\n    const bytesNames = new Uint8Array(text.length);\n    for (var i = 0; i < text.length; i++) {\n      bytesNames[i] = text.charCodeAt(i);\n    }\n\n    // arange data in table like format\n    let content = \"\";\n    for (let i = 0; i < dataToSave[0].length; i++) {\n\n      for (let j = 0; j < dataToSave.length; j++) {\n        let size = dataToSave[j][i].toString().length;\n        let space = \"\";\n        for (var l = 25; l > size; l--) {\n          space += \" \";\n        }\n        content += dataToSave[j][i] + space;\n      }\n      content += \"\\r\\n\";\n    }\n\n    // convert data to bytes\n    const bytesResults = new Uint8Array(content.length);\n    for (var i = 0; i < content.length; i++) {\n      bytesResults[i] = content.charCodeAt(i);\n    }\n\n    const zip = new JSZip();\n    zip.file(\"outputMapping.dat\", bytesNames);\n    zip.file(\"results.dat\", bytesResults);\n    zip.generateAsync({ type: \"blob\" })\n      .then(function (blob) {\n        let d = new Date();\n        let n = d.getTime();\n        FileSaver.saveAs(blob, id + \"-\" + n.toString() + \".zip\");\n      });\n\n  }\n\n  removeLastPath (path) {\n    // hello.there.here.I.go => hello.there.here.I\n    if (typeof path === \"string\" && path.length > 3 && path.indexOf('.') > -1) {\n      return path.split('.').filter((el, index, arr) => index != arr.length - 1).join('.')\n    }\n  }\n\n  plotAverage (actionName) {\n    if (actionName.startsWith(\"Plot\") && this.analysis.length == 0) {\n      var result = [];\n      const { data } = this;\n      var arrays = data.map(dataset => dataset.y);\n      for (let i in arrays[0]) {\n        let total = 0;\n        for (let arr of arrays) {\n          total += +arr[i]\n        }\n        result.push(total / arrays.length);\n      }\n      for (let dataset of data) {\n        dataset.opacity = 0.4;\n      }\n      this.analysis.push({\n        hoverinfo: \"all\",\n        line: { color: \"#e27300\" },\n        mode: \"lines\",\n        name: \"Average\",\n        path: \"\",\n        type: \"scatter\",\n        x: data[0].x,\n        y: result\n      })\n      this.forceUpdate()\n    } else if (actionName.startsWith(\"Remove\") && this.analysis.length > 0) {\n      this.analysis.pop()\n      this.forceUpdate()\n    }\n  }\n\n\n  render () {\n\n    this.initPlot();\n    const { plotConfig, id, classes } = this.props;\n    const { data, layout, revision, analysis } = this;\n    const config = { ...defaultConfig(), ...plotConfig }\n\n    return (\n      <div className={classes.container}>\n        {data.length > 0 && (\n          <div className={classes.container}>\n\n            <PlotHeader headerIcons={this.headerIconList} />\n\n            <ScatterPlot\n              ref=\"plotly\"\n              divId={id}\n              config={config}\n              data={[...data, ...analysis]}\n              revision={revision}\n              onDoubleClick={() => { }}\n              layout={layout}\n              useResizeHandler\n              className={classes.plot}\n            />\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nPlotComponent.defaultProp = {\n  layout: {},\n  extractLegendName: () => {},\n}\n\nPlotComponent.propTypes = {\n  /**\n   * The identifier used to name this Plot component.\n   */\n  id: PropTypes.string.isRequired,\n  /**\n   * Array of objects, each one containing the x,y position of a point in the line/scatter plot. A third property named \n   * 'lineOptions' can be given, this will be used for modifying the visualization of the line plots.\n   */\n  plots: PropTypes.arrayOf(PropTypes.shape({\n    /**\n     * The x value of the plot\n     */\n    x: PropTypes.string.isRequired,\n    /**\n     * The y value of the plot\n     */\n    y: PropTypes.string.isRequired,\n    /**\n     * An object specifying the line properties of the plot such as color\n     */\n    lineOptions: PropTypes.object\n  })).isRequired,\n  /**\n   * Configuration settings for the chart and line plots.\n   * Checkout [plotly's configuration](https://plotly.com/javascript/configuration-options/) options to add in your layout object.\n   */\n  layout: PropTypes.object,\n  /**\n   * Function used to retrieve the legend name of a line plot.\n   */\n  extractLegendName: PropTypes.func\n};\n\nexport default withStyles(style)(PlotComponent)\n"],"mappings":"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","ignoreList":[]}