{"version":3,"file":"Instance.js","names":["Instance","options","id","name","_metaType","variable","parent","children","undefined","capabilities","connections","getVariable","getTypes","getValues","types","length","getValue","getPosition","hasVisual","i","getMetaType","Resources","ARRAY_TYPE_NODE","getType","VISUAL_TYPE_NODE","COMPOSITE_VISUAL_TYPE_NODE","getVisualType","visualTypes","push","useType","parentPath","getInstancePath","path","getId","replace","child","extensionObj","extend","capabilityId","hasCapability","direction","ModelFactory","updateConnectionInstances","INPUT","OUTPUT","INPUT_OUTPUT","filteredConnections","connectivity","getInitialValue","value","DIRECTIONAL","a","getA","b","getB","getPath","BIDIRECTIONAL","connection","concat","getChildren","c","deleteInstance"],"sources":["../../src/model/Instance.js"],"sourcesContent":["import { extend } from '../common/Utils';\nimport ModelFactory from '../ModelFactory';\nimport Resources from '../Resources';\n\n/**\n * Client class use to represent an instance object (instantiation of a variable).\n *\n * @module model/Instance\n * @author Giovanni Idili\n * @author Matteo Cantarelli\n */\n\nclass Instance {\n\n  constructor (options) {\n    this.id = options.id;\n    this.name = options.name;\n    this._metaType = options._metaType;\n    this.variable = options.variable;\n    this.parent = options.parent;\n    this.children = (options.children != undefined) ? options.children : [];\n    this.capabilities = [];\n    this.connections = [];\n  }\n\n\n  /**\n   * Get id\n   *\n   * @command Instance.getId()\n   *\n   * @returns {String} - Id\n   *\n   */\n  getId () {\n    return this.id;\n  }\n\n  /**\n   * Get name\n   *\n   * @command Instance.getName()\n   *\n   * @returns {String} - Name\n   *\n   */\n  getName () {\n    return this.name;\n  }\n\n  /**\n   * Get meta type\n   *\n   * @command Instance.getMetaType()\n   *\n   * @returns {String} - meta type\n   *\n   */\n  getMetaType () {\n    return this._metaType;\n  }\n\n  /**\n   * Get the type for this instance\n   *\n   * @command Instance.getTypes()\n   *\n   * @returns {List<Type>} - array of types\n   *\n   */\n  getTypes () {\n    return this.getVariable().getTypes();\n  }\n\n  getValues () {\n    return this.getVariable().getValues();\n  }\n  /**\n   * Get the type of this variable, return a list if it has more than one\n   *\n   * @command Variable.getType()\n   *\n   * @returns List<Type>} - array of types\n   *\n   */\n  getType () {\n    var types = this.variable.getTypes();\n    if (types.length == 1) {\n      return types[0];\n    } else {\n      return types;\n    }\n  }\n\n  getValue () {\n    return this.getVariable().getValue();\n  }\n  /**\n   *\n   * @returns {*|Object}\n   */\n  getPosition () {\n    return this.getVariable().getPosition();\n  }\n\n  /**\n   * Checks if this instance has a visual type\n   *\n   * @command Instance.hasVisualType()\n   *\n   * @returns {Boolean}\n   *\n   */\n  hasVisualType () {\n    var hasVisual = false;\n    var types = this.getTypes();\n\n    // check if any of types is VISUAL_TYPE_NODE or if types HAVE .visualType\n    for (var i = 0; i < types.length; i++) {\n      // could be pointing to an array variable if it's an exploded instance\n      if (types[i].getMetaType() == Resources.ARRAY_TYPE_NODE) {\n        // check it if is a visual type or has a visual type\n        if (types[i].getType().getMetaType() == Resources.VISUAL_TYPE_NODE\n                        || types[i].getType().getMetaType() == Resources.COMPOSITE_VISUAL_TYPE_NODE\n                        || (types[i].getType().getVisualType() != null)) {\n          hasVisual = true;\n          break;\n        }\n      } else if (types[i].getMetaType() == Resources.VISUAL_TYPE_NODE\n                    || types[i].getMetaType() == Resources.COMPOSITE_VISUAL_TYPE_NODE\n                    || types[i].getVisualType() != null) {\n        hasVisual = true;\n        break;\n      }\n    }\n\n    return hasVisual;\n  }\n\n  /**\n   * Gets visual types for the instance if any\n   *\n   * @command Instance.getVisualType()\n   *\n   * @returns {*} - Type or list of Types if more than one is found\n   */\n  getVisualType () {\n    var visualTypes = [];\n\n    var types = this.getTypes();\n    // check if any of types is VISUAL_TYPE_NODE or if types HAVE .visualType\n    for (var i = 0; i < types.length; i++) {\n      // could be pointing to an array variable if it's an exploded instance\n      if (types[i].getMetaType() == Resources.ARRAY_TYPE_NODE) {\n        // check it if is a visual type or has a visual type\n        if (types[i].getType().getMetaType() == Resources.VISUAL_TYPE_NODE || types[i].getType().getMetaType() == Resources.COMPOSITE_VISUAL_TYPE_NODE) {\n          visualTypes.push(types[i].getType());\n        } else if (types[i].getType().getVisualType() != null) {\n          visualTypes.push(types[i].getType().getVisualType());\n        }\n      } else {\n        // check it if is a visual type or has a visual type\n        if (types[i].getMetaType() == Resources.VISUAL_TYPE_NODE || types[i].getMetaType() == Resources.COMPOSITE_VISUAL_TYPE_NODE) {\n          visualTypes.push(types[i]);\n        } else if (types[i].getVisualType() != null) {\n          visualTypes.push(types[i].getVisualType());\n        }\n      }\n    }\n\n    if (visualTypes.length == 0) {\n      return undefined;\n    } else if (visualTypes.length == 1) {\n      return visualTypes[0];\n    } else {\n      return visualTypes;\n    }\n  }\n\n\n  /**\n   * Get the variable for this instance\n   *\n   * @command Instance.getVariable()\n   *\n   * @returns {Variable} - Variable object for this instance\n   *\n   */\n  getVariable () {\n    return this.variable;\n  }\n\n  /**\n   * Get children instances\n   *\n   * @command Instance.getChildren()\n   *\n   * @returns {List<Instance>} - List of instances\n   *\n   */\n  getChildren () {\n    return this.children;\n  }\n\n  /**\n   * Get instance path\n   *\n   * @command Instance.getInstancePath()\n   *\n   * @returns {String} - Instance path\n   *\n   */\n  getInstancePath (useType) {\n    if (useType == undefined){\n      useType = false;\n    }\n\n    var parent = this.parent;\n    var parentPath = \"\";\n\n    if (parent != null && parent != undefined) {\n      parentPath = parent.getInstancePath(useType);\n    }\n    var path = parentPath + \".\" + this.getId();\n\n    if (useType){\n      path += \"(\" + this.getType().getId() + \")\";\n    }\n\n    return (parentPath != \"\") ? path : path.replace('.','');\n  }\n\n  /**\n   * Synonym of get instance path\n   *\n   * @command Instance.getPath()\n   *\n   * @returns {String} - Instance path\n   *\n   */\n  getPath () {\n    return this.getInstancePath();\n  }\n\n  /**\n   * Get raw instance path (without array shortening)\n   *\n   * @command Instance.getRawInstancePath()\n   *\n   * @returns {String} - Instance path\n   *\n   */\n  getRawInstancePath () {\n    var parent = this.parent;\n    var parentPath = \"\";\n\n    if (parent != null && parent != undefined) {\n      parentPath = parent.getInstancePath();\n    }\n\n    return (parentPath != \"\") ? (parentPath + \".\" + this.getId()) : this.getId();\n  }\n\n\n  /**\n   * Get parent\n   *\n   * @command Instance.getParent()\n   *\n   * @returns {Instance} - Parent instance\n   *\n   */\n  getParent () {\n    return this.parent;\n  }\n\n  /**\n   * Get children instances\n   *\n   * @command Instance.addChild()\n   */\n  addChild (child) {\n    this.children.push(child);\n  }\n\n  /**\n   * Extends with methods from another object\n   *\n   * @command Instance.extendApi(extensionObj)\n   */\n  extendApi (extensionObj) {\n    extend(this, extensionObj);\n    this.capabilities.push(extensionObj.capabilityId);\n  }\n\n  /**\n   * Checks if the instance has a given capability\n   *\n   * @command Instance.hasCapability(capabilityId)\n   *\n   * @returns {Boolean}\n   */\n  hasCapability (capabilityId) {\n    var hasCapability = false;\n    var capabilities = this.capabilities;\n\n    for (var i = 0; i < capabilities.length; i++) {\n      if (capabilities[i] === capabilityId) {\n        hasCapability = true;\n      }\n    }\n\n    return hasCapability;\n  }\n\n  /**\n   * Get instance capabilities\n   *\n   * @returns {Array}\n   */\n  getCapabilities () {\n    return this.capabilities;\n  }\n\n  /**\n   * Return connections, user Resources.INPUT / OUTPUT / INPUT_OUTPUT to filter\n   *\n   * @command Instance.getConnections(direction)\n   *\n   * @returns {List<Instance>}\n   *\n   */\n  getConnections (direction) {\n\n    ModelFactory.updateConnectionInstances(this);\n\n    var connections = this.connections;\n\n    if (direction === Resources.INPUT || direction === Resources.OUTPUT || direction === Resources.INPUT_OUTPUT) {\n      var filteredConnections = [];\n      for (var i = 0; i < connections.length; i++) {\n        // get directionality\n        var connectivity = connections[i].getVariable().getInitialValue().value.connectivity;\n        if (connectivity == Resources.DIRECTIONAL) {\n          var a = connections[i].getA();\n          var b = connections[i].getB();\n          // if A is this then it's an output connection\n          if (this.getInstancePath() == a.getPath() && direction === Resources.OUTPUT) {\n            filteredConnections.push(connections[i]);\n          }\n          // if B is this then it's an input connection\n          if (this.getInstancePath() == b.getPath() && direction === Resources.INPUT) {\n            filteredConnections.push(connections[i]);\n          }\n        } else if (connectivity == Resources.BIDIRECTIONAL) {\n          filteredConnections.push(connections[i]);\n        }\n      }\n\n      // set return variable to filtered list\n      connections = filteredConnections;\n    }\n\n    return connections;\n  }\n\n  /**\n   * Get children instances\n   *\n   * @command Instance.addConnection()\n   */\n  addConnection (connection) {\n    this.connections.push(connection);\n  }\n\n  /**\n   * Deletes instance\n   */\n  delete () {\n    var children = [].concat(this.getChildren());\n    for (var c = 0; c < children.length; c++) {\n      children[c].delete();\n    }\n\n    ModelFactory.deleteInstance(this);\n  }\n\n}\n\nexport default Instance;\n"],"mappings":"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"}