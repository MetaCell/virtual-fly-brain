{"version":3,"file":"Chord.js","names":["util","_interopRequireWildcard","require","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","_typeof","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","o","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","length","descriptor","enumerable","configurable","writable","_toPropertyKey","key","_createClass","protoProps","staticProps","_toPrimitive","toPrimitive","String","Number","d3","Chord","exports","calculateNodeDegrees","value","draw","context","matrix","generateChordMatrix","pi","Math","PI","halfpi","dr","innerRadius","min","width","height","outerRadius","fill","nodeColormap","range","scaleOrdinal","schemeCategory20","svg","append","attr","chord","layout_chord","padding","groups","forEach","g","id","dataset","nodeTypes","slice","selectAll","data","enter","style","d","arc","on","fade_over","fade_out","text","svg_asymChord","source","radius","startAngle","endAngle","s","subgroup","shifted","shift_radius","t_p0s","t_p1s","p0","p1","a1","a0","equals","curve","cos","sin","self","f","b","p","r0","r1","constant","x","v","arguments","chords","index","opacity","filter","event","shiftKey","ctrlKey","transition","type2type","typesZeros","map","type","initCounts","_object","linksFromType","links","link","nodes","_extend","countBy","node","idx","numConn","innerType","push","sortGroups","sortSubgroups","sortChords","tau","arrayRotate","arr","count","unshift","apply","splice","relayout","dj","di","subgroups","groupSums","groupSumsT","Array","groupIndex","subgroupIndex","k","y","x0","j","reverse","sum","sort","subindex","w","a0post","a1post","resort","getLegends","nodeTypeScale","colorScale","title","getName","hasTooltip","hasToggle","hasSelect"],"sources":["../../../src/connectivity-viewer/layouts/Chord.js"],"sourcesContent":["\n\n// import * as d3 from \"d3\";\nconst d3 = require(\"d3\");\nimport * as util from \"../../utilities\";\n\n\nexport class Chord {\n  constructor (calculateNodeDegrees) {\n    this.calculateNodeDegrees = calculateNodeDegrees\n  }\n\n\n  draw (context) {\n    if (this.calculateNodeDegrees !== null) {\n      context.calculateNodeDegrees(this.calculateNodeDegrees)\n    }\n    const matrix = this.generateChordMatrix(context);\n\n    const pi = Math.PI;\n    const halfpi = pi / 2;\n    const dr = 15;\n    const innerRadius = Math.min(context.width, context.height) * .41,\n      outerRadius = innerRadius * 1.05;\n\n    // if no custom colors set then use d3 provided color scheme\n    const fill = context.nodeColormap.range ? context.nodeColormap : d3.scaleOrdinal(d3.schemeCategory20);\n\n    const svg = context.svg.append(\"g\")\n      .attr(\"transform\", \"translate(\" + context.width / 2 + \",\" + context.height / 2 + \")\");\n\n    const chord = this.layout_chord()\n      .padding(.05)\n      .matrix(matrix);\n\n    chord.groups().forEach(function (g, i) {\n      g.id = context.dataset.nodeTypes[i]\n    });\n\n    const slice = svg.append(\"g\").selectAll(\"path\")\n      .data(chord.groups)\n      .enter().append(\"path\")\n      .style(\"fill\", function (d) {\n        return fill(d.id);\n      })\n      .style(\"stroke\", function (d) {\n        return fill(d.id);\n      })\n      .attr(\"d\", d3.arc().innerRadius(innerRadius).outerRadius(outerRadius))\n      .on(\"mouseover\", fade_over(.1))\n      .on(\"mouseout\", fade_out(1));\n\n    slice.append(\"title\").text(function (d) {\n      return d.id;\n    });\n\n\n    const svg_asymChord = function () {\n      let source = function (d) {\n          return d.source\n        }, target = function (d) {\n          return d.target\n        }, radius = function (d) {\n          return d.radius\n        }, startAngle = function (d) {\n          return d.startAngle\n        }, endAngle = function (d) {\n          return d.endAngle\n        };\n\n      function chord (d, i) {\n        const s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n        // var [s_p0s, s_p1s] = shift_radius(s)\n        const shifted = shift_radius(t);\n        const t_p0s = shifted[0];\n        const t_p1s = shifted[1];\n\n        return \"M\" + s.p0\n                    + arc(s.r, s.p1, s.a1 - s.a0)\n                    + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t_p0s)\n                        + arc(t.r - dr, t_p1s, t.a1 - t.a0)\n                        + curve((t.r - dr), t_p1s, s.r, s.p0))\n                    + \"Z\";\n      }\n\n      function shift_radius (d) {\n        return [[d.p0[0] - dr * Math.cos(d.a0), d.p0[1] - dr * Math.sin(d.a0)],\n                [d.p1[0] - dr * Math.cos(d.a1), d.p1[1] - dr * Math.sin(d.a1)]]\n\n      }\n\n      function subgroup (self, f, d, i) {\n        const subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i),\n          a0 = startAngle.call(self, subgroup, i) - halfpi, a1 = endAngle.call(self, subgroup, i) - halfpi;\n        return {\n          r: r,\n          a0: a0,\n          a1: a1,\n          p0: [r * Math.cos(a0), r * Math.sin(a0)],\n          p1: [r * Math.cos(a1), r * Math.sin(a1)]\n        };\n      }\n\n      function equals (a, b) {\n        return a.a0 === b.a0 && a.a1 === b.a1;\n      }\n\n      function arc (r, p, a) {\n        return \"A\" + r + \",\" + r + \" 0 \" + +(a > pi) + \",1 \" + p;\n      }\n\n      function curve (r0, p0, r1, p1) {\n        return \"Q 0,0 \" + p1;\n      }\n\n      function constant (x) {\n        return function () {\n          return x;\n        };\n      }\n\n      chord.radius = function (v) {\n        if (!arguments.length) {\n          return radius;\n        }\n        radius = typeof x === \"function\" ? v : constant(v);\n        return chord;\n      };\n      chord.source = function (v) {\n        if (!arguments.length) {\n          return source;\n        }\n        source = typeof x === \"function\" ? v : constant(v);\n        return chord;\n      };\n      chord.target = function (v) {\n        if (!arguments.length) {\n          return target;\n        }\n        target = typeof x === \"function\" ? v : constant(v);\n        return chord;\n      };\n      chord.startAngle = function (v) {\n        if (!arguments.length) {\n          return startAngle;\n        }\n        startAngle = typeof x === \"function\" ? v : constant(v);\n        return chord;\n      };\n      chord.endAngle = function (v) {\n        if (!arguments.length) {\n          return endAngle;\n        }\n        endAngle = typeof x === \"function\" ? v : constant(v);\n        return chord;\n      };\n      return chord;\n    };\n    svg.append(\"g\")\n      .attr(\"class\", \"chord\")\n      .selectAll(\"path\")\n      .data(chord.chords)\n      .enter().append(\"path\")\n      .attr(\"d\", function (d, i) {\n        return svg_asymChord().radius(innerRadius)(d, i)\n      })\n      .style(\"fill\", function (d) {\n        return fill(context.dataset.nodeTypes[d.target.index]);\n      })\n      .style(\"opacity\", 1);\n\n    function fade_over (opacity) {\n      return function (g, i) {\n        let filter = function (d) {\n          return d.source.index !== i && d.target.index !== i\n        };\n        if (d3.event.shiftKey) {\n          filter = function (d) {\n            return d.target.index !== i\n          };\n        } else if (d3.event.ctrlKey) {\n          filter = function (d) {\n            return d.source.index !== i\n          }\n        }\n        svg.selectAll(\".chord path\")\n          .filter(filter)\n          .transition()\n          .style(\"opacity\", opacity);\n      };\n    }\n\n    function fade_out (opacity) {\n      return function (g, i) {\n        svg.selectAll(\".chord path\")\n          .transition()\n          .style(\"opacity\", opacity);\n      };\n    }\n  }\n\n  generateChordMatrix (context) {\n    const matrix = [];\n\n    const type2type = {};\n\n    // {type_i: {postType_j: counts, ...}, ...}\n    const typesZeros = util.map(context.dataset.nodeTypes, function (type) {\n      return [type, 0]\n    });\n    context.dataset.nodeTypes.forEach(function (type) {\n      const initCounts = util._object(typesZeros);\n      const linksFromType = util.filter(context.dataset.links, function (link) {\n        return context.dataset.nodes[link.source].type === type\n      });\n\n      type2type[type] = util._extend(initCounts, util.countBy(linksFromType, function (link) {\n        return context.dataset.nodes[link.target].type\n      }));\n\n    });\n    util.countBy(context.dataset.nodes, function (node) {\n      return node.type\n    });\n    /*\n     *        //unconnected nodes of all types\n     *        var discNodes = util.filter(context.dataset.nodes, function (node) {\n     *            return node.degree == 0\n     *        });\n     *        var numDiscByType = util.countBy(discNodes, function (node) {\n     *            return node.type\n     *        });\n     */\n\n    context.dataset.nodeTypes.forEach(function (type, idx, nodeTypes) {\n      const numConn = [];\n      nodeTypes.forEach(function (innerType) {\n        /*\n         * normalization should be optional\n         * numConn.push[type2type.innerType] / numNodesOfType[type];\n         */\n        numConn.push(type2type[type][innerType]);\n      });\n      //            numConn.push(numDiscByType[type] ? numDiscByType[type] : 0);\n      matrix.push(numConn);\n    });\n    /*\n     *        // row of zeros for unconnected nodes\n     *        var zeroes = [];\n     *        for (var i = 0; i <= context.dataset.nodeTypes.length; i++) {\n     *            zeroes.push(0)\n     *        }\n     *        matrix.push(zeroes);\n     */\n    return matrix;\n  }\n\n\n  layout_chord () {\n    let chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    const pi = Math.PI;\n    const tau = 2 * pi;\n    function arrayRotate (arr, count) {\n      count = count % arr.length;\n      if (count < 0) {\n        arr.unshift.apply(arr, arr.splice(count));\n      } else {\n        arr.push.apply(arr, arr.splice(0, count));\n      }\n      return arr;\n    }\n    function relayout () {\n      let a1;\n      let a0;\n      let v;\n      let dj;\n      let di;\n      let subgroups = {}, groupSums = [], groupSumsT = new Array(n).fill(0), groupIndex = d3.range(n),\n        subgroupIndex = [], k, x, y, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0;\n      i = -1;\n      while (++i < n) {\n        x = 0;\n        j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n          groupSumsT[j] += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(arrayRotate(d3.range(n).reverse(), -i));\n        k += x;\n      }\n      k += d3.sum(groupSumsT);\n      if (sortGroups) {\n        groupIndex.sort(function (a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function (d, i) {\n          d.sort(function (a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (tau - padding * n) / k;\n      x = 0;\n      y = 0;\n      i = -1;\n      while (++i < n) {\n        j = -1;\n        y += k * (groupSums[i] + matrix[i][i]);\n        x0 = x;\n        while (++j < n) {\n          di = groupIndex[i];\n          dj = subgroupIndex[di][j];\n          if (di !== dj) {\n            // pre arcs\n            v = matrix[di][dj];\n            a0 = x;\n            x += v * k;\n            a1 = x;\n\n            subgroups[di + \"-\" + dj + \"_pre\"] = {\n              index: di,\n              subindex: dj,\n              startAngle: a0,\n              endAngle: a1,\n              value: v\n            };\n\n            // post arcs\n            const w = matrix[dj][di];\n            const a0post = y;\n            y += w * k;\n            const a1post = y;\n\n            subgroups[dj + \"-\" + di + \"_post\"] = {\n              index: di,\n              subindex: dj,\n              startAngle: a0post,\n              endAngle: a1post,\n              value: w\n            };\n          } else { // i->i conn\n            v = matrix[i][i];\n            a0 = x0 + (groupSums[i] - v) * k;\n            a1 = a0 + 2 * k * v;\n            // x += k * v;\n            subgroups[i + \"-\" + i + \"_pre\"] = subgroups[i + \"-\" + i + \"_post\"] = {\n              index: i,\n              subindex: i,\n              startAngle: a0,\n              endAngle: a1,\n              value: v\n            };\n          }\n        }\n        x += k * (groupSumsT[di] + matrix[di][di]) + padding;\n        y += padding;\n      }\n\n      // slices\n      i = -1;\n      x = 0;\n      x0 = 0;\n      while (++i < n) {\n        x0 = x;\n        di = groupIndex[i];\n        dj = subgroupIndex[di][j];\n        x += k * (groupSums[di] + groupSumsT[di]);\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: (x - x0) / k,\n        };\n        x += padding;\n      }\n\n      i = -1;\n      while (++i < n) {\n        j = -1;\n        while (++j < n) {\n          const source = subgroups[i + \"-\" + j + \"_pre\"], target = subgroups[i + \"-\" + j + \"_post\"];\n          if (source.value || target.value) {\n            chords.push({\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n\n      if (sortChords) {\n        resort();\n      }\n    }\n\n    function resort () {\n      chords.sort(function (a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function (x) {\n      if (!arguments.length) {\n        return matrix;\n      }\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function (x) {\n      if (!arguments.length) {\n        return padding;\n      }\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function (x) {\n      if (!arguments.length) {\n        return sortGroups;\n      }\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function (x) {\n      if (!arguments.length) {\n        return sortSubgroups;\n      }\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function (x) {\n      if (!arguments.length) {\n        return sortChords;\n      }\n      sortChords = x;\n      if (chords) {\n        resort();\n      }\n      return chord;\n    };\n    chord.chords = function () {\n      if (!chords) {\n        relayout();\n      }\n      return chords;\n    };\n    chord.groups = function () {\n      if (!groups) {\n        relayout();\n      }\n      return groups;\n    };\n    return chord;\n  }\n\n  getLegends (context){\n    const nodeTypeScale = context.nodeColormap.range ? context.nodeColormap : d3.scaleOrdinal(d3.schemeCategory20);\n    return [\n      { id:'legend', colorScale:nodeTypeScale, title:\"Populations\" }\n    ];\n  }\n\n  getName (){\n    return \"Chord\"\n  }\n\n  hasTooltip (){\n    return false\n  }\n\n  hasToggle (){\n    return true\n  }\n\n  hasSelect (){\n    return false\n  }\n}\n"],"mappings":"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","ignoreList":[]}