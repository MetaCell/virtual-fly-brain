{"version":3,"file":"CompositeType.js","names":["Type","require","CompositeType","options","prototype","constructor","call","variables","Object","create","getVariables","hasVariable","varId","vars","match","i","length","getId","getChildren","getConnections","connectionVariables","v","variable","getType","getMetaType","Resources","CONNECTION_TYPE","push","module","exports"],"sources":["../../src/model/CompositeType.js"],"sourcesContent":["\n\n/**\n * Client class use to represent a composite type.\n *\n * @module model/CompositeType\n * @author Giovanni Idili\n */\nimport Resources from '../Resources';\n\nvar Type = require('./Type').default;\n\nfunction CompositeType (options) {\n  Type.prototype.constructor.call(this, options);\n  this.variables = (options.variables != 'undefined') ? options.variables : [];\n}\n\nCompositeType.prototype = Object.create(Type.prototype);\nCompositeType.prototype.constructor = CompositeType;\n\n\n/**\n * Get variables\n *\n * @command CompositeType.getChildren()\n *\n * @returns {List<Variable>} - List of variables\n *\n */\nCompositeType.prototype.getVariables = function () {\n  return this.variables;\n};\n\n/**\n * Check if the composite contains a given variable\n *\n * @param varId\n * @returns {boolean}\n */\nCompositeType.prototype.hasVariable = function (varId) {\n  var vars = this.getVariables();\n\n  var match = false;\n  for (var i = 0; i < vars.length; i++) {\n    if (vars[i].getId() == varId) {\n      match = true;\n    }\n  }\n\n  return match;\n};\n\n/**\n * Get combined children\n *\n * @command CompositeType.getChildren()\n *\n * @returns {List<Object>} - List of children\n *\n */\nCompositeType.prototype.getChildren = function () {\n  return this.variables;\n};\n\n/**\n * Return connections\n *\n * @command CompositeType.getConnections()\n *\n * @returns {Boolean}\n *\n */\nCompositeType.prototype.getConnections = function () {\n  var connectionVariables = [];\n\n  for (var v in this.getVariables()) {\n    var variable = this.getVariables()[v];\n    if (variable.getType().getMetaType() == Resources.CONNECTION_TYPE) {\n      connectionVariables.push(variable);\n    }\n  }\n\n  return connectionVariables;\n};\n\n// Compatibility with new imports and old require syntax\nCompositeType.default = CompositeType;\nmodule.exports = CompositeType;\n"],"mappings":";;AAQA;AAAqC;AANrC;AACA;AACA;AACA;AACA;AACA;;AAGA,IAAIA,IAAI,GAAGC,OAAO,CAAC,QAAQ,CAAC,WAAQ;AAEpC,SAASC,aAAa,CAAEC,OAAO,EAAE;EAC/BH,IAAI,CAACI,SAAS,CAACC,WAAW,CAACC,IAAI,CAAC,IAAI,EAAEH,OAAO,CAAC;EAC9C,IAAI,CAACI,SAAS,GAAIJ,OAAO,CAACI,SAAS,IAAI,WAAW,GAAIJ,OAAO,CAACI,SAAS,GAAG,EAAE;AAC9E;AAEAL,aAAa,CAACE,SAAS,GAAGI,MAAM,CAACC,MAAM,CAACT,IAAI,CAACI,SAAS,CAAC;AACvDF,aAAa,CAACE,SAAS,CAACC,WAAW,GAAGH,aAAa;;AAGnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,aAAa,CAACE,SAAS,CAACM,YAAY,GAAG,YAAY;EACjD,OAAO,IAAI,CAACH,SAAS;AACvB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACAL,aAAa,CAACE,SAAS,CAACO,WAAW,GAAG,UAAUC,KAAK,EAAE;EACrD,IAAIC,IAAI,GAAG,IAAI,CAACH,YAAY,EAAE;EAE9B,IAAII,KAAK,GAAG,KAAK;EACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,IAAI,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;IACpC,IAAIF,IAAI,CAACE,CAAC,CAAC,CAACE,KAAK,EAAE,IAAIL,KAAK,EAAE;MAC5BE,KAAK,GAAG,IAAI;IACd;EACF;EAEA,OAAOA,KAAK;AACd,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAZ,aAAa,CAACE,SAAS,CAACc,WAAW,GAAG,YAAY;EAChD,OAAO,IAAI,CAACX,SAAS;AACvB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAL,aAAa,CAACE,SAAS,CAACe,cAAc,GAAG,YAAY;EACnD,IAAIC,mBAAmB,GAAG,EAAE;EAE5B,KAAK,IAAIC,CAAC,IAAI,IAAI,CAACX,YAAY,EAAE,EAAE;IACjC,IAAIY,QAAQ,GAAG,IAAI,CAACZ,YAAY,EAAE,CAACW,CAAC,CAAC;IACrC,IAAIC,QAAQ,CAACC,OAAO,EAAE,CAACC,WAAW,EAAE,IAAIC,qBAAS,CAACC,eAAe,EAAE;MACjEN,mBAAmB,CAACO,IAAI,CAACL,QAAQ,CAAC;IACpC;EACF;EAEA,OAAOF,mBAAmB;AAC5B,CAAC;;AAED;AACAlB,aAAa,WAAQ,GAAGA,aAAa;AACrC0B,MAAM,CAACC,OAAO,GAAG3B,aAAa"}