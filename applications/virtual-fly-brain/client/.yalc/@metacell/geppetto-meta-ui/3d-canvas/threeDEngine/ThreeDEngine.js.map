{"version":3,"file":"ThreeDEngine.js","names":["THREE","_interopRequireWildcard","require","_RenderPass","_EffectComposer","_ShaderPass","_BloomPass","_FilmPass","_FocusShader","_MeshFactory","_interopRequireDefault","_Instance","_ArrayInstance","_Type","_Variable","_SimpleInstance","_ModelFactory","_Resources","_CameraManager","_TrackballControls","_util","obj","__esModule","_getRequireWildcardCache","e","WeakMap","r","t","_typeof","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","o","Symbol","iterator","constructor","prototype","_createForOfIteratorHelper","allowArrayLike","it","Array","isArray","_unsupportedIterableToArray","length","F","s","done","value","_e","f","TypeError","normalCompletion","didErr","err","step","next","_e2","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","minLen","_arrayLikeToArray","toString","slice","name","from","test","iter","len","arr2","_regeneratorRuntime","c","asyncIterator","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","l","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","mark","setPrototypeOf","awrap","async","Promise","keys","reverse","pop","prev","charAt","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","undefined","ownKeys","getOwnPropertySymbols","filter","_objectSpread","_defineProperty","getOwnPropertyDescriptors","defineProperties","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","_createClass","protoProps","staticProps","_toPrimitive","toPrimitive","String","Number","ThreeDEngine","exports","containerRef","cameraOptions","cameraHandler","setColorHandler","backgroundColor","pickingEnabled","linesThreshold","renderingThreshold","onSelection","selectionStrategy","onHoverListeners","onEmptyHoverListener","preserveDrawingBuffer","dracoDecoderPath","renderingTheshold","_this","controls","addEventListener","requestFrame","renderer","domElement","mouseDownEventListener","mouseUpEventListener","mouseMoveEventListener","event","clientX","clientY","x","mouse","getBoundingClientRect","top","window","devicePixelRatio","height","left","width","intersects","getIntersectedObjects","compare","b","distance","sort","selectedMap","instancePath","externalMeshId","geometryIdentifier","object","parent","uuid","meshFactory","meshes","splitMeshes","distanceIndex","mouseContainer","_i","_Object$keys","listener","scene","Scene","background","Color","cameraManager","frameId","MeshFactory","depthWrite","clientWidth","clientHeight","lastRequestFrame","lastRenderTimer","Date","instancesMap","Map","externalThreeDObjectsUUIDs","Set","updateInstances","bind","updateCamera","animate","renderScene","resize","setupRenderer","setupListeners","setOnHoverListeners","setOnEmptyHoverListener","setupCamera","antialias","alpha","setupLights","setupControls","aspect","CameraManager","options","WebGLRenderer","setSize","setPixelRatio","autoClear","appendChild","configureRenderer","shaders","renderModel","RenderPass","getCamera","composer","EffectComposer","effectBloom","BloomPass","effectFilm","FilmPass","effectFocus","ShaderPass","FocusShader","uniforms","renderToScreen","addPass","_this$cameraOptions","_this$cameraOptions2","_this$cameraOptions3","ambientLight","AmbientLight","add","spotLight","SpotLight","spotlightPosition","z","position","castShadow","PointLight","defaultTrackballConfig","rotationSpeed","zoomSpeed","panSpeed","trackballControls","trackballConfig","TrackballControls","noZoom","noPan","_updateInstances","_callee","proxyInstances","_callee$","_context","clearScene","addInstancesToScene","updateVisibleChildren","updateInstancesColor","updateInstancesConnectionLines","updateMatrixWorld","_x","updateExternalThreeDObjects","threeDObjects","_this2","nextObjsUUIDs","map","toRemoveUUIDs","remove","getObjectByProperty","element","addToScene","update","cancelAnimationFrame","_addInstancesToScene","_callee2","_callee2$","_context2","start","updateGroupMeshes","_x2","found","_iterator","children","_step","child","_clearScene","_callee3","_this3","sortedInstances","toRemove","_callee3$","_context3","console","clear","sortInstances","geppettoInstance","Instances","getInstance","traverseInstance","mappedInstance","visibility","checkMaterial","updateInstanceMaterial","cleanWith3DObject","_x3","proxyInstance","hasVisualValue","getInstancePath","hasVisualType","getType","getMetaType","Resources","ARRAY_TYPE_NODE","getVisualType","INSTANCE_NODE","getChildren","ARRAY_INSTANCE_NODE","vector","Vector3","unproject","raycaster","Raycaster","sub","normalize","linePrecision","getLinePrecision","intersectObjects","visibleChildren","_this4","traverse","visible","clickThrough","geometry","computeBoundingBox","mesh","_instance$color","_instance$color2","_instance$color3","_instance$color4","material","color","opacity","changed","_iterator2","_step2","_iterator3","_step3","setInstanceMaterial","COLORS","DEFAULT","setThreeColor","transparent","_iterator4","_step4","_iterator5","_step5","pInstance","setInstanceColor","visualGroups","getVisualElements","setSplitGroupsColor","path","entity","Instance","ArrayInstance","SimpleInstance","setColor","Type","Variable","instances","ModelFactory","getAllInstancesOf","j","group","groupName","indexOf","groupMesh","getMeshes","_iterator6","_step6","splitGroups","meshKey","groups","index","vg","getVisualGroups","visualElements","getVisualGroupElements","allElements","getValue","minDensity","Math","min","maxDensity","max","getId","getColor","intensity","rgbToHex","floor","custom","showConnectionLines","mode","showConnectionLinesForInstance","removeConnectionLines","connections","getConnections","inputs","outputs","defaultOrigin","clone","connection","getA","getPath","OUTPUT","INPUT","thisEnd","getB","otherEnd","otherEndPath","otherEndMesh","destination","origin","getPoint","Geometry","vertices","verticesNeedUpdate","dynamic","colour","INPUT_TO_SELECTED","INPUT_AND_OUTPUT","OUTPUT_TO_SELECTED","LineDashedMaterial","dashSize","gapSize","line","LineSegments","connectionLines","_iterator7","_step7","lines","setWireframe","wireframe","that","Mesh","nowireframe","setBackgroundColor","getHex","newColor","camera","updateProjectionMatrix","engine","updateOnResize","timeDif","getTime","abs","requestAnimationFrame","updateControls","render","getRenderer","getScene","getWireframe","setSelectionStrategy","setOnSelection","setLinesThreshold","setPickingEnabled","seCameraHandler","setSetColorHandler"],"sources":["../../../src/3d-canvas/threeDEngine/ThreeDEngine.js"],"sourcesContent":["import * as THREE from 'three';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js';\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass.js';\nimport { BloomPass } from 'three/examples/jsm/postprocessing/BloomPass.js';\nimport { FilmPass } from 'three/examples/jsm/postprocessing/FilmPass.js';\nimport { FocusShader } from 'three/examples/jsm/shaders/FocusShader.js';\n\nimport MeshFactory from './MeshFactory';\nimport Instance from '@metacell/geppetto-meta-core/model/Instance';\nimport ArrayInstance from '@metacell/geppetto-meta-core//model/ArrayInstance';\nimport Type from '@metacell/geppetto-meta-core/model/Type';\nimport Variable from '@metacell/geppetto-meta-core/model/Variable';\nimport SimpleInstance from \"@metacell/geppetto-meta-core/model/SimpleInstance\";\nimport ModelFactory from '@metacell/geppetto-meta-core/ModelFactory';\nimport Resources from '@metacell/geppetto-meta-core/Resources';\n\nimport CameraManager from './CameraManager';\nimport { TrackballControls } from './TrackballControls';\nimport { rgbToHex, hasVisualType, hasVisualValue, sortInstances } from \"./util\";\n\n\nexport default class ThreeDEngine {\n  constructor (\n    containerRef,\n    cameraOptions,\n    cameraHandler,\n    setColorHandler,\n    backgroundColor,\n    pickingEnabled,\n    linesThreshold,\n    renderingThreshold,\n    onSelection,\n    selectionStrategy,\n    onHoverListeners,\n    onEmptyHoverListener,\n    preserveDrawingBuffer,\n    dracoDecoderPath,\n    renderingTheshold\n  ) {\n    this.scene = new THREE.Scene();\n    this.scene.background = new THREE.Color(backgroundColor);\n    this.cameraManager = null;\n    this.cameraOptions = cameraOptions;\n    this.onSelection = onSelection;\n    this.renderer = null;\n    this.controls = null;\n    this.mouse = { x: 0, y: 0 };\n    this.mouseContainer = { x: 0, y: 0 }\n    this.frameId = null;\n    this.meshFactory = new MeshFactory(this.scene, linesThreshold, renderingThreshold, cameraOptions.depthWrite, 300, 1,\n        null, dracoDecoderPath, null);\n    this.pickingEnabled = pickingEnabled;\n    this.onHoverListeners = onHoverListeners;\n    this.onEmptyHoverListener = onEmptyHoverListener ;\n    this.cameraHandler = cameraHandler;\n    this.setColorHandler = setColorHandler;\n    this.selectionStrategy = selectionStrategy\n    this.containerRef = containerRef\n    this.width = containerRef.clientWidth;\n    this.height = containerRef.clientHeight;\n    this.lastRequestFrame = 0 ;\n    this.lastRenderTimer = new Date();\n    this.instancesMap = new Map();\n    this.externalThreeDObjectsUUIDs = new Set()\n\n    this.updateInstances = this.updateInstances.bind(this);\n    this.updateCamera = this.updateCamera.bind(this);\n    this.stop = this.stop.bind(this);\n    this.animate = this.animate.bind(this);\n    this.renderScene = this.renderScene.bind(this);\n    this.resize = this.resize.bind(this);\n    this.requestFrame = this.requestFrame.bind(this);\n    this.mouseDownEventListener = this.mouseDownEventListener.bind(this);\n    this.mouseUpEventListener = this.mouseUpEventListener.bind(this);\n    this.mouseMoveEventListener = this.mouseMoveEventListener.bind(this);\n    this.setupRenderer = this.setupRenderer.bind(this);\n    this.setupListeners = this.setupListeners.bind(this);\n    this.setOnHoverListeners = this.setOnHoverListeners.bind(this);\n    this.setOnEmptyHoverListener = this.setOnEmptyHoverListener.bind(this);\n\n    // Setup Camera\n    this.setupCamera(cameraOptions, this.width / this.height);\n\n    // Setup Renderer\n    this.setupRenderer(containerRef, { antialias: true, alpha: true, preserveDrawingBuffer: preserveDrawingBuffer });\n\n    // Setup Lights\n    this.setupLights();\n\n    // Setup Controls\n    this.setupControls();\n\n    // Setup Listeners\n    this.setupListeners();\n  }\n\n  /**\n   * Setups the camera\n   * @param cameraOptions\n   * @param aspect\n   */\n  setupCamera (cameraOptions, aspect) {\n    this.cameraManager = new CameraManager(this, {\n      ...cameraOptions,\n      aspect,\n    });\n  }\n\n  /**\n   * Setups the renderer\n   * @param containerRef\n   */\n  setupRenderer (containerRef, options) {\n    this.renderer = new THREE.WebGLRenderer(options);\n    this.renderer.setSize(this.width, this.height);\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.autoClear = false;\n    containerRef.appendChild(this.renderer.domElement);\n    this.configureRenderer(false);\n  }\n\n  /**\n   *\n   * @param shaders\n   */\n  configureRenderer (shaders) {\n    if (shaders === undefined) {\n      shaders = false;\n    }\n\n    const renderModel = new RenderPass(\n      this.scene,\n      this.cameraManager.getCamera()\n    );\n    this.composer = new EffectComposer(this.renderer);\n\n    if (shaders) {\n      const effectBloom = new BloomPass(0.75);\n      // todo: grayscale shouldn't be false\n      const effectFilm = new FilmPass(0.5, 0.5, 1448, false);\n      const effectFocus = new ShaderPass(FocusShader);\n\n      effectFocus.uniforms['screenWidth'].value = this.width;\n      effectFocus.uniforms['screenHeight'].value = this.height;\n      effectFocus.renderToScreen = true;\n\n      this.composer.addPass(renderModel);\n      this.composer.addPass(effectBloom);\n      this.composer.addPass(effectFilm);\n      this.composer.addPass(effectFocus);\n    } else {\n      // standard\n      renderModel.renderToScreen = true;\n      this.composer.addPass(renderModel);\n    }\n  }\n\n  /**\n   * Setups the lights\n   */\n  setupLights () {\n    const ambientLight = new THREE.AmbientLight(0x0c0c0c);\n    this.scene.add(ambientLight);\n    const spotLight = new THREE.SpotLight(0xffffff);\n    if (this.cameraOptions?.spotlightPosition?.x && this.cameraOptions?.spotlightPosition?.y && this.cameraOptions?.spotlightPosition?.z) {\n      spotLight.position.set(this.cameraOptions.spotlightPosition.x, this.cameraOptions.spotlightPosition.y, this.cameraOptions.spotlightPosition.z);\n    } else {\n      spotLight.position.set(0, 0, 0);\n    }\n    spotLight.castShadow = true;\n    this.scene.add(spotLight);\n    this.cameraManager.getCamera().add(new THREE.PointLight(0xffffff, 1));\n  }\n\n  setupControls () {\n    const defaultTrackballConfig = { rotationSpeed: 1.0, zoomSpeed:1.2, panSpeed: 0.3 }\n    const { trackballControls } = this.cameraOptions\n    const trackballConfig = trackballControls ? trackballControls : defaultTrackballConfig\n    this.controls = new TrackballControls(\n      this.cameraManager.getCamera(),\n      this.renderer.domElement,\n      this.cameraHandler,\n      trackballConfig\n    );\n    this.controls.noZoom = false;\n    this.controls.noPan = false;\n  }\n\n  /**\n   * Set up the listeners use to detect mouse movement and window resizing\n   */\n  setupListeners = () => {\n    this.controls.addEventListener('start', this.requestFrame);\n    this.controls.addEventListener('change', this.requestFrame);\n    this.controls.addEventListener('stop', this.stop);\n    // when the mouse moves, call the given function\n    this.renderer.domElement.addEventListener(\n      'mousedown',\n      this.mouseDownEventListener,\n      false\n    );\n\n    // when the mouse moves, call the given function\n    this.renderer.domElement.addEventListener(\n      'mouseup',\n      this.mouseUpEventListener,\n      false\n    );\n\n    this.renderer.domElement.addEventListener(\n      'mousemove',\n      this.mouseMoveEventListener,\n      false\n    );\n  }\n\n  mouseDownEventListener = event => {\n    this.clientX = event.clientX;\n    this.clientY = event.clientY;\n  }\n\n  mouseUpEventListener = event => {\n    if (event.target === this.renderer.domElement) {\n      const x = event.clientX;\n      const y = event.clientY;\n\n      // if the mouse moved since the mousedown then don't consider this a selection\n      if (\n        typeof this.clientX === 'undefined'\n          || typeof this.clientY === 'undefined'\n          || x !== this.clientX\n          || y !== this.clientY\n      ) {\n        return;\n      }\n\n      this.mouse.y\n          = -(\n          ((event.clientY - this.renderer.domElement.getBoundingClientRect().top) * window.devicePixelRatio)\n          / this.renderer.domElement.height\n        ) * 2 + 1;\n\n      this.mouse.x\n          = (\n          ((event.clientX - this.renderer.domElement.getBoundingClientRect().left) * window.devicePixelRatio)\n          / this.renderer.domElement.width\n        ) * 2 - 1;\n\n      if (this.pickingEnabled) {\n        const intersects = this.getIntersectedObjects();\n\n        if (intersects.length > 0) {\n          // sort intersects\n          const compare = function (a, b) {\n            if (a.distance < b.distance) {\n              return -1;\n            }\n            if (a.distance > b.distance) {\n              return 1;\n            }\n            return 0;\n          }\n          intersects.sort(compare);\n        }\n\n        let selectedMap = {};\n        // Iterate and get the first visible item (they are now ordered by proximity)\n        for (let i = 0; i < intersects.length; i++) {\n          // figure out if the entity is visible\n          let instancePath = '';\n          let externalMeshId = null;\n          let geometryIdentifier = '';\n          if (\n            Object.prototype.hasOwnProperty.call(\n              intersects[i].object,\n              'instancePath'\n            )\n          ) {\n            instancePath = intersects[i].object.instancePath;\n            geometryIdentifier\n                = intersects[i].object.geometryIdentifier;\n          } else if (Object.prototype.hasOwnProperty.call(\n              intersects[i].object.parent,\n              'instancePath'\n          )) {\n            instancePath = intersects[i].object.parent.instancePath;\n            geometryIdentifier\n                = intersects[i].object.parent.geometryIdentifier;\n          }\n          else {\n            externalMeshId = intersects[i].object.uuid\n            geometryIdentifier = null\n          }\n\n          if (\n            (instancePath != null\n                  && Object.prototype.hasOwnProperty.call(\n                    this.meshFactory.meshes,\n                    instancePath\n                  ))\n              || Object.prototype.hasOwnProperty.call(\n                this.meshFactory.splitMeshes,\n                instancePath\n              )\n          ) {\n            if (!(instancePath in selectedMap)) {\n              selectedMap[instancePath] = {\n                ...intersects[i],\n                geometryIdentifier: geometryIdentifier,\n                distanceIndex: i,\n              };\n            }\n          }\n          if (externalMeshId != null) {\n            if (!(externalMeshId in selectedMap)) {\n              selectedMap[externalMeshId] = {\n                ...intersects[i],\n                distanceIndex: i,\n              };\n            }\n          }\n        }\n        this.requestFrame();\n        this.onSelection(this.selectionStrategy(selectedMap), event)\n      }\n    }\n  }\n\n  mouseMoveEventListener = event => {\n    this.mouse.y\n        = -(((event.clientY\n                - this.renderer.domElement.getBoundingClientRect().top) * window.devicePixelRatio)\n            / this.renderer.domElement.height\n      )\n        * 2 + 1;\n\n    this.mouse.x\n        = (((event.clientX\n                - this.renderer.domElement.getBoundingClientRect().left) * window.devicePixelRatio)\n            / this.renderer.domElement.width)\n        * 2 - 1;\n\n    this.mouseContainer.x = event.clientX;\n    this.mouseContainer.y = event.clientY;\n\n\n    if (this.onHoverListeners && Object.keys(this.onHoverListeners).length > 0) {\n      const intersects = this.getIntersectedObjects();\n      for (const listener of Object.keys(this.onHoverListeners)) {\n        if (intersects.length !== 0) {\n          this.onHoverListeners[listener](intersects, this.mouseContainer.x, this.mouseContainer.y);\n        }\n      }\n      if (this.onEmptyHoverListener && intersects.length === 0)\n        this.onEmptyHoverListener();\n    }\n  }\n\n  async updateInstances (proxyInstances) {\n    proxyInstances = await this.clearScene(proxyInstances);\n    // Todo: resolve proxyInstances to populate child meshes\n    await this.addInstancesToScene(proxyInstances);\n    this.updateVisibleChildren();\n    this.updateInstancesColor(proxyInstances);\n    this.updateInstancesConnectionLines(proxyInstances);\n    this.scene.updateMatrixWorld(true);\n  }\n\n  updateExternalThreeDObjects (threeDObjects){\n    const nextObjsUUIDs = new Set(threeDObjects.map(obj => obj.uuid))\n    let toRemoveUUIDs = [...this.externalThreeDObjectsUUIDs].filter(x => !nextObjsUUIDs.has(x));\n    toRemoveUUIDs.forEach(uuid => {\n      this.scene.remove(this.scene.getObjectByProperty('uuid', uuid));\n    })\n    threeDObjects.forEach(element => {\n      this.addToScene(element); // already checks if object is already in the scene\n      this.externalThreeDObjectsUUIDs.add(element.uuid)\n    });\n    this.updateVisibleChildren();\n  }\n\n  updateCamera (cameraOptions){\n    this.cameraManager.update(cameraOptions)\n  }\n\n  stop () {\n    cancelAnimationFrame(this.frameId);\n  }\n\n  /**\n   * Adds instances to the ThreeJS Scene\n   * @param proxyInstances\n   */\n  async addInstancesToScene (proxyInstances) {\n    // const instances = proxyInstances.map(pInstance => Instances.getInstance(pInstance.instancePath));\n    await this.meshFactory.start(this.instancesMap);\n    this.updateGroupMeshes(proxyInstances);\n  }\n\n  addToScene (obj) {\n    let found = false;\n    for (let child of this.scene.children) {\n      if (((obj.instancePath) && (obj.instancePath === child.instancePath)) || (child.uuid === obj.uuid)) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      this.scene.add(obj);\n    }\n  }\n\n  async clearScene (proxyInstances) {\n    // safe check, if something different than an array is given we wipe the canvas.\n    if (!Array.isArray(proxyInstances) && proxyInstances === undefined) {\n      console.error(\"The Geppetto ThreeDEngine has been given an invalid object instead of a list of proxy instances, please check your usage of the 3D Canvas\");\n      proxyInstances = [];\n    }\n\n    this.instancesMap.clear();\n    const sortedInstances = sortInstances(proxyInstances);\n    // traverse all the geppetto instances\n    sortedInstances.forEach( instance => {\n      const geppettoInstance = Instances.getInstance(instance.instancePath);\n      if (geppettoInstance) {\n        this.traverseInstance(instance, geppettoInstance);\n      }\n    });\n\n    const toRemove = this.scene.children.filter(child => {\n      const mappedInstance = this.instancesMap.get(child.instancePath);\n      if (child.instancePath !== undefined) {\n        if (!mappedInstance || mappedInstance.visibility === false) {\n          return true;\n        }\n        if (this.checkMaterial(child, mappedInstance) && mappedInstance) {\n          this.updateInstanceMaterial(child, mappedInstance);\n        }\n      }\n      return false;\n    });\n\n    toRemove.forEach( child => {\n      this.meshFactory.cleanWith3DObject(child);\n      this.scene.remove(child);\n    });\n    return sortedInstances;\n  }\n\n  traverseInstance (proxyInstance, geppettoInstance) {\n    try {\n      if (hasVisualValue(geppettoInstance)) {\n        this.instancesMap.set(geppettoInstance.getInstancePath(), proxyInstance);\n      } else if (hasVisualType(geppettoInstance)) {\n        if (\n          geppettoInstance.getType().getMetaType()\n            !== Resources.ARRAY_TYPE_NODE\n            && geppettoInstance.getVisualType()\n        ) {\n          this.instancesMap.set(geppettoInstance.getInstancePath(), proxyInstance);\n        }\n        if (geppettoInstance.getMetaType() === Resources.INSTANCE_NODE) {\n          const children = geppettoInstance.getChildren();\n          for (let i = 0; i < children.length; i++) {\n            this.traverseInstance(proxyInstance, children[i]);\n          }\n        } else if (\n          geppettoInstance.getMetaType() === Resources.ARRAY_INSTANCE_NODE\n        ) {\n          for (let i = 0; i < geppettoInstance.length; i++) {\n            this.traverseInstance(proxyInstance, geppettoInstance[i]);\n          }\n        }\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }\n\n  /**\n   * Returns intersected objects from mouse click\n   *\n   * @returns {Array} a list of objects intersected by the current mouse coordinates\n   */\n  getIntersectedObjects () {\n    // create a Ray with origin at the mouse position and direction into th scene (camera direction)\n    const vector = new THREE.Vector3(this.mouse.x, this.mouse.y, 1);\n    vector.unproject(this.cameraManager.getCamera());\n\n    const raycaster = new THREE.Raycaster(\n      this.cameraManager.getCamera().position,\n      vector.sub(this.cameraManager.getCamera().position).normalize()\n    );\n    raycaster.linePrecision = this.meshFactory.getLinePrecision();\n\n    // returns an array containing all objects in the scene with which the ray intersects\n    return raycaster.intersectObjects(this.visibleChildren);\n  }\n\n\n  updateVisibleChildren () {\n    this.visibleChildren = [];\n    this.scene.traverse( child => {\n      if (child.visible && !(child.clickThrough === true)) {\n        if (child.geometry != null) {\n          if (child.type !== 'Points') {\n            child.geometry.computeBoundingBox();\n          }\n          this.visibleChildren.push(child);\n        }\n      }\n    });\n  }\n\n\n  /**\n   * Check that the material for the already present instance did not change.\n   * return true if the color changed, otherwise false.\n   */\n\n  checkMaterial (mesh, instance) {\n    if (mesh.type === 'Mesh' || mesh.type === 'LineSegment') {\n      if (mesh.material.color.r === instance?.color?.r\n        && mesh.material.color.g === instance?.color?.g\n        && mesh.material.color.b === instance?.color?.b\n        && mesh.material.color.opacity === instance?.color?.a) {\n        return false;\n      } else {\n        return true;\n      }\n    } else if (mesh.type === 'Group') {\n      var changed = false;\n      for (let child of mesh.children) {\n        if (this.checkMaterial(child, instance)) {\n          changed = true;\n        }\n      }\n      return changed;\n    }\n  }\n\n\n  updateInstanceMaterial (mesh, instance) {\n    for (let child of this.scene.children) {\n      if (child.instancePath === mesh.instancePath && child.uuid === mesh.uuid) {\n        if (instance?.color !== undefined) {\n          this.setInstanceMaterial(child, instance);\n          break;\n        } else {\n          instance.color = Resources.COLORS.DEFAULT;\n          this.setInstanceMaterial(child, instance);\n        }\n      }\n    }\n  }\n\n\n  setInstanceMaterial (mesh, instance) {\n    if (mesh.type === 'Mesh') {\n      this.meshFactory.setThreeColor(mesh.material.color, instance.color);\n      if (instance.color.a) {\n        mesh.material.transparent = true;\n        mesh.material.opacity = instance.color.a;\n      }\n    } else if (mesh.type === 'Group') {\n      for (let child of mesh.children) {\n        this.setInstanceMaterial(child, instance);\n      }\n    }\n  }\n\n\n  updateInstancesColor (proxyInstances) {\n    const sortedInstances = proxyInstances.sort((a, b) => {\n      if (a.instancePath < b.instancePath) {\n        return -1;\n      }\n      if (a.instancePath > b.instancePath) {\n        return 1;\n      }\n      return 0;\n    });\n    for (const pInstance of sortedInstances) {\n      if (pInstance.color) {\n        this.setInstanceColor(pInstance.instancePath, pInstance.color);\n      }\n      if (pInstance.visualGroups) {\n        const instance = Instances.getInstance(pInstance.instancePath);\n        const visualGroups = this.getVisualElements(\n          instance,\n          pInstance.visualGroups\n        );\n        this.setSplitGroupsColor(pInstance.instancePath, visualGroups);\n      }\n    }\n  }\n\n  /**\n   * Sets the color of the instances\n   *\n   * @param path\n   * @param color\n   */\n  setInstanceColor (path, color) {\n    const entity = Instances.getInstance(path);\n    if (entity && this.setColorHandler(entity)) {\n      if (entity instanceof Instance || entity instanceof ArrayInstance || entity instanceof SimpleInstance) {\n        this.meshFactory.setColor(path, color);\n\n        if (typeof entity.getChildren === 'function') {\n          const children = entity.getChildren();\n          for (let i = 0; i < children.length; i++) {\n            this.setInstanceColor(children[i].getInstancePath(), color);\n          }\n        }\n      } else if (entity instanceof Type || entity instanceof Variable) {\n        // fetch all instances for the given type or variable and call hide on each\n        const instances = ModelFactory.getAllInstancesOf(entity);\n        for (let j = 0; j < instances.length; j++) {\n          this.setInstanceColor(instances[j].getInstancePath(), color);\n        }\n      }\n    }\n  }\n\n  /**\n   *\n   * @param instancePath\n   * @param visualGroups\n   */\n  setSplitGroupsColor (instancePath, visualGroups) {\n    for (const g in visualGroups) {\n      // retrieve visual group object\n      const group = visualGroups[g];\n\n      // get full group name to access group mesh\n      let groupName = g;\n      if (groupName.indexOf(instancePath) <= -1) {\n        groupName = instancePath + '.' + g;\n      }\n\n      // get group mesh\n      const groupMesh = this.meshFactory.getMeshes()[groupName];\n      groupMesh.visible = true;\n      this.meshFactory.setThreeColor(groupMesh.material.color, group.color);\n    }\n  }\n\n  updateGroupMeshes (proxyInstances) {\n    for (const pInstance of proxyInstances) {\n      if (pInstance.visualGroups) {\n        const instance = Instances.getInstance(pInstance.instancePath);\n        const visualGroups = this.getVisualElements(\n          instance,\n          pInstance.visualGroups\n        );\n        this.meshFactory.splitGroups(instance, visualGroups);\n      }\n    }\n    const meshes = this.meshFactory.getMeshes();\n    for (const meshKey in meshes) {\n      this.addToScene(meshes[meshKey]);\n    }\n  }\n\n  getVisualElements (instance, visualGroups) {\n    const groups = {};\n    if (visualGroups.index != null) {\n      const vg = instance.getVisualGroups()[visualGroups.index];\n      const visualElements = vg.getVisualGroupElements();\n      const allElements = [];\n      for (let i = 0; i < visualElements.length; i++) {\n        if (visualElements[i].getValue() != null) {\n          allElements.push(visualElements[i].getValue());\n        }\n      }\n\n      let minDensity = Math.min.apply(null, allElements);\n      let maxDensity = Math.max.apply(null, allElements);\n\n      // highlight all reference nodes\n      for (let j = 0; j < visualElements.length; j++) {\n        groups[visualElements[j].getId()] = {};\n        let color = visualElements[j].getColor();\n        if (visualElements[j].getValue() != null) {\n          let intensity = 1;\n          if (maxDensity !== minDensity) {\n            intensity\n              = (visualElements[j].getValue() - minDensity)\n              / (maxDensity - minDensity);\n          }\n\n          color = rgbToHex(\n            255,\n            Math.floor(255 - 255 * intensity),\n            0\n          );\n        }\n        groups[visualElements[j].getId()].color = color;\n      }\n    }\n\n    for (const c in visualGroups.custom) {\n      if (c in groups) {\n        groups[c].color = visualGroups.custom[c].color;\n      }\n    }\n\n    return groups;\n  }\n  /**\n   * Show connection lines for this instance.\n   *\n   * @param instancePath\n   * @param {boolean} mode - Show or hide connection lines\n   */\n  showConnectionLines (instancePath, mode) {\n    if (mode == null) {\n      mode = true;\n    }\n    const entity = Instances.getInstance(instancePath);\n    if (entity instanceof Instance || entity instanceof ArrayInstance) {\n      // show or hide connection lines\n      if (mode) {\n        this.showConnectionLinesForInstance(entity);\n      } else {\n        this.removeConnectionLines(entity);\n      }\n    } else if (entity instanceof Type || entity instanceof Variable) {\n      // fetch all instances for the given type or variable and call hide on each\n      const instances = ModelFactory.getAllInstancesOf(entity);\n      for (let j = 0; j < instances.length; j++) {\n        if (hasVisualType(instances[j])) {\n          this.showConnectionLines(instances[j], mode);\n        }\n      }\n    }\n  }\n\n  /**\n   *\n   *\n   * @param instance\n   */\n  showConnectionLinesForInstance (instance) {\n    const connections = instance.getConnections();\n\n    const mesh = this.meshFactory.meshes[instance.getInstancePath()];\n    const inputs = {};\n    const outputs = {};\n    const defaultOrigin = mesh.position.clone();\n\n    for (let c = 0; c < connections.length; c++) {\n\n      const connection = connections[c];\n      const type = connection.getA().getPath() === instance.getInstancePath()\n        ? Resources.OUTPUT\n        : Resources.INPUT;\n\n      const thisEnd = connection.getA().getPath() === instance.getInstancePath() ? connection.getA() : connection.getB();\n      const otherEnd = connection.getA().getPath() === instance.getInstancePath() ? connection.getB() : connection.getA();\n      const otherEndPath = otherEnd.getPath();\n\n      const otherEndMesh = this.meshFactory.meshes[otherEndPath];\n\n      let destination;\n      let origin;\n\n      if (thisEnd.getPoint() === undefined) {\n        // same as before\n        origin = defaultOrigin;\n      } else {\n        // the specified coordinate\n        const p = thisEnd.getPoint();\n        origin = new THREE.Vector3(p.x + mesh.position.x, p.y + mesh.position.y, p.z + mesh.position.z);\n      }\n\n      if (otherEnd.getPoint() === undefined) {\n        // same as before\n        destination = otherEndMesh.position.clone();\n      } else {\n        // the specified coordinate\n        const p = otherEnd.getPoint();\n        destination = new THREE.Vector3(p.x + otherEndMesh.position.x, p.y + otherEndMesh.position.y, p.z + otherEndMesh.position.z);\n      }\n\n      const geometry = new THREE.Geometry();\n\n      geometry.vertices.push(origin, destination);\n      geometry.verticesNeedUpdate = true;\n      geometry.dynamic = true;\n\n      let colour = null;\n\n\n      if (type === Resources.INPUT) {\n\n        colour = Resources.COLORS.INPUT_TO_SELECTED;\n\n        // figure out if connection is both, input and output\n        if (outputs[otherEndPath]) {\n          colour = Resources.COLORS.INPUT_AND_OUTPUT;\n        }\n\n        if (inputs[otherEndPath]) {\n          inputs[otherEndPath].push(connection.getInstancePath());\n        } else {\n          inputs[otherEndPath] = [];\n          inputs[otherEndPath].push(connection.getInstancePath());\n        }\n      } else if (type === Resources.OUTPUT) {\n\n        colour = Resources.COLORS.OUTPUT_TO_SELECTED;\n        // figure out if connection is both, input and output\n        if (inputs[otherEndPath]) {\n          colour = Resources.COLORS.INPUT_AND_OUTPUT;\n        }\n\n        if (outputs[otherEndPath]) {\n          outputs[otherEndPath].push(connection.getInstancePath());\n        } else {\n          outputs[otherEndPath] = [];\n          outputs[otherEndPath].push(connection.getInstancePath());\n        }\n      }\n\n      const material = new THREE.LineDashedMaterial({ dashSize: 3, gapSize: 1 });\n      this.meshFactory.setThreeColor(material.color, colour);\n\n      const line = new THREE.LineSegments(geometry, material);\n      line.updateMatrixWorld(true);\n\n\n      if (this.meshFactory.connectionLines[connection.getInstancePath()]) {\n        this.scene.remove(this.meshFactory.connectionLines[connection.getInstancePath()]);\n      }\n\n      this.scene.add(line);\n      this.meshFactory.connectionLines[connection.getInstancePath()] = line;\n    }\n  }\n\n  updateInstancesConnectionLines (proxyInstances) {\n    for (const pInstance of proxyInstances) {\n      const mode = pInstance.showConnectionLines ? pInstance.showConnectionLines : false\n      this.showConnectionLines(pInstance.instancePath, mode);\n    }\n  }\n\n  /**\n   * Removes connection lines, all if nothing is passed in or just the ones passed in.\n   *\n   * @param instance - optional, instance for which we want to remove the connections\n   */\n  removeConnectionLines (instance) {\n    if (instance !== undefined) {\n      const connections = instance.getConnections();\n      // get connections for given instance and remove only those\n      const lines = this.meshFactory.connectionLines;\n      for (let i = 0; i < connections.length; i++) {\n        if (Object.prototype.hasOwnProperty.call(lines, connections[i].getInstancePath())) {\n          // remove the connection line from the scene\n          this.scene.remove(lines[connections[i].getInstancePath()]);\n          // remove the conneciton line from the GEPPETTO list of connection lines\n          delete lines[connections[i].getInstancePath()];\n        }\n      }\n    } else {\n      // remove all connection lines\n      const lines = this.meshFactory.connectionLines;\n      for (var key in lines) {\n        if (Object.prototype.hasOwnProperty.call(lines, key)) {\n          this.scene.remove(lines[key]);\n        }\n      }\n      this.meshFactory.connectionLines = [];\n    }\n  }\n\n\n  /**\n   * Sets whether to use wireframe for the materials of the meshes\n   * @param wireframe\n   */\n  setWireframe (wireframe) {\n    this.wireframe = wireframe;\n    const that = this;\n    this.scene.traverse(function (child) {\n      if (child instanceof THREE.Mesh) {\n        if (!(child.material.nowireframe === true)) {\n          child.material.wireframe = that.wireframe;\n        }\n      }\n    });\n  }\n\n  setBackgroundColor (color) {\n    this.scene.background.getHex()\n    let newColor = new THREE.Color(color);\n    if (this.scene.background.getHex() !== newColor.getHex()) {\n      this.scene.background = newColor;\n    }\n  }\n\n\n  resize () {\n    if (this.width !== this.containerRef.clientWidth || this.height !== this.containerRef.clientHeight) {\n      this.width = this.containerRef.clientWidth;\n      this.height = this.containerRef.clientHeight;\n      this.cameraManager.camera.aspect = this.width / this.height;\n      this.cameraManager.camera.updateProjectionMatrix();\n      this.renderer.setSize(this.width, this.height);\n      this.composer.setSize(this.width, this.height);\n      /*\n       * TOFIX: this above is just an hack to trigger the ratio to be recalculated, without the line below\n       * the resizing works but the image gets stretched.\n       */\n      this.cameraManager.engine.controls.updateOnResize();\n    }\n  }\n\n  requestFrame () {\n    const timeDif = this.lastRenderTimer.getTime() - new Date().getTime();\n    if (Math.abs(timeDif) > 10) {\n      this.lastRenderTimer = new Date() ;\n      this.frameId = window.requestAnimationFrame(this.animate);\n    }\n  }\n\n  animate () {\n    this.controls.update();\n    this.renderScene();\n  }\n\n  updateControls () {\n    this.controls.update();\n  }\n\n  renderScene () {\n    this.renderer.render(this.scene, this.cameraManager.getCamera());\n  }\n\n\n  /**\n   * Returns the scene renderer\n   * @returns renderer\n   */\n  getRenderer () {\n    return this.renderer;\n  }\n  /**\n   * Returns the scene\n   * @returns scene\n   */\n  getScene () {\n    return this.scene;\n  }\n  /**\n   * Returns the wireframe flag\n   * @returns wireframe\n   */\n  getWireframe () {\n    return this.wireframe;\n  }\n\n  /**\n   * Sets onHoverListeners\n   */\n  setOnHoverListeners (onHoverListeners) {\n    this.onHoverListeners = onHoverListeners\n  }\n\n  setOnEmptyHoverListener (onEmptyHoverListener) {\n    this.onEmptyHoverListener = onEmptyHoverListener\n  }\n  /**\n   * Sets selectionStrategy\n   */\n  setSelectionStrategy (selectionStrategy) {\n    this.selectionStrategy = selectionStrategy\n  }\n  /**\n   * Sets onSelection\n   */\n  setOnSelection (onSelection) {\n    this.onSelection = onSelection\n  }\n  /**\n   * Sets linesThreshold\n   */\n  setLinesThreshold (linesThreshold) {\n    this.meshFactory.setLinesThreshold(linesThreshold)\n  }\n  /**\n   * Sets pickingEnabled\n   */\n  setPickingEnabled (pickingEnabled) {\n    this.pickingEnabled = pickingEnabled\n  }\n  /**\n   * Sets cameraHandler\n   */\n  seCameraHandler (cameraHandler) {\n    this.cameraHandler = cameraHandler\n  }\n  /**\n   * Sets setColorHandler\n   */\n  setSetColorHandler (setColorHandler) {\n    this.setColorHandler = setColorHandler\n  }\n}\n"],"mappings":"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","ignoreList":[]}